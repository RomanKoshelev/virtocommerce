<base:ViewBase x:Class="VirtoCommerce.ManagementClient.Asset.View.PickAssetView" xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:inf_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_DataVirtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:assetInfrastructure="clr-namespace:VirtoCommerce.ManagementClient.Asset.Infrastructure"
     xmlns:core_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:DialogsViewModel="VirtoCommerce.ManagementClient.Asset.Dialogs.ViewModel.Implementations"
     xmlns:DialogsView="clr-namespace:VirtoCommerce.ManagementClient.Asset.Dialogs.View"
     xmlns:implementations="clr-namespace:VirtoCommerce.ManagementClient.Asset.ViewModel.Implementations"
     xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity"
     xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     mc:Ignorable="d" Height="550" Width="800" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Asset"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding InputNameDialogRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:DisableableLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonNotifyRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:NotificationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <base:ViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DialogViewTheme/VirtoCommerceDialogTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <assetInfrastructure:FileSizeConverter x:Key="fileSizeConverter" />
            <Style x:Key="AddressBarContainerStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Margin="7,0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                             CommandParameter="{Binding }" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <StackPanel x:Name="Bd" Orientation="Horizontal">
                                    <Image Stretch="None" Source="/VirtoCommerce.ManagementClient.Asset;component/Resources/images/arrow_right.png"
                                         Margin="0,0,8,0" />
                                    <TextBlock Text="{Binding DisplayName}" FontSize="11" TextWrapping="NoWrap" VerticalAlignment="Center" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="#E2E2E2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </base:ViewBase.Resources>
    <Grid d:DataContext="{d:DesignInstance implementations:PickAssetViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="110" />
        </Grid.ColumnDefinitions>
        <ListBox Grid.Column="0" Grid.Row="0" x:Name="AddressBarRegion" ItemsSource="{Binding AddressBarItems}"
             ItemContainerStyle="{StaticResource AddressBarContainerStyle}" MinHeight="24">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Left" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
        <StackPanel Grid.Row="1" Grid.Column="2">
            <Button Content="{Loc Refresh}" Command="{Binding RefreshCommand}" />
            <Button Content="{Loc 'Upload'}" Command="{Binding UploadCommand}" VerticalAlignment="Top"
                 Margin="0,12,0,0" />
            <Button Content="{Loc 'Create folder'}" Command="{Binding CreateFolderCommand}" VerticalAlignment="Top"
                 Margin="0,12,0,0" />
            <Button Content="{Loc 'Rename'}" Command="{Binding RenameCommand}" IsEnabled="{Binding IsItemSelected}"
                 VerticalAlignment="Top" Margin="0,12,0,0" />
            <Button Content="{Loc 'Delete'}" Command="{Binding DeleteCommand}" IsEnabled="{Binding IsItemSelected}"
                 CommandParameter="{Binding }" VerticalAlignment="Top" Margin="0,12,0,0" />
            <Border BorderThickness="1" VerticalAlignment="Top" Margin="0,12,0,0">
                <Image Height="100" Width="100" Source="{Binding SelectedAssetImageSource, Mode=OneWay}" />
            </Border>
        </StackPanel>
        <DataGrid Grid.Row="1" Grid.Column="0" x:Name="AssetItemList" ItemsSource="{Binding SelectedFolderItems}"
             SelectedValue="{Binding ItemListSelectedItem, Mode=OneWayToSource}" GridLinesVisibility="None"
             RowHeaderWidth="0">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{Loc 'Name'}" Width="*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Stretch="None" Source="{Binding IconSource}" />
                                <TextBlock Text="{Binding DisplayName}" Margin="4,0,0,2" VerticalAlignment="Bottom" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="{Loc 'Size'}" Binding="{Binding Size, Converter={StaticResource fileSizeConverter}}"
                     Width="60" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                <DataGridTextColumn Header="{Loc 'Date Modified'}" Binding="{Binding Modified}" Width="156"
                     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                <DataGridTextColumn Header="{Loc 'Type'}" Binding="{Binding DisplayedType}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
            </DataGrid.Columns>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                    <Setter Property="Padding" Value="2,0" />
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                    <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource Virto_Base_DataGridColumnHeader_Style}">
                    <Setter Property="FontWeight" Value="Normal" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>
        <Grid Grid.Row="2" Margin="0,12,0,8" Visibility="{Binding AssetPickMode, Converter={x:Static core_Converters:ToVisibilityConverter.Current}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Loc 'File Name:'}" VerticalAlignment="Center" Margin="0,0,10,0" />
            <core_controls:WatermarkedTextBox Grid.Column="1" Grid.ColumnSpan="2" WatermarkText="{Loc 'no file chosen'}"
                 IsReadOnly="True" Text="{Binding SelectedAsset.FolderItemId}" />
        </Grid>
        <core_DataVirtualization:LoadingAnimation Grid.RowSpan="3" d:IsHidden="True" Visibility="{Binding ShowLoadingAnimation, Converter={x:Static core_Converters:ToVisibilityConverter.Current}}" />
    </Grid>
</base:ViewBase>