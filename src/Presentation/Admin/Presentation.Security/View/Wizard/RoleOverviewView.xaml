<inf:ViewBase x:Class="VirtoCommerce.ManagementClient.Security.View.Wizard.RoleOverviewView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:inf="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:helpers="clr-namespace:VirtoCommerce.ManagementClient.Security.ViewModel.Helpers"
     mc:Ignorable="d" d:DesignHeight="400" Width="600"
	 LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Security">

    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/WizardViewTheme/VirtoCommerceWizardTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="Virto_SmallToolButton_Style" TargetType="Button">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Width" Value="30" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Bd" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                     Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="Icon" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="0" />
                                </Border>
                                <!--overlay: 15 % #fff-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Opacity" TargetName="Icon" Value="0.2" />
                                    <!--inner shadow y-shift: 1px; size: 3px #000 75%-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="MultiSelectControlTemplate" TargetType="{x:Type controls:MultiSelectControl}">
                <Grid Height="350" Width="600" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                     Background="{TemplateBinding Background}">
                    <Grid.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Virto_SmallToolButton_Style}" />
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Stretch" Value="None" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <HeaderedContentControl Grid.Column="0" Margin="0" Header="{TemplateBinding AvailableTitle}"
                         Style="{DynamicResource Multiselect_HeaderedAlternateContentBlock_Style}">
                        <TreeView x:Name="PART_Available_tree" ItemsSource="{Binding AvailableItems}" BorderThickness="1"
                             BorderBrush="LightGray" ScrollViewer.HorizontalScrollBarVisibility="Auto" Width="255">
                            <TreeView.Resources>

                                <DataTemplate x:Key="PermissionViewModelDataTemplate" DataType="{x:Type helpers:PermissionViewModel}">
                                    <Border HorizontalAlignment="Stretch" ToolTip="{Binding Path=InnerItem.Name}" Margin="-15,5,0,5">
                                        <TextBlock Text="{Binding Path=InnerItem.Name, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" Style="{StaticResource Virto_TextBlock_TreeNode_Style}"
                                             Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" />
                                    </Border>
                                </DataTemplate>

                                <HierarchicalDataTemplate DataType="{x:Type helpers:PermissionGroupViewModel}" ItemsSource="{Binding Permissions}"
                                     ItemTemplate="{StaticResource PermissionViewModelDataTemplate}">
                                    <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                         HorizontalAlignment="Stretch">
                                        <CheckBox.Template>
                                            <ControlTemplate>
                                                <DockPanel HorizontalAlignment="Stretch" Margin="-10,5,0,5">
                                                    <TextBlock Text="{Binding InnerItem.DisplayName, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" Style="{StaticResource Virto_TextBlock_RootTreeNode_Style}" />
                                                </DockPanel>
                                            </ControlTemplate>
                                        </CheckBox.Template>
                                    </CheckBox>
                                </HierarchicalDataTemplate>

                            </TreeView.Resources>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsVisible,UpdateSourceTrigger=PropertyChanged}"
                                             Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>

                    </HeaderedContentControl>

                    <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="5" Width="45">
                        <Button Command="{Binding DataContext.SelectItemCommand, RelativeSource={RelativeSource AncestorType=controls:MultiSelectControl}}"
                             CommandParameter="{Binding SelectedItem, ElementName=PART_Available_tree}">
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/arrow_right.png" />
                        </Button>
                        <Button Command="{Binding DataContext.UnSelectItemCommand, RelativeSource={RelativeSource AncestorType=controls:MultiSelectControl}}"
                             CommandParameter="{Binding SelectedItem, ElementName=PART_current_tree}">
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/arrow_left.png" />
                        </Button>
                        <Button Command="{Binding DataContext.SelectAllItemsCommand, RelativeSource={RelativeSource AncestorType=controls:MultiSelectControl}}">
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/arrow_forward.png" />
                        </Button>
                        <Button Command="{Binding DataContext.UnSelectAllItemsCommand, RelativeSource={RelativeSource AncestorType=controls:MultiSelectControl}}">
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/arrow_backward.png" />
                        </Button>
                    </StackPanel>

                    <HeaderedContentControl Grid.Column="2" Margin="0" Header="{TemplateBinding CurrentTitle}"
                         Style="{DynamicResource Multiselect_HeaderedAlternateContentBlock_Style}">
                        <TreeView x:Name="PART_current_tree" ItemsSource="{Binding CurrentItems}" BorderThickness="1"
                             BorderBrush="LightGray" ScrollViewer.HorizontalScrollBarVisibility="Auto" Width="255">
                            <TreeView.Resources>

                                <DataTemplate x:Key="PermissionViewModelDataTemplate" DataType="{x:Type helpers:PermissionViewModel}">
                                    <Border HorizontalAlignment="Stretch" ToolTip="{Binding Path=InnerItem.Name}" Margin="-15,5,0,5">
                                        <TextBlock Text="{Binding Path=InnerItem.Name, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" Style="{StaticResource Virto_TextBlock_TreeNode_Style}"
                                             Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" />
                                    </Border>
                                </DataTemplate>

                                <HierarchicalDataTemplate DataType="{x:Type helpers:PermissionGroupViewModel}" ItemsSource="{Binding Permissions}"
                                     ItemTemplate="{StaticResource PermissionViewModelDataTemplate}">
                                    <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                         HorizontalAlignment="Stretch">
                                        <CheckBox.Template>
                                            <ControlTemplate>
                                                <DockPanel HorizontalAlignment="Stretch" Margin="-10,5,0,5">
                                                    <TextBlock Text="{Binding InnerItem.DisplayName, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" Style="{StaticResource Virto_TextBlock_RootTreeNode_Style}" />
                                                </DockPanel>
                                            </ControlTemplate>
                                        </CheckBox.Template>
                                    </CheckBox>
                                </HierarchicalDataTemplate>

                            </TreeView.Resources>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsVisible,UpdateSourceTrigger=PropertyChanged}"
                                             Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </HeaderedContentControl>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" />
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
		<TextBlock Grid.Row="0" Text="{Loc '* Name:'}" />
        <controls:WatermarkedTextBox Grid.Row="1" Text="{Binding InnerItem.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

        <!--AllAvailablePermissionGroups-->
        <controls:MultiSelectControl Grid.Row="2" Grid.ColumnSpan="2" TextSearchTextPath="Name"
             Template="{StaticResource MultiSelectControlTemplate}" AvailableTitle="{Loc 'Available permissions'}"
             AvailableItems="{Binding AllAvailablePermissionGroupViewModels}" CurrentTitle="{Loc 'Assigned permissions'}"
             CurrentItems="{Binding CurrentPermissionGroupViewModels}">
        </controls:MultiSelectControl>

    </Grid>
</inf:ViewBase>