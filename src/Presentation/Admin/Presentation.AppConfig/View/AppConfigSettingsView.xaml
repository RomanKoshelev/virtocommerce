<base:ViewBase xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     x:Class="VirtoCommerce.ManagementClient.AppConfig.View.AppConfigSettingsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:inf_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:converters="clr-namespace:VirtoCommerce.ManagementClient.AppConfig.Infrastructure.Converters"
     xmlns:core_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_DataVirtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="400" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.AppConfig"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">

    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/SettingsViewTheme/VirtoCommerceSettingsTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<converters:SettingValueCollectionToStringConverter x:Key="SettingValueCollectionToStringConverter" />-->            
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:DisableableLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
        <i:EventTrigger EventName="Loaded">
            <ei:CallMethodAction TargetObject="{Binding }" MethodName="RaiseCanExecuteChanged" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot">

        <i:Interaction.Triggers>
            <prism:InteractionRequestTrigger SourceObject="{Binding CommonWizardDialogRequest, Mode=OneWay}">
                <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:WizardDialog}" />
            </prism:InteractionRequestTrigger>
        </i:Interaction.Triggers>

        <Grid Margin="0,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <ItemsControl Grid.Row="0" Style="{StaticResource Virto_ToolbarItemsControl_Style}">
				<core_controls:MetroButton Command="{Binding RefreshItemListCommand}" Header="{Loc ^REFRESH}"
     ToolTip="{Loc '^Refresh items list'}" Margin="3,0,28,0">
					<core_controls:VectorImage ImageResource="{StaticResource Icon_Button_RefreshList}"
     Width="14" Height="14" />
				</core_controls:MetroButton>
				<core_controls:MetroButton Command="{Binding ItemAddCommand}" Header="{Loc ^ADD}" ToolTip="{Loc 'Add setting'}">
                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                         Width="14" />
                </core_controls:MetroButton>
				<core_controls:MetroButton Command="{Binding ItemEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemsDataGrid}"
     Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit setting'}">
                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                         Width="14" />
                </core_controls:MetroButton>
				<core_controls:MetroButton Command="{Binding ItemDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemsDataGrid}"
     Header="{Loc ^REMOVE}" ToolTip="{Loc 'Delete setting'}">
                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                         Width="14" />
                </core_controls:MetroButton>
            </ItemsControl>

            <DataGrid x:Name="ItemsDataGrid" Grid.Row="1" ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Header="Store Code" Binding="{Binding StoreId}" />-->
					<DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}"
                         Width="Auto" />
                    <!--<DataGridTextColumn Header="Value" Binding="{Binding SettingValues, Converter={StaticResource SettingValueCollectionToStringConverter}, UpdateSourceTrigger=PropertyChanged}" Width="*" />-->
					<!--<DataGridTemplateColumn Header="Value" Width="*">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<DataTemplate.Resources>
									<Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
										<Setter Property="Margin" Value="0"/>
										<Setter Property="FontSize" Value="13"/>
									</Style>
								</DataTemplate.Resources>
								<ItemsControl ItemsSource="{Binding SettingValues}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Orientation="Horizontal"/>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<TextBlock x:Name="txtComma" Text=", "/>
												<TextBlock Text="{Binding .}"/>
											</StackPanel>
											<DataTemplate.Triggers>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
													<Setter TargetName="txtComma" Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
											</DataTemplate.Triggers>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>-->
					<DataGridTextColumn Header="{Loc 'Value'}" Binding="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}"/>
					<DataGridTextColumn Header="{Loc 'Is system'}" Binding="{Binding IsSystem, UpdateSourceTrigger=PropertyChanged}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}"
     Width="Auto" />
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.ItemEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                    </Style>
                </DataGrid.RowStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="RaiseCanExecuteChanged" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>

        </Grid>
        <core_DataVirtualization:LoadingAnimation Visibility="{Binding ShowLoadingAnimation, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={x:Static core_Converters:ToVisibilityConverter.Current}}" />
    </Grid>
</base:ViewBase>
