<UserControl x:Class="VirtoCommerce.ManagementClient.Fulfillment.View.Rmas.RmaView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     mc:Ignorable="d" xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     d:DesignHeight="600" d:DesignWidth="1000" xmlns:fulfillmentInfrastructure="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment.Infrastructure"
     xmlns:converters="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment.Infrastructure.Converters"
     Style="{DynamicResource Virto_Window_Style}" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DetailViewTheme/VirtoCommerceDetailTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:SetIsReadOnlyConverter x:Key="SetIsReadOnlyConverter" />
            <fulfillmentInfrastructure:SetIsEnabledConverter x:Key="SetIsEnabledConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <TabControl x:Name="TabControl" Style="{StaticResource Virto_TabControlHorizontal_Style}">
        <TabItem x:Name="TabItemSummary" Header="{Loc 'Overview'}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Loc 'Created:'}" />
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding InnerItem.Created}" />
                        <TextBlock Grid.Row="1" Text="{Loc 'Status:'}" />
                        <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding InnerItem.Status, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" />
                        <TextBlock Grid.Row="2" Text="{Loc 'Authorization code:'}" />
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding InnerItem.AuthorizationCode}" />
                        <TextBlock Grid.Row="3" Text="{Loc 'Order:'}" />
                        <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding InnerItem.Order.TrackingNumber}" />
                        <TextBlock Grid.Row="4" Text="{Loc 'Customer:'}" />
                        <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding InnerItem.Order.CustomerName}" />
                    </Grid>
                    <TextBlock Grid.Row="1" Text="{Loc 'Notes:'}" />
                    <core_controls:WatermarkedTextBox Grid.Row="2" Height="70" WatermarkText="{Loc 'Enter notes here...'}"
                         VerticalContentAlignment="Top" Text="{Binding InnerItem.Notes, UpdateSourceTrigger=PropertyChanged}"
                         AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" Width="600"
                         HorizontalAlignment="Left" />
                    <TextBlock Grid.Row="3" Text="{Loc 'Return items:'}" />
                    <Grid Grid.Row="4">
                        <DataGrid x:Name="ItemsDataGrid" ItemsSource="{Binding InnerItem.RmaReturnItems}"
                             VerticalScrollBarVisibility="Auto" IsReadOnly="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{Loc 'Reason'}" Binding="{Binding Path=ReturnReason}"
                                     IsReadOnly="True" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                <DataGridTextColumn Header="{Loc 'State'}" Binding="{Binding Path=ItemState}" IsReadOnly="True"
                                     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                <DataGridTextColumn Header="{Loc 'Code'}" Binding="{Binding Path=RmaLineItems[0].LineItem.CatalogItemCode}"
                                     IsReadOnly="True" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding Path=RmaLineItems[0].LineItem.DisplayName}"
                                     IsReadOnly="True" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="{Loc 'Return qty'}" Binding="{Binding Path=RmaLineItems[0].ReturnQuantity, StringFormat={}{0:0.##}}"
                                     IsReadOnly="True" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                <DataGridTemplateColumn Header="{Loc 'Received qty'}" IsReadOnly="{Binding Path=ItemState, Mode=OneWay, Converter={StaticResource SetIsReadOnlyConverter}}"
                                     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <extToolkit:DecimalUpDown Value="{Binding Path=RmaLineItems[0].Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 IsReadOnly="{Binding Path=ItemState, Mode=OneWay, Converter={StaticResource SetIsReadOnlyConverter}}"
                                                 IsEnabled="{Binding Path=ItemState, Mode=OneWay, Converter={StaticResource SetIsEnabledConverter}}"
                                                 Maximum="{Binding Path=RmaLineItems[0].ReturnQuantity}" Minimum="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="{Loc 'Return condition'}" IsReadOnly="{Binding Path=ItemState, Mode=OneWay, Converter={StaticResource SetIsReadOnlyConverter}}"
                                     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding DataContext.AvailableConditions, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, UpdateSourceTrigger=PropertyChanged}"
                                                 SelectedItem="{Binding Path=ReturnCondition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 IsReadOnly="{Binding Path=ItemState, Mode=OneWay, Converter={StaticResource SetIsReadOnlyConverter}}"
                                                 IsEnabled="{Binding Path=ItemState, Mode=OneWay, Converter={StaticResource SetIsEnabledConverter}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Button Grid.Row="4" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Top"
                         Content="{Loc 'Open original order'}" ToolTip="{Loc 'Open Original Order'}" Command="{Binding Path=GoToSelectedOrderCommand}"
                         Width="130" />
                </Grid>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>