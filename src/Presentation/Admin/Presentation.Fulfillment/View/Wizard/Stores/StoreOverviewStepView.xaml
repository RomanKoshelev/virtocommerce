<base:ViewBase x:Class="VirtoCommerce.ManagementClient.Fulfillment.View.Wizard.Stores.StoreOverviewStepView"
     xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:commerceFoundationStoresModel="clr-namespace:VirtoCommerce.Foundation.Stores.Model;assembly=VirtoCommerce.Foundation"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:fulfillmentInfrastructure="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment.Infrastructure"
     xmlns:common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     mc:Ignorable="d" HorizontalAlignment="Left" VerticalAlignment="Top" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/WizardViewTheme/VirtoCommerceWizardTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="AvailableStoreStates" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:TypeExtension TypeName="commerceFoundationStoresModel:StoreState" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid Width="800" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--can't set default style as it's only resolved dynamically-->
        <HeaderedContentControl Header="{Loc 'Store details'}" Style="{DynamicResource Virto_HeaderedContentBlock_Style}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="{Loc '* Code:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.StoreId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         IsReadOnly="{Binding IsSingleDialogEditing}" common:RequiredFieldHelper.IsRequired="True" />
                </StackPanel>
                <StackPanel Grid.Row="0" Grid.Column="2">
                    <TextBlock Text="{Loc '* Name:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         common:RequiredFieldHelper.IsRequired="True" />
                </StackPanel>
                <StackPanel Grid.Row="1">
                    <TextBlock Text="{Loc '* Catalog:'}" />
                    <ComboBox ItemsSource="{Binding AvailableCatalogs}" SelectedValuePath="CatalogId"
                         SelectedValue="{Binding InnerItem.Catalog, Mode=TwoWay}" DisplayMemberPath="Name"
                         common:RequiredFieldHelper.IsRequired="True" />
                    <!-- inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick catalog"-->
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="2">
                    <TextBlock Text="{Loc 'State:'}" />
                    <ComboBox SelectedValue="{Binding InnerItem.StoreState, Converter={x:Static fulfillmentInfrastructure:StoreStatesConverter.Current}}"
                         ItemsSource="{Binding Source={StaticResource AvailableStoreStates}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={x:Static fulfillmentInfrastructure:StoreStatesConverter.Current}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0">
                    <TextBlock Text="{Loc 'Description:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Style="{StaticResource Virto_Multiline_WatermarkedTextBox_Style}" WatermarkText=""
                         Height="100" Width="Auto" HorizontalAlignment="Stretch" />
                </StackPanel>
            </Grid>
        </HeaderedContentControl>
        <HeaderedContentControl Header="{Loc 'Contact information'}" Grid.Row="1" Style="{DynamicResource Virto_HeaderedContentBlock_Style}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="{Loc 'Store URL:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.Url, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <StackPanel Grid.Column="2">
                    <TextBlock Text="{Loc 'Secure URL:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.SecureUrl, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <StackPanel Grid.Row="1">
                    <TextBlock Text="{Loc 'Store Country:'}" />
                    <ComboBox ItemsSource="{Binding AvailableCountries}" SelectedValuePath="CountryId"
                         SelectedValue="{Binding InnerItem.Country, Mode=TwoWay}" DisplayMemberPath="Name"
                         x:Name="countries" />
                    <!-- inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick country"-->
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="2">
                    <TextBlock Text="{Loc 'Store Region:'}" />
                    <ComboBox ItemsSource="{Binding SelectedItem.Regions, ElementName=countries}" SelectedValuePath="RegionId"
                         SelectedValue="{Binding InnerItem.Region, Mode=TwoWay}" DisplayMemberPath="DisplayName" />
                    <!-- inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick country region"-->
                </StackPanel>
                <StackPanel Grid.Row="2">
                    <TextBlock Text="{Loc 'Store Email:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.Email, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="2">
                    <TextBlock Text="{Loc 'Store Admin Email:'}" />
                    <core_controls:WatermarkedTextBox Text="{Binding InnerItem.AdminEmail, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <StackPanel Grid.Row="3">
                    <TextBlock Text="{Loc 'Fulfillment Center:'}" />
                    <ComboBox ItemsSource="{Binding AvailableFulfillmentCenters}" SelectedValuePath="FulfillmentCenterId"
                         SelectedValue="{Binding InnerItem.FulfillmentCenterId, Mode=TwoWay}" DisplayMemberPath="Name" />
                    <!-- inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick fulfillment center" -->
                </StackPanel>
                <StackPanel Grid.Row="3" VerticalAlignment="Top" Grid.Column="2">
                    <TextBlock Text="{Loc 'Returns Fulfillment Center:'}" />
                    <ComboBox ItemsSource="{Binding AvailableReturnFulfillmentCenters}" SelectedValuePath="FulfillmentCenterId"
                         SelectedValue="{Binding InnerItem.ReturnsFulfillmentCenterId, Mode=TwoWay}" DisplayMemberPath="Name">
                        <!-- inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick returns fulfillment center"-->
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Row="4">
                    <TextBlock Text="{Loc 'Operational Timezone:'}" />
                    <ComboBox ItemsSource="{Binding AvailableTimezones}" SelectedValuePath="Id" SelectedValue="{Binding InnerItem.TimeZone, Mode=TwoWay}"
                         DisplayMemberPath="DisplayName" />
                    <!-- inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick time zone"-->
                </StackPanel>
            </Grid>
        </HeaderedContentControl>
    </Grid>
</base:ViewBase>