<base:ViewBase x:Class="VirtoCommerce.ManagementClient.Fulfillment.View.CreatePicklistView"
     xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_virtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib" xmlns:sys="clr-namespace:System;assembly=mscorlib"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:implementations="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment.ViewModel.Wizard.Implementations"
     mc:Ignorable="d" Width="600" Height="400" VerticalAlignment="Top" d:DataContext="{d:DesignInstance implementations:CreatePicklistStepViewModel}"
     xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DialogViewTheme/VirtoCommerceDialogTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <i:Interaction.Triggers>
            <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
                <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
            </prism:InteractionRequestTrigger>
        </i:Interaction.Triggers>
        <TextBlock Text="{Loc 'Fulfillment center:'}" />
        <ComboBox ItemsSource="{Binding AvailableFulfillments}" SelectedItem="{Binding SelectedFulfillmentCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
             Grid.Row="1">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock x:Name="textBlock" Text="{Binding Name}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <TextBlock Grid.Row="2">
            <TextBlock.Text>
                <!-- Text={Binding SelectedFulfillmentCenter.MaxReleasesPerPickBatch, StringFormat='Max. releases per pick batch:  {0}'} -->
                <LocBinding ResourceKey="Max. releases per pick batch:  {0}">
                    <Binding Path="SelectedFulfillmentCenter.MaxReleasesPerPickBatch" />
                </LocBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock Text="{Loc 'Shipments list:'}" Grid.Row="3" />
        <DataGrid x:Name="ItemsDataGrid" ItemsSource="{Binding Shipments}" Grid.Row="4">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{Loc 'Select'}" Width="Auto" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=base:ViewBase}, Path=DataContext.UpdateSelectedItemsChangedCommand}"
                                             CommandParameter="{Binding ElementName=ItemsDataGrid, Path=SelectedItem}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Header="Address" Binding="{Binding Path=Address}" Width="*"  FontSize="12"/>-->
                <DataGridTextColumn Header="{Loc 'Last update'}" Binding="{Binding Path=LastModified}"
                     FontSize="12" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                <DataGridTextColumn Header="{Loc 'Shipping Method'}" Binding="{Binding Path=ShippingMethodName}"
                     FontSize="12" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                <DataGridTextColumn Header="{Loc 'Customer'}" Binding="{Binding Path=Customer}" Width="*"
                     FontSize="12" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                <DataGridTextColumn Header="{Loc 'Id'}" Binding="{Binding Path=ShipmentId}" Width="*"
                     FontSize="12" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                <DataGridTextColumn Header="{Loc 'Items qty'}" Binding="{Binding Path=OverallItems}"
                     Width="*" FontSize="12" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <ei:DataTrigger Binding="{Binding IsInitializing}" Value="True">
                    <ei:ChangePropertyAction TargetName="LoadingAnimation" PropertyName="Visibility" Value="{x:Static Visibility.Visible}" />
                </ei:DataTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <core_virtualization:LoadingMetroAnimation x:Name="LoadingAnimation" Grid.Row="4"
             Background="Transparent" Visibility="Visible" ShowText="True" Text="{Loc 'Loading shipments'}"
             AnimationColor="Black">
            <i:Interaction.Triggers>
                <ei:DataTrigger Binding="{Binding IsInitializing}" Value="False">
                    <ei:ChangePropertyAction TargetName="LoadingAnimation" PropertyName="Visibility" Value="{x:Static Visibility.Hidden}" />
                </ei:DataTrigger>
            </i:Interaction.Triggers>
        </core_virtualization:LoadingMetroAnimation>
    </Grid>
</base:ViewBase>