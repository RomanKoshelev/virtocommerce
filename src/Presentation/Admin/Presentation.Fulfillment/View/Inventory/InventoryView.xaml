<UserControl x:Class="VirtoCommerce.ManagementClient.Fulfillment.View.Inventory.InventoryView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     mc:Ignorable="d" xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:inf_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:model="clr-namespace:VirtoCommerce.Foundation.Inventories.Model;assembly=VirtoCommerce.Foundation"
     d:DesignHeight="600" d:DesignWidth="1000" xmlns:common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     Style="{DynamicResource Virto_Window_Style}" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Fulfillment"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DetailViewTheme/VirtoCommerceDetailTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <TabControl x:Name="tabControl" Style="{StaticResource Virto_TabControlHorizontal_Style}">
        <TabItem x:Name="tabItemSummary" Header="{Loc 'Overview'}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="800">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="{Loc 'Inventory id:'}" />
                            <TextBlock Text="{Binding InnerItem.InventoryId}" Margin="10,12,0,8" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <TextBlock Text="{Loc 'Fulfillment center:'}" />
                            <TextBlock Text="{Binding InnerItem.FulfillmentCenterId}" Margin="10,12,0,8" />
                        </StackPanel>
                        <StackPanel Grid.Row="2">
                            <TextBlock Text="{Loc 'Status:'}" />
                            <!--<ComboBox ItemsSource="{Binding Source={StaticResource StatusesFromEnum}}" SelectedItem="{Binding Path=Status, Mode=TwoWay}" />-->
                            <ComboBox ItemsSource="{Binding AvailableStatuses}" SelectedValue="{Binding InnerItem.Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 SelectedValuePath="Id">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="availableStatusesTextBlock" Text="{Binding Name, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <Grid Grid.Row="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Text="{Loc 'In Stock Quantity:'}" />
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding InnerItem.InStockQuantity}"
                                 Margin="10,12,0,8" />
                            <Button Grid.Row="1" Grid.Column="0" Content="{Loc 'Edit quantity'}" Margin="2,0,2,2"
                                 Command="{Binding InStockQuantityEditCommand}" Style="{StaticResource Virto_Button_Secondary_Style}"
                                 Width="auto" />
                            <TextBlock Grid.Row="2" Text="{Loc 'Reserved Quantity:'}" />
                            <core_controls:WatermarkedTextBox Grid.Row="3" Grid.ColumnSpan="2" Text="{Binding InnerItem.ReservedQuantity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </Grid>
                        <StackPanel Grid.Row="4">
                            <TextBlock Text="{Loc 'Reorder Min. Quantity:'}" />
                            <core_controls:WatermarkedTextBox Text="{Binding InnerItem.ReorderMinQuantity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <CheckBox Grid.Row="0" Content="{Loc 'Allow preorder'}" IsChecked="{Binding InnerItem.AllowPreorder, Mode=TwoWay}"
                             Margin="0,12,0,8" />
                        <StackPanel Grid.Row="1">
                            <TextBlock Text="{Loc 'Preorder Quantity:'}" />
                            <core_controls:WatermarkedTextBox Text="{Binding InnerItem.PreorderQuantity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </StackPanel>
                        <StackPanel Grid.Row="2">
                            <TextBlock Text="{Loc 'Preorder available:'}" />
                            <DatePicker SelectedDate="{Binding InnerItem.PreorderAvailabilityDate, Mode=TwoWay, ValidatesOnDataErrors=True}">
                                <DatePicker.Style>
                                    <Style TargetType="DatePicker">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPreorderError}" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource Virto_Control_IsRequiredField_Brush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPreorderError}" Value="False">
                                                <Setter Property="BorderBrush" Value="{DynamicResource Virto_MetroWindow_BorderBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DatePicker.Style>
                            </DatePicker>
                        </StackPanel>
                        <CheckBox Grid.Row="3" Content="{Loc 'Allow backorder'}" IsChecked="{Binding InnerItem.AllowBackorder, Mode=TwoWay}"
                             Margin="0,12,0,8" />
                        <StackPanel Grid.Row="4">
                            <TextBlock Text="{Loc 'Backorder Quantity:'}" />
                            <core_controls:WatermarkedTextBox Text="{Binding InnerItem.BackorderQuantity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </StackPanel>
                        <StackPanel Grid.Row="5">
                            <TextBlock Text="{Loc 'Backorder available:'}" />
                            <DatePicker SelectedDate="{Binding InnerItem.BackorderAvailabilityDate, Mode=TwoWay, ValidatesOnDataErrors=True}">
                                <DatePicker.Style>
                                    <Style TargetType="DatePicker">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsBackorderError}" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource Virto_Control_IsRequiredField_Brush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsBackorderError}" Value="False">
                                                <Setter Property="BorderBrush" Value="{DynamicResource Virto_MetroWindow_BorderBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DatePicker.Style>
                            </DatePicker>
                        </StackPanel>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>