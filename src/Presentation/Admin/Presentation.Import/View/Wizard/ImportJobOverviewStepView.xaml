<inf:ViewBase x:Class="VirtoCommerce.ManagementClient.Import.View.Wizard.ImportJobOverviewStepView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:converters="clr-namespace:VirtoCommerce.ManagementClient.Import.Infrastructure"
     xmlns:inf="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:dialogs="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     mc:Ignorable="d" Width="600" MinHeight="300" VerticalAlignment="Top" HorizontalAlignment="Left"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Import">

	<FrameworkElement.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/WizardViewTheme/VirtoCommerceWizardTheme.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource Virto_ToolButton_Style}">
				<Setter Property="Margin" Value="10,0,0,12" />
				<Setter Property="Foreground" Value="Black" />
			</Style>
			<converters:ImportEntityTypeConverter x:Key="EntityTypeConverter" />
		</ResourceDictionary>
	</FrameworkElement.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="40" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>

		<i:Interaction.Triggers>
			<prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
				<dialogs:InteractionDialogAction DialogType="{x:Type dialogs:ConfirmationLocalModalInteractionDialog}" />
			</prism:InteractionRequestTrigger>
		</i:Interaction.Triggers>

		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<!-- Importing type -->
			<TextBlock Grid.Row="0" Text="{Loc '* Importing item data type:'}" Visibility="{Binding IsTypeSelectable, Converter={StaticResource booleanToVisibilityConverter}}" />
			<ComboBox Grid.Row="1" ItemsSource="{Binding EntityImporters}" IsEnabled="{Binding IsInEditMode}"
     SelectedValue="{Binding InnerItem.EntityImporter, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EntityTypeConverter}}"
     Visibility="{Binding IsTypeSelectable, Converter={StaticResource booleanToVisibilityConverter}}">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged">
						<i:InvokeCommandAction Command="{Binding UpdateImportTypeCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ComboBox>

			<!-- Property set -->
			<TextBlock Grid.Row="2" Text="{Loc 'Property set:'}" Visibility="{Binding IsPropertySetSelectable, Converter={StaticResource booleanToVisibilityConverter}}" />
			<ComboBox Grid.Row="3" ItemsSource="{Binding PropertySets}" SelectedValue="{Binding InnerItem.PropertySetId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
     SelectedValuePath="PropertySetId" IsEnabled="{Binding IsInEditMode}" DisplayMemberPath="Name"
     Visibility="{Binding IsPropertySetSelectable, Converter={StaticResource booleanToVisibilityConverter}}">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged">
						<i:InvokeCommandAction Command="{Binding UpdatePropertySetCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ComboBox>

			<!-- Name -->
			<TextBlock Grid.Row="4" Text="{Loc '* Name:'}" />
			<controls:WatermarkedTextBox Grid.Row="5" Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

			<!-- Errors -->
			<TextBlock Grid.Row="6" Text="{Loc '* Errors allowed during import:'}" />
			<extToolkit:IntegerUpDown Grid.Row="7" Minimum="0" Value="{Binding InnerItem.MaxErrorsCount, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

			<!-- Import step -->
			<TextBlock Grid.Row="8">
				<TextBlock.Text>
					<!-- Text={Binding InnerItem.ImportStep, StringFormat='Import step (import every {0} entry):'} -->
					<LocBinding ResourceKey="Import step (import every {0} entry):">
						<Binding Path="InnerItem.ImportStep" />
					</LocBinding>
				</TextBlock.Text></TextBlock>
			<extToolkit:IntegerUpDown Grid.Row="9" Minimum="1" Value="{Binding InnerItem.ImportStep, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />


		</Grid>
		<Grid Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>

			<!-- Catalog -->
			<TextBlock Grid.Row="0" Text="{Loc '* Catalog:'}" Visibility="{Binding IsCatalogSelectable, Converter={StaticResource booleanToVisibilityConverter}}" />
			<ComboBox Grid.Row="1" ItemsSource="{Binding Catalogs}" IsEnabled="{Binding IsInEditMode}"
     DisplayMemberPath="Name" SelectedValuePath="CatalogId" SelectedValue="{Binding InnerItem.CatalogId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
     Visibility="{Binding IsCatalogSelectable, Converter={StaticResource booleanToVisibilityConverter}}">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged">
						<i:InvokeCommandAction Command="{Binding UpdateCatalogCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ComboBox>

			<!-- CSV template -->
			<TextBlock Grid.Row="2" Text="{Loc '* CSV Template File:'}" />
			<Grid Grid.Row="3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<controls:WatermarkedTextBox Text="{Binding InnerItem.TemplatePath, Mode=OneWay}"
     WatermarkText="{Loc '^File not selected'}" IsReadOnly="True" />
				<Button Content="{Loc '^Select file'}" Command="{Binding FilePickCommand}" Width="Auto"
     Grid.Column="1" Margin="10,0,0,0" />
			</Grid>

			<!-- Column delimiter -->
			<TextBlock Grid.Row="4" Text="{Loc '* Column delimiter:'}" />
			<Grid Grid.Row="5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="110" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<ComboBox ItemsSource="{Binding ColumnDelimiters}" SelectedValue="{Binding InnerItem.ColumnDelimiter, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
     DisplayMemberPath="DisplayName" SelectedValuePath="Value">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="SelectionChanged">
							<i:InvokeCommandAction Command="{Binding UpdateColumnDelimiterCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</ComboBox>
				<controls:WatermarkedTextBox WatermarkText="{Loc 'Enter custom delimiter...'}"
     Text="{Binding InnerItem.ColumnDelimiter}" Grid.Column="1" IsReadOnly="{Binding IsCustomDelimiterSelected}"
     Margin="10,0,0,0" />

			</Grid>

			<!-- Start index -->
			<TextBlock Grid.Row="6" Text="{Loc 'Start index:'}" />
			<extToolkit:IntegerUpDown Grid.Row="7" Minimum="1" Value="{Binding InnerItem.StartIndex, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

			<!-- Import count -->
			<TextBlock Grid.Row="8" Text="{Loc 'Import count (import all by default):'}" />
			<extToolkit:IntegerUpDown Grid.Row="9" Minimum="0" Value="{Binding InnerItem.ImportCount, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
		</Grid>
	</Grid>
</inf:ViewBase>