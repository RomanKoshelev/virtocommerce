<base:ViewBase xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     x:Class="VirtoCommerce.ManagementClient.Import.View.ColumnMappingView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns:core_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     mc:Ignorable="d" d:DesignHeight="400" Width="400" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Import"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">

	<FrameworkElement.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DialogViewTheme/VirtoCommerceDialogTheme.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<core_Converters:CultureConverter x:Key="cultureConverter" />
		</ResourceDictionary>
	</FrameworkElement.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="3*" />
			<ColumnDefinition Width="7*" />
		</Grid.ColumnDefinitions>

		<TextBlock Grid.Row="0" Grid.Column="0" Text="{Loc 'Entity column:'}" />
		<TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding InnerItem.MappingItem.DisplayName}"
     FontWeight="Bold" />

		<TextBlock Grid.Row="1" Grid.Column="0" Text="{Loc 'Locale:'}" Visibility="{Binding IsLocaleAvailable, Converter={StaticResource booleanToVisibilityConverter}}" />
		<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding InnerItem.MappingItem.Locale, Converter={StaticResource cultureConverter}}"
     FontWeight="Bold" Visibility="{Binding IsLocaleAvailable, Converter={StaticResource booleanToVisibilityConverter}}" />

		<TextBlock Grid.Row="2" Text="{Loc 'CSV column:'}" />

		<ComboBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding InnerItem.CsvColumnsList}"
     SelectedValue="{Binding InnerItem.MappingItem.CsvColumnName, Mode=TwoWay}">
			<ComboBox.ItemTemplate>
				<DataTemplate>
					<Grid>
						<TextBlock x:Name="columnBlock" Text="{Binding }" />
					</Grid>
					<DataTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding SelectedIndex, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Value="0" />
								<Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="columnBlock" Property="FontStyle" Value="Italic" />
						</MultiDataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="SelectionChanged">
					<ei:CallMethodAction TargetObject="{Binding }" MethodName="RaiseCanExecuteChanged" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</ComboBox>

		<TextBlock Grid.Row="4" Text="{Loc 'Custom value:'}" />
		<core_controls:WatermarkedTextBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
			 Text="{Binding InnerItem.MappingItem.CustomValue}" Visibility="{Binding ColumnIsNotEnum, Converter={StaticResource booleanToVisibilityConverter}}"
			 WatermarkText="{Loc 'Enter custom value...'}" IsEnabled="{Binding IsColumnSelected}" />
		<ComboBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding ColumnIsEnum, Converter={StaticResource booleanToVisibilityConverter}}"
			 IsEnabled="{Binding IsColumnSelected}" ItemsSource="{Binding InnerItem.ImportProperty.EnumValues}"
			 SelectedValue="{Binding InnerItem.MappingItem.CustomValue, Mode=TwoWay}">
			<ComboBox.ItemTemplate>
				<DataTemplate>
					<Grid>
						<TextBlock x:Name="textBlock" Text="{Binding }" />
					</Grid>
					<DataTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Text, ElementName=textBlock}" Value="Default" />
								<Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="textBlock" Property="FontStyle" Value="Italic" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Text, ElementName=textBlock}" Value="Select value..." />
								<Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
     Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="textBlock" Property="FontStyle" Value="Italic" />
						</MultiDataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ComboBox.ItemTemplate>
		</ComboBox>

		<TextBlock Grid.Row="6" Grid.ColumnSpan="2" Text="{Loc 'Value format ({0} - stands for value):'}" />
		<core_controls:WatermarkedTextBox Grid.Row="7" Grid.ColumnSpan="2" Text="{Binding InnerItem.MappingItem.StringFormat}"
     WatermarkText="{Loc 'Enter value formatting if required...'}" />

		<StackPanel>








		</StackPanel>
	</Grid>
</base:ViewBase>
