<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls"
     xmlns:core_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters"
     xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:core_virtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization"
     xmlns:common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common"
     mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/BaseTheme/WPF_BaseTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="{x:Type core_controls:MetroWindow}" TargetType="{x:Type core_controls:MetroWindow}">
        <Setter Property="Background" Value="{DynamicResource Virto_MetroWindow_BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Virto_MetroWindow_BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Virto_MetroWindow_ForegroundBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--<Setter Property="WindowState" Value="Maximized"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:MetroWindow}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid x:Name="PART_LayoutRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_Caption" Grid.Row="0" Background="{DynamicResource Virto_MetroWindow_CaptionBackgroundBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="PART_Title" Grid.Column="0" Grid.Row="0" Text="{TemplateBinding Title}"
                                     HorizontalAlignment="Center" Margin="-50,5,0,5" />
                                <Decorator x:Name="PART_TitleBarHost" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" />
                                <Grid Grid.Column="1" Grid.Row="0" Margin="5" WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_Minimize" Grid.Column="0" Style="{StaticResource Virto_Base_SmallMinimizeButton_Style}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:EventTrigger.Actions>
                                                    <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                         PropertyName="WindowState" Value="Minimized" />
                                                </i:EventTrigger.Actions>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button x:Name="PART_Maximize" Grid.Column="1" Style="{StaticResource Virto_Base_SmallMaximizeButton_Style}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:EventTrigger.Actions>
                                                    <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                         PropertyName="WindowState" Value="Maximized" />
                                                </i:EventTrigger.Actions>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button x:Name="PART_Restore" Grid.Column="1" Style="{StaticResource Virto_Base_SmallRestoreButton_Style}"
                                         Visibility="Hidden">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:EventTrigger.Actions>
                                                    <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                         PropertyName="WindowState" Value="Normal" />
                                                </i:EventTrigger.Actions>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button x:Name="PART_Close" Grid.Column="2" Style="{StaticResource Virto_Base_SmallCloseButton_Style}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                     MethodName="Close" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Grid>
                            </Grid>
                            <AdornerDecorator Grid.Row="1" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                                 TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </AdornerDecorator>
                            <ResizeGrip x:Name="PART_Grip" Grid.Row="1" WindowChrome.ResizeGripDirection="BottomRight"
                                 IsTabStop="False" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="None">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Title" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Close" Property="Visibility" Value="Collapsed" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="ToolWindow">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Grip" Property="Visibility" Value="Visible" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowStyle" Value="{x:Static WindowStyle.None}">
                <Setter Property="ResizeMode" Value="NoResize" />
            </Trigger>
            <Trigger Property="WindowStyle" Value="{x:Static WindowStyle.ToolWindow}">
                <Setter Property="ResizeMode" Value="NoResize" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Virto_Base_SearchTextBox_Style" TargetType="{x:Type core_controls:SearchTextBox}"
         BasedOn="{StaticResource Virto_InputControl_Style}">
        <Setter Property="Cursor" Value="IBeam" />
        <!--<Setter Property="LabelText" Value="{Loc '^Enter keywords...'}" />-->
        <!--<Setter Property="LabelText" Value="Enter keywords..." />-->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:SearchTextBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}">
                        <Grid x:Name="LayoutGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" />
                            <TextBlock x:Name="WatermarkText" Margin="2" Grid.Column="0" Style="{StaticResource Virto_Base_TextBlock_Watermark_Style}"
                                 Text="{TemplateBinding LabelText}" Visibility="Hidden" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Border x:Name="PART_SearchIconBorder" Grid.Column="1" BorderThickness="0" VerticalAlignment="Stretch"
                                 HorizontalAlignment="Stretch" BorderBrush="{DynamicResource Virto_TextBox_Search_IconBorder_Brush}"
                                 Background="{DynamicResource Virto_TextBox_Search_IconBackground_Brush}" Margin="2">
                                <Image x:Name="SearchIcon" Width="17" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
                                     Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/search.png" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                        <Trigger Property="HasText" Value="False">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible" />
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Virto_TextBox_Watermark_Background_Brush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Hidden" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasText" Value="True" />
                                <Condition Property="SearchMode" Value="Instant" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Source" TargetName="SearchIcon" Value="/VirtoCommerce.ManagementClient.Core;component/Themes/images/clear.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_SearchIconBorder" Value="True" />
                                <Condition Property="HasText" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="PART_SearchIconBorder" Value="{DynamicResource Virto_TextBox_Search_IconBorder_MouseOver_Brush}" />
                            <Setter Property="Background" TargetName="PART_SearchIconBorder" Value="{DynamicResource Virto_TextBox_Search_IconBackground_MouseOver_Brush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_SearchIconBorder" Value="True" />
                                <Condition Property="IsMouseLeftButtonDown" Value="True" />
                                <Condition Property="HasText" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Padding" TargetName="PART_SearchIconBorder" Value="2,0,0,0" />
                            <Setter Property="BorderBrush" TargetName="PART_SearchIconBorder" Value="{DynamicResource Virto_TextBox_Search_IconBorder_MouseOver_Brush}" />
                            <Setter Property="Background" TargetName="PART_SearchIconBorder" Value="{DynamicResource Virto_TextBox_Search_IconBackground_MouseOver_Brush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Virto_Base_EasySearchTextBox_Style" TargetType="{x:Type core_controls:SearchTextBox}"
         BasedOn="{StaticResource Virto_Base_SearchTextBox_Style}">
        <Setter Property="LabelText" Value="Enter..." />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:SearchTextBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}">
                        <Grid x:Name="LayoutGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" />
                            <TextBlock x:Name="WatermarkText" Margin="2" Grid.Column="0" Style="{StaticResource Virto_Base_TextBlock_Watermark_Style}"
                                 Text="{TemplateBinding LabelText}" Visibility="Hidden" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Hidden" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                        <Trigger Property="HasText" Value="False">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible" />
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Virto_TextBox_Watermark_Background_Brush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Hidden" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--WatermarkedTextBox-->
    <Style x:Key="Virto_Base_WatermarkTextBox_Style" TargetType="{x:Type core_controls:WatermarkedTextBox}"
         BasedOn="{StaticResource Virto_InputControl_Style}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource Virto_TextBox_ErrorTemplate_ControlTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:WatermarkedTextBox}">
                    <Border x:Name="Bd" Width="{TemplateBinding Width}" MaxWidth="{TemplateBinding Width}"
                         Height="{TemplateBinding Height}" MaxHeight="{TemplateBinding Height}" Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="0" ClipToBounds="True">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />
                            <TextBlock x:Name="WatermarkText" Margin="2" Grid.Column="0" Style="{StaticResource Virto_Base_TextBlock_Watermark_Style}"
                                 Text="{TemplateBinding WatermarkText}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Visibility="Hidden" />
                            <TextBlock Margin="2" Text="{TemplateBinding Text}" x:Name="TrimmedText" TextTrimming="CharacterEllipsis"
                                 TextWrapping="{TemplateBinding TextWrapping}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Style="{StaticResource Virto_Base_TextBlock_Style}" Visibility="Hidden" ToolTip="{TemplateBinding Text}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Opacity" Value="0.3" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderDisable_Brush}" />
                        </Trigger>
                        <Trigger Property="HasText" Value="False">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasText" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Virto_TextBox_Watermark_Background_Brush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Visibility" TargetName="TrimmedText" Value="Visible" />
                            <Setter Property="Visibility" TargetName="PART_ContentHost" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="TrimmedText" Value="Hidden" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Virto_TextBox_Watermark_Background_Brush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=(common:RequiredFieldHelper.IsRequired)}"
                                     Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text.Length}"
                                     Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Virto_Control_IsRequiredField_Brush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Multiline WatermarkedTextBox-->
    <Style x:Key="Virto_Base_Multiline_WatermarkedTextBox_Style" TargetType="{x:Type core_controls:WatermarkedTextBox}"
         BasedOn="{StaticResource Virto_Base_WatermarkTextBox_Style}">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <ControlTemplate x:Key="Virto_IntergerUpDown_ErrorTemplate_ControlTemplate">
        <ControlTemplate.Resources>
            <core_Converters:BooleanOrMultivalueConverter x:Key="BooleanOrMultivalueConverter" />
        </ControlTemplate.Resources>
        <StackPanel Orientation="Vertical">
            <Border BorderThickness="1.5" BorderBrush="{DynamicResource Virto_TextBox_ErrorTemplate_Border_BorderBrush}"
                 CornerRadius="0" VerticalAlignment="Top" Margin="0,0,0,1">
                <Grid>
                    <Polyline Grid.ZIndex="3" Points="7,7 0,0" Margin="-1" HorizontalAlignment="Right"
                         StrokeThickness="1.5" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="White"
                         VerticalAlignment="Top" IsHitTestVisible="True" />
                    <AdornedElementPlaceholder x:Name="adorner" />
                </Grid>
            </Border>
            <Border x:Name="errorBorder" Background="{DynamicResource Virto_TextBox_ErrorTemplate_Border_Background}"
                 Opacity="1" CornerRadius="0" IsHitTestVisible="False" MaxWidth="{Binding ElementName=adorner, Path=ActualWidth}"
                 MinHeight="30">
                <TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                     Foreground="White" Margin="8,3,8,3" TextWrapping="WrapWithOverflow" FontSize="14" />
            </Border>
        </StackPanel>
    </ControlTemplate>
    <!--extended Toolkit styles: IntegerUpDown -->
    <ControlTemplate x:Key="ButtonSpinner_ControlTemplate" TargetType="{x:Type extToolkit:ButtonSpinner}">
        <Grid>
            <Border x:Name="ElementContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                 Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0">
                <DockPanel Focusable="False">
                    <Grid DockPanel.Dock="Right" Visibility="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static core_Converters:ToVisibilityConverter.Current}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PART_IncreaseButton" ClickMode="Press" Cursor="Hand" IsTabStop="{Binding IsTabStop, RelativeSource={RelativeSource TemplatedParent}}"
                             Grid.Row="0" SnapsToDevicePixels="True">
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                         ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                            <Grid Background="Transparent">
                                <!--<Microsoft_Windows_Controls_Chromes:ButtonChrome CornerRadius="0" RenderMouseOver="{Binding IsMouseOver, ElementName=IncreaseButton}" RenderPressed="{Binding IsPressed, ElementName=IncreaseButton}" RenderEnabled="{TemplateBinding IsEnabled}"/>-->
                                <ContentControl Focusable="False" Margin="5,1">
                                    <ContentControl.ContentTemplate>
                                        <DataTemplate>
                                            <Path Fill="Black" Height="4" Width="7" Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" />
                                        </DataTemplate>
                                    </ContentControl.ContentTemplate>
                                </ContentControl>
                            </Grid>
                        </RepeatButton>
                        <RepeatButton x:Name="PART_DecreaseButton" ClickMode="Press" Cursor="Hand" IsTabStop="{Binding IsTabStop, RelativeSource={RelativeSource TemplatedParent}}"
                             Grid.Row="2" SnapsToDevicePixels="True">
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                         ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                            <Grid Background="Transparent">
                                <!--<Microsoft_Windows_Controls_Chromes:ButtonChrome CornerRadius="0" RenderMouseOver="{Binding IsMouseOver, ElementName=DecreaseButton}" RenderPressed="{Binding IsPressed, ElementName=DecreaseButton}" RenderEnabled="{TemplateBinding IsEnabled}" BorderThickness="1,0,1,1"/>-->
                                <ContentControl Focusable="False" Margin="5,1">
                                    <ContentControl.ContentTemplate>
                                        <DataTemplate>
                                            <Path Fill="Black" Height="4" Width="7" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" />
                                        </DataTemplate>
                                    </ContentControl.ContentTemplate>
                                </ContentControl>
                            </Grid>
                        </RepeatButton>
                    </Grid>
                    <ContentControl x:Name="presentationSite" Content="{TemplateBinding Content}" Focusable="False"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </DockPanel>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="Virto_Base_IntegerUpDown_Style" TargetType="{x:Type extToolkit:IntegerUpDown}"
         BasedOn="{StaticResource Virto_InputControl_Style}">
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Minimum" Value="1" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="IsManipulationEnabled" Value="True" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="AllowSpin" Value="True" />
        <Setter Property="ShowButtonSpinner" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource Virto_IntergerUpDown_ErrorTemplate_ControlTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <extToolkit:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                         BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                         IsTabStop="False" ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                         Template="{StaticResource ButtonSpinner_ControlTemplate}" BorderBrush="{TemplateBinding BorderBrush}">
                        <extToolkit:WatermarkTextBox x:Name="PART_TextBox" AcceptsReturn="False" BorderThickness="0"
                             Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                             FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"
                             FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"
                             FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                             Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}"
                             WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                             Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="NoWrap"
                             VerticalContentAlignment="Center" MinWidth="{TemplateBinding Width}" Padding="0,0,20,0">
                            <extToolkit:WatermarkTextBox.IsReadOnly>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                </Binding>
                            </extToolkit:WatermarkTextBox.IsReadOnly>
                        </extToolkit:WatermarkTextBox>
                    </extToolkit:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Virto_Base_DecimalUpDown_Style" TargetType="{x:Type extToolkit:DecimalUpDown}"
         BasedOn="{StaticResource Virto_InputControl_Style}">
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="IsManipulationEnabled" Value="True" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="AllowSpin" Value="True" />
        <Setter Property="ShowButtonSpinner" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource Virto_IntergerUpDown_ErrorTemplate_ControlTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <extToolkit:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                         BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                         IsTabStop="False" ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                         Template="{StaticResource ButtonSpinner_ControlTemplate}" BorderBrush="{TemplateBinding BorderBrush}">
                        <extToolkit:WatermarkTextBox x:Name="PART_TextBox" AcceptsReturn="False" BorderThickness="0"
                             Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                             FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"
                             FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"
                             FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                             Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}"
                             WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                             Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="NoWrap"
                             VerticalContentAlignment="Center" MinWidth="{TemplateBinding Width}" Padding="0,0,20,0">
                            <extToolkit:WatermarkTextBox.IsReadOnly>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                </Binding>
                            </extToolkit:WatermarkTextBox.IsReadOnly>
                        </extToolkit:WatermarkTextBox>
                    </extToolkit:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Virto_TextBox_BorderMouseOver_Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <!--extended Toolkit styles: IntegerUpDown -->
    <!--Round metro button-->
    <Style TargetType="{x:Type core_controls:MetroButton}" x:Key="Virto_Base_MetroButton_Style">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="EllipseHeight" Value="20" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <!--<Setter Property="Foreground" Value="{DynamicResource Virto_MetroButton_Foreground-EllipseStroke_Brush}"/>-->
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="IsEnabled" Value="True">
        </Setter>
        <Setter Property="Visibility" Value="Visible">
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:MetroButton}">
                    <Border x:Name="rootBorder" Opacity="1" Padding="1" CornerRadius="0" BorderThickness="0"
                         TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}"
                         Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="Ellipse" Grid.Column="0" Height="{TemplateBinding EllipseHeight}"
                                 Width="{TemplateBinding EllipseHeight}" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" />
                            <ContentPresenter x:Name="PART_ContentHost" Grid.Column="0" Content="{TemplateBinding Content}"
                                 HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <ContentPresenter x:Name="PART_HeaderHost" Grid.Column="1" VerticalAlignment="Center"
                                 HorizontalAlignment="Left" Margin="5,0,0,0" Content="{TemplateBinding Header}" />
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="translateTransform" />
                            </Grid.RenderTransform>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rootBorder" Property="Opacity" Value="0.8" />
                            <Setter TargetName="Ellipse" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rootBorder" Property="Opacity" Value="0.6" />
                            <Setter TargetName="Ellipse" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rootBorder" Property="Opacity" Value="0.3" />
                            <Setter TargetName="Ellipse" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="PART_HeaderHost" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="PART_HeaderHost" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Round metro button-->
    <Style x:Key="Virto_Base_NullItemsSelectAdapter_Style" TargetType="{x:Type core_controls:NullItemSelectorAdapter}"
         BasedOn="{StaticResource Virto_InputControl_Style}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsAddingNullItemsFirst" Value="True" />
    </Style>
    <!--CombinedImage-->
    <Style TargetType="{x:Type core_controls:CombinedImage}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:CombinedImage}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type core_controls:CombinedImage}, Mode=FindAncestor}}" />
                            <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type core_controls:CombinedImage}, Mode=FindAncestor}}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Viewbox>
                        <Grid Height="60" Width="60">
                            <ContentControl Content="{TemplateBinding ImageSource1}" />
                            <ContentControl Content="{TemplateBinding ImageSource2}" RenderTransformOrigin="1.2,1.2">
                                <ContentControl.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                    </TransformGroup>
                                </ContentControl.RenderTransform>
                            </ContentControl>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--CombinedImage-->
    <!--VectorImage-->
    <Style TargetType="core_controls:VectorImage">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_controls:VectorImage}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type core_controls:VectorImage}, Mode=FindAncestor}}" />
                            <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type core_controls:VectorImage}, Mode=FindAncestor}}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Viewbox Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Stretch="{TemplateBinding Stretch}">
                        <ContentControl Content="{TemplateBinding ImageResource}" />
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VectorImage-->
    <!--Toolbar-->
    <Style x:Key="Virto_Base_ToolbarItemsControl_Style" TargetType="{x:Type ItemsControl}">
        <Style.Resources>
            <Style TargetType="{x:Type core_controls:MetroButton}" BasedOn="{StaticResource Virto_Base_MetroButton_Style}">
                <Setter Property="EllipseHeight" Value="20" />
                <Setter Property="Margin" Value="3,0,8,0" />
            </Style>
        </Style.Resources>
        <Setter Property="Height" Value="28" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Grid Margin="0,0,0,2">
                        <Rectangle Fill="{DynamicResource Virto_Toolbar_Background_Brush}" />
                        <DockPanel IsItemsHost="True" LastChildFill="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Height="{TemplateBinding Height}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Toolbar-->
    <!--HorizontalTabDefaultView-->
    <!--subtabs (in settings)-->
    <Style x:Key="Virto_Base_SubTabControl_Horizontal_Style" TargetType="{x:Type core_controls:HorizontalTabDefaultView}">
        <Style.Resources>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource Virto_Base_TabControlHorizontal_Style}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource Virto_Base_TabItem_Bound_Style}">
                            <Setter Property="TextElement.FontSize" Value="14" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <!--HorizontalTabDefaultView-->
    <Style x:Key="Virto_Base_HorizontalTabDefaultView_Style" TargetType="{x:Type core_controls:HorizontalTabDefaultView}">
        <Style.Resources>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource Virto_Base_TabControlHorizontal_Style}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource Virto_Base_TabItem_Bound_Style}" />
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="#FFEAEAEA" />
        <Setter Property="Padding" Value="50,65,0,0" />
    </Style>
    <!--HorizontalTabDefaultView-->
    <Style x:Key="Virto_Base_VirtualListLoadingIndicator_Style" TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}">
        <Style.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}">
                    <Border BorderThickness="0" Background="Transparent">
                        <!--<core_virtualization:LoadingAnimation />-->
                        <core_virtualization:LoadingMetroAnimation AnimationScale="Large" ShowText="True"
                             Text="{Loc '^Loading...'}" BackgroundColor="#33111111" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}">
                            <Border Background="White" Padding="20">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left">
                                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,15">
                                            <Run Text="{Loc '^An error occured while loading data from server.'}" />
                                            <LineBreak />
                                            <Hyperlink CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                 Command="{x:Static core_virtualization:VirtualListLoadingIndicator.RetryCommand}">
                                                <Run Text="{Loc '^Retry'}" />
                                            </Hyperlink>
                                            <Run Text="{Loc '^ or contact the support staff.'}" />
                                        </TextBlock>
                                        <Expander>
                                            <Expander.Header>
                                                <TextBlock>
                                                    <Run Text="{Loc '^Detailed Error Message'}" />
                                                </TextBlock>
                                            </Expander.Header>
                                            <TextBox Margin="0,15,0,0" TextWrapping="Wrap" IsReadOnly="True" Height="Auto" Text="{TemplateBinding ErrorMessage}"
                                                 BorderThickness="0" Background="{StaticResource Virto_TextBox_Watermark_Background_Brush}" />
                                        </Expander>
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--default styles. You can redefine any style in inherited theme -->
    <Style TargetType="{x:Type core_controls:WatermarkedTextBox}" BasedOn="{StaticResource Virto_Base_WatermarkTextBox_Style}" />
    <Style TargetType="{x:Type core_controls:SearchTextBox}" BasedOn="{StaticResource Virto_Base_SearchTextBox_Style}" />
    <Style TargetType="{x:Type extToolkit:IntegerUpDown}" BasedOn="{StaticResource Virto_Base_IntegerUpDown_Style}" />
    <Style TargetType="{x:Type extToolkit:DecimalUpDown}" BasedOn="{StaticResource Virto_Base_DecimalUpDown_Style}" />
    <Style TargetType="{x:Type core_controls:ExpandedTabControl}" BasedOn="{StaticResource Virto_Base_ExpanderTabControl_Style}" />
    <Style TargetType="{x:Type core_controls:NullItemSelectorAdapter}" BasedOn="{StaticResource Virto_Base_NullItemsSelectAdapter_Style}" />
    <Style TargetType="{x:Type core_controls:MetroButton}" BasedOn="{StaticResource Virto_Base_MetroButton_Style}" />
    <Style TargetType="{x:Type core_controls:HorizontalTabDefaultView}" BasedOn="{StaticResource Virto_Base_HorizontalTabDefaultView_Style}" />
    <Style TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}" BasedOn="{StaticResource Virto_Base_VirtualListLoadingIndicator_Style}" />
    <!--default styles-->
</ResourceDictionary>