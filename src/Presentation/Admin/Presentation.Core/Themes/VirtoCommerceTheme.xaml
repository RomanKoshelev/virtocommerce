<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:prism="http://www.codeplex.com/prism"
	xmlns:core_controls="clr-namespace:Presentation.Core.Controls"
	xmlns:Presentation_Core_Infrastructure_Converters="clr-namespace:Presentation.Core.Infrastructure.Converters"
	xmlns:inf_behavior="clr-namespace:Presentation.Core.Infrastructure.Behaviors"
	xmlns:core_virtualization="clr-namespace:Presentation.Core.Infrastructure.DataVirtualization"
	xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
	xmlns:common="clr-namespace:Presentation.Core.Infrastructure.Common"
	xmlns:core_dialogs="clr-namespace:Presentation.Core.Infrastructure.Dialogs"
	mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Presentation.Core;component/Themes/VirtoCommerceThemeBrushes.xaml"/>
		<ResourceDictionary Source="/Presentation.Core;component/Themes/Icons.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
	<Presentation_Core_Infrastructure_Converters:ApplicationResourceConverter x:Key="applicationResourceConverter" />
	<Presentation_Core_Infrastructure_Converters:TextCaseConverter x:Key="textCaseConverter" />

	<!--default TextBlock style -->
	<!--M_style-->
	<Style TargetType="{x:Type TextBlock}">
		<!--FontSize can't be set in default style-->
		<!--<Setter Property="FontSize" Value="11" />-->
		<Setter Property="Margin" Value="0" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontFamily" Value="Resources/Fonts/#segoeui"/>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_DefaultTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="Foreground" Value="{DynamicResource Virto_DefaultBrush}"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="Resources/Fonts/#segoeui"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>


	<Style x:Key="Virto_MenuTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="Foreground" Value="{StaticResource Virto_AlternateCommandButton_Foreground_Brush}"/>
	</Style>

	<!--default headers and titles style: Century Gothic-->
	<Style x:Key="Virto_AlternateHeaderTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource Virto_ModalDialogHeader_Foreground}"/>
		<Setter Property="FontFamily" Value="Fonts/#OpanSans-Regular" />
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!--all local modal dialogs titles' style-->
	<Style x:Key="Virto_BlockCaptionTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_AlternateHeaderTextStyle}">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Height" Value="28"/>
		<Setter Property="Padding" Value="0,5,0,0"/>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_WatermarkTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="Foreground" Value="#787878"/>
		<Setter Property="Margin" Value="10,5,0,0"/>
	</Style>

	<Style x:Key="Virto_AlternateLabelTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Fonts/#segoeui" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Foreground" Value="{DynamicResource Virto_AlternateLabelForeground}"/>
	</Style>

	<!--Label style can't inherit from TextBlock-->
	<Style x:Key="Virto_AlternateLabelStyle" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Century Gothic" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{DynamicResource Virto_AlternateLabelForeground}"/>
	</Style>

	<Style x:Key="Virto_GridView_Alternate_ContentTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<!--<Setter Property="HorizontalAlignment" Value="Right" />-->
		<!--<Setter Property="VerticalAlignment" Value="Center" />-->
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Foreground" Value="#4a4b4b" />
	</Style>

	<Style x:Key="Virto_Link_TextBlock" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#FF006FA2"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="Cursor" Value="Hand"/>
	</Style>

	<!--<Style x:Key="Virto_AlternateCommandButtonText_Style" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="FontFamily" Value="Trebuchet MS" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Foreground" Value="{DynamicResource Virto_AlternateText_Brush}"/>
	</Style>-->


	<Style x:Key="Virto_SearchButtonTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="Foreground" Value="#CCFFFFFF"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>


	<Style x:Key="Virto_WizardTextBlock_CommonTitle_Style" TargetType="TextBlock" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="26"/>
	</Style>

	<Style x:Key="Virto_WizardTextBlock_Style" TargetType="TextBlock" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="15"/>
	</Style>


	<!--default style for all radio buttons-->
	<Style TargetType="{x:Type RadioButton}">
		<Style.Resources>
			<DataTemplate DataType="{x:Type system:String}">
				<TextBlock Text="{Binding}" FontSize="14" Foreground="{DynamicResource Virto_AlternateLabelForeground}" Style="{StaticResource Virto_AlternateHeaderTextStyle}" />
			</DataTemplate>
		</Style.Resources>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<!--<Microsoft_Windows_Themes1:BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="True" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>-->
							<Grid Width="16" Height="16" >
								<Ellipse x:Name="Border" Fill="#CAD7D7D7" StrokeThickness="1" Stroke="#D0D0D0" />
								<Ellipse x:Name="CheckMark" Margin="5" Fill="#646464" />
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="True">
							<Setter Property="FocusVisualStyle">
								<Setter.Value>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="10,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<!--<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource DarkBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBrush}" />
							<Setter TargetName="Border" Property="Stroke" Value="{StaticResource GlyphBrush}" />
						</Trigger>-->

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_ListBoxDefaultStyle" TargetType="{x:Type ListBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="ItemContainerStyle" Value="{DynamicResource Virto_ListBoxItemDefaultStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<ScrollViewer CanContentScroll="False" Focusable="false" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_ListBoxItemDefaultStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Background" Value="{DynamicResource Virto_ListBoxItem_Background_Brush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_ListBoxItem_Border_Brush}"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" HorizontalAlignment="Stretch" Margin="0,4,1,1" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" VerticalAlignment="Bottom">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter	Property="Background" TargetName="Bd" Value="{StaticResource Virto_ListBoxItem_Hover_Brush}"/>
							<Setter	Property="BorderBrush" TargetName="Bd" Value="{StaticResource Virto_ListBoxItem_Hover_Border_Brush}"/>
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_ListBoxItem_Selected_Brush}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="#4BFFFFFF"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--style for simple listbox. used in MultiSelectControl-->
	<Style x:Key="Virto_MultiSelectControlListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="SnapsToDevicePixels" Value="True"></Setter>
		<Setter Property="Background" Value="White"/>
		<Setter Property="BorderBrush" Value="#DDDDDD"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Padding" Value="10,0,0,0"/>
		<Setter Property="Margin" Value="0,0,3,1"/>
		<Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Height" Value="300"/>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0" Margin="{TemplateBinding Margin}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<ContentPresenter.Resources>
								<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_AlternateLabelTextStyle}"/>
							</ContentPresenter.Resources>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_ListBoxItem_Hover_Brush}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_ListBoxItem_Selected_Brush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--very simple list style-->
	<Style x:Key="Virto_ListBoxItemAlternateSimpleStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_DataGridHeaderAlternate_Background_Brush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_ListBoxItem_RadioButtonLikeStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
		<Setter Property="Margin" Value="0,10,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<RadioButton GroupName="radioList" IsChecked="{TemplateBinding IsSelected}">
						<ContentPresenter />
					</RadioButton>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--this style also uses Virto_ListBoxItemDefaultStyle-->
	<!--<Style x:Key="Virto_EmptyCaptionListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource Virto_ListBoxDefaultStyle}">
		<Style.Triggers>
			<DataTrigger 
				Binding="{Binding Items.Count, RelativeSource={x:Static RelativeSource.Self}}" 
				Value="0">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock Text="No items" Style="{StaticResource Virto_DefaultTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>-->

	<!-- tiny borderless list, no triggers-->
	<Style x:Key="Virto_BorderlessListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource Virto_ListBoxDefaultStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource Virto_ListBoxItemDefaultStyle}">
					<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border x:Name="Bd" Margin="0,4,1,1" Background="Transparent">
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key="Virto_QuickActionButton_Style" TargetType="{x:Type ButtonBase}">
		<Style.Resources>
			<Style TargetType="{x:Type Border}">
				<Setter Property="CornerRadius" Value="8" />
			</Style>
		</Style.Resources>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Background" Value="{StaticResource Virto_Button_Backround_Brush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Virto_Button_Border_Brush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="Bd">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<Border.Effect>
								<DropShadowEffect Direction="-45" BlurRadius="4" Opacity="0"/>
							</Border.Effect>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="0"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource Virto_Button_Hover_Brush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

	

	
	<!--button with green background and light foreground. E.g. "save"   "OK" -->
	<!--M_style-->
	<Style x:Key="Virto_AlternateCommandButton_Style" TargetType="{x:Type Button}">
		<Setter Property="Height" Value="28"/>
		<Setter Property="Width" Value="90"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Opacity" Value="1"/>
		<Setter Property="Background" Value="{DynamicResource Virto_AlternateCommandButton_Brush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Bd" BorderThickness="0" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" ClipToBounds="True">
						<Border x:Name="innerShadow" BorderThickness="0,0,0,0" Margin="-2">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0">
								<ContentPresenter.Resources>
									<DataTemplate DataType="{x:Type system:String}">
										<TextBlock Text="{Binding}" Foreground="{StaticResource Virto_AlternateCommandButton_Foreground_Brush}" Style="{StaticResource Virto_DefaultTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" />
									</DataTemplate>
								</ContentPresenter.Resources>
							</ContentPresenter>
							<Border.RenderTransform>
								<TranslateTransform x:Name="translateTransform"/>
							</Border.RenderTransform>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Pressed_Background_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Hover_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Opacity)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--button with light background, dark foreground and with "icon prefix" . E.g. "add item" -->
	<Style x:Key="Virto_DetailsForm_Button_Style" TargetType="{x:Type Button}">
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="{StaticResource Virto_DetailsForm_Button_Foreground}"/>
		<Setter Property="Background" Value="{DynamicResource Virto_DetailsForm_Button_Background}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_DetailsForm_Button_BorderBrush}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Padding" Value="0,0,21,0"/>
		<Setter Property="FontFamily" Value="Trebuchet MS" />
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Margin" Value="10,3"/>
		<Setter Property="Height" Value="32"/>
		<Setter Property="Width" Value="130"/>
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="1" Opacity="0.15" Direction="270" BlurRadius="2" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="Bd" BorderThickness="0" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
							<StackPanel Orientation="Horizontal" Margin="6,0,0,0">
								<Image Source="{TemplateBinding Tag}" Margin="0,0,8,0" Stretch="None" x:Name="img" />
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="content">
								</ContentPresenter>
							</StackPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_DetailsForm_Button_Background_Hover}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_DetailsForm_Button_Background_Pressed}" />
							<Setter Property="BorderBrush" TargetName="Bd" Value="Transparent" />
							<Setter TargetName="content" Property="Effect">
								<Setter.Value>
									<DropShadowEffect BlurRadius="0" Direction="270" ShadowDepth="1" Opacity="0.75" />
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" Value="{x:Null}"/>
						</Trigger>
						<Trigger Property="Tag" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="img" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="Bd" Value="0.4"/>
							<Setter Property="Effect" Value="{x:Null}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--button with light background, dark foreground and with "icon prefix" . E.g. "add item" -->
	<Style x:Key="Virto_Grid_Button_Style" TargetType="{x:Type Button}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="Bd" BorderThickness="1" BorderBrush="{DynamicResource Virto_DetailsForm_Button_BorderBrush}" Background="{DynamicResource Virto_DetailsForm_Button_Background}">
							<StackPanel x:Name="st" Orientation="Horizontal" Margin="6,0,0,0">
								<Image Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" Stretch="None" x:Name="img" />
							</StackPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_DetailsForm_Button_Background_Hover}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Virto_DetailsForm_Button_Background_Pressed}" />
						</Trigger>
						<Trigger Property="Tag" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="img" Value="Collapsed"/>
							<Setter TargetName="st" Property="HorizontalAlignment" Value="Center" />
							<Setter TargetName="st" Property="Margin" Value="6,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Transparent Button e.g. in treeview-->
	<Style x:Key="Virto_TransparentButton_Style" TargetType="{x:Type Button}">
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="{StaticResource Virto_AlternateTextBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<Style x:Key="Virto_VerticalSeparator_Style" TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="8,4"/>
		<Setter Property="MinHeight" Value="2"/>
		<Setter Property="MinWidth" Value="2"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Foreground" Value="{StaticResource Virto_SeparatorLeftLine_Brush}"/>
		<Setter Property="Background" Value="{StaticResource Virto_SeparatorRightLine_Brush}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid x:Name="separator" Margin="{TemplateBinding Padding}">
						<Rectangle Width="1" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
						<Rectangle Width="1" Fill="{TemplateBinding Background}" HorizontalAlignment="Right"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_HorizontalSeparator_Style" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Margin" Value="0,2"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Foreground" Value="{StaticResource Virto_SeparatorLeftLine_Brush}"/>
		<Setter Property="Background" Value="#e8e8e8"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">

					<Rectangle Height="1" Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<DataTemplate x:Key="Virto_HeaderedControl_HeaderTemplate">
		<DockPanel Height="25" Margin="8,0" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type HeaderedContentControl}, Mode=FindAncestor}}">
			<TextBlock Text="*" Margin="2" FontSize="20" Visibility="{Binding IsModified, Converter={StaticResource booleanToVisibilityConverter}}"  Style="{StaticResource Virto_MenuTextStyle}" />
			<TextBlock Text="{Binding DisplayName, Mode=OneWay}" Style="{StaticResource Virto_MenuTextStyle}" FontSize="14.5" VerticalAlignment="Bottom" Margin="4,0,0,2" TextWrapping="Wrap" />
			
		</DockPanel>
	</DataTemplate>-->

	<!--<Style x:Key="Virto_DialogLike_HeaderedControl_Style" TargetType="{x:Type HeaderedContentControl}">
		<Setter Property="HeaderTemplate" Value="{StaticResource Virto_HeaderedControl_HeaderTemplate}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type HeaderedContentControl}">
					<Border Background="White">
						<DockPanel Margin="2,0,0,0">
							<ContentPresenter DockPanel.Dock="Top" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" />
							<Border Margin="5,2,5,5" BorderThickness="1" BorderBrush="{x:Null}" Background="White">
								<ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}"/>
							</Border>
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

	<Style x:Key="Virto_HeaderedContentBlock_Style" TargetType="{x:Type HeaderedContentControl}">
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border CornerRadius="0" Margin="4" Padding="4" SnapsToDevicePixels="True">
						<TextBlock HorizontalAlignment="Left" Text="{Binding}" Margin="1,0,0,0" Style="{DynamicResource Virto_BlockCaptionTextStyle}"/>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type HeaderedContentControl}">
					<DockPanel Margin="2,0,0,0">
						<ContentPresenter DockPanel.Dock="Top" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" />
						<Border Margin="5" CornerRadius="6" BorderThickness="1" >
							<ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" />
						</Border>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_HeaderedAlternateContentBlock_Style" TargetType="{x:Type HeaderedContentControl}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Margin" Value="15" />
		<Setter Property="Background"/>
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock FontSize="12" HorizontalAlignment="Left" Text="{Binding}" Margin="1,0,0,8" Style="{DynamicResource Virto_DefaultTextStyle}"/>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type HeaderedContentControl}">
					<DockPanel>
						<ContentPresenter DockPanel.Dock="Top" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" />
						<Border Padding="15" CornerRadius="10" BorderThickness="1" Background="{TemplateBinding Background}">
							<ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}"/>
						</Border>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Expander control -->
	<Style x:Key="ExpanderHeaderFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource Virto_DefaultBrush}" />
		<Setter Property="Background" Value="{DynamicResource Virto_FiltersSide_Backgroudn_Brush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource Virto_Expander_Border_Brush}" BorderThickness="0" CornerRadius="0" x:Name="bd" >
						<Grid SnapsToDevicePixels="False" Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="19" />
							</Grid.ColumnDefinitions>
							<Rectangle Margin="2,2,2,2" x:Name="Rectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Grid.Column="1" />
							<Rectangle Margin="2,2,2,2" x:Name="ShineRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Grid.Column="1" />
							<Rectangle Margin="2,2,2,2" x:Name="HoverRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Grid.Column="1" />
							<Rectangle Margin="2,2,2,2" x:Name="HoverShineRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Grid.Column="1" />
							<Rectangle Margin="2,2,2,2" x:Name="PressedRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Grid.Column="1" />
							<Path x:Name="Up_Arrow" Data="M0,4.1333332 L8,4.1333332 4,8.1333332 z M0,0 L8,0 4,3.9999999 z" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1"/>
							<Path x:Name="Down_Arrow" Data="M4,4.1343331 L8,8.1343331 0,8.1343331 z M4,0 L8,3.9999998 0,3.9999998 z" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" HorizontalAlignment="Center"  Visibility="Collapsed" VerticalAlignment="Center" Grid.Column="1"/>
							<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="0" RecognizesAccessKey="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
							<Setter Property="BorderThickness" TargetName="bd" Value="0,0,0,0" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource Virto_DefaultBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Padding="{TemplateBinding Padding}" Background="{DynamicResource Virto_Expander_Background_Brush}" BorderBrush="{DynamicResource Virto_Expander_Border_Brush}" BorderThickness="0" CornerRadius="0">
						<Grid SnapsToDevicePixels="False" Background="Transparent">
							<Grid.RowDefinitions>
								<RowDefinition Height="19" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Rectangle Margin="2,2,2,2" x:Name="Rectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
								<Rectangle Margin="2,2,2,2" x:Name="ShineRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" />
								<Rectangle Margin="2,2,2,2" x:Name="HoverRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Rectangle Margin="2,2,2,2" x:Name="HoverShineRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Rectangle Margin="2,2,2,2" x:Name="PressedRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" Data="M 0 0 L 4 4 L 8 0 Z" />
								<Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" Data="M 0 4 L 4 0 L 8 4 Z" />
							</Grid>
							<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,4,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
								<ContentPresenter.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</ContentPresenter.LayoutTransform>
							</ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource Virto_DefaultBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Padding="{TemplateBinding Padding}" CornerRadius="0" BorderThickness="0" Background="{DynamicResource Virto_Expander_Background_Brush}" BorderBrush="{DynamicResource Virto_Expander_Border_Brush}">
						<Grid SnapsToDevicePixels="False" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="19" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Rectangle Margin="2,2,2,2" x:Name="Rectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
								<Rectangle Margin="2,2,2,2" x:Name="ShineRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
								<Rectangle Margin="2,2,2,2" x:Name="HoverRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Rectangle Margin="2,2,2,2" x:Name="HoverShineRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Rectangle Margin="2,2,2,2" x:Name="PressedRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" Data="M 0 0 L 4 4 L 8 0 Z" />
								<Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" Data="M 0 4 L 4 0 L 8 4 Z" />
							</Grid>
							<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource Virto_DefaultBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Padding="{TemplateBinding Padding}" CornerRadius="0" Background="{DynamicResource Virto_Expander_Background_Brush}" BorderBrush="{DynamicResource Virto_Expander_Border_Brush}" BorderThickness="0">
						<Grid SnapsToDevicePixels="False" Background="Transparent">
							<Grid.RowDefinitions>
								<RowDefinition Height="19" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Rectangle Margin="2,2,2,2" x:Name="Rectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
								<Rectangle Margin="2,2,2,2" x:Name="ShineRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
								<Rectangle Margin="2,2,2,2" x:Name="HoverRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Rectangle Margin="2,2,2,2" x:Name="HoverShineRectangle"  StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Rectangle Margin="2,2,2,2" x:Name="PressedRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
								<Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" Data="M 0 0 L 4 4 L 8 0 Z" />
								<Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource Virto_ExpanderToggleButton_Fill_Brush}" Data="M 0 4 L 4 0 L 8 4 Z" />
							</Grid>
							<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="4,4,2,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
								<ContentPresenter.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</ContentPresenter.LayoutTransform>
							</ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_Expander_Style" TargetType="{x:Type Expander}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontFamily" Value="Fonts/#OpenSans-Regular"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="1,1,1,1" />
		<Setter Property="Padding" Value="0,0,9,0" />
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_Expander_Border_Brush}" />
		<Setter Property="Background" Value="{StaticResource Virto_Expander_Background_Brush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
						<DockPanel x:Name="dockPanel">
							<ToggleButton HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" MinWidth="50" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" Cursor="Hand" Height="22">
								<TextBlock Text="{TemplateBinding Header}" Style="{DynamicResource Virto_AlternateHeaderTextStyle}" />
							</ToggleButton>
							<Border Visibility="Collapsed" x:Name="border" Padding="{TemplateBinding Padding}">
								<ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
							</Border>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="border" Value="Visible" />
						</Trigger>
						<Trigger Property="Tag" Value="last">
							<Setter Property="BorderThickness" Value="1" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Down" />
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--default properties of user input controls: textbox, combobox-->
	<!--M_style-->
	<Style x:Key="Virto_AlternateInputControl_Style" TargetType="{x:Type Control}">
		<Setter Property="Background" Value="{StaticResource Virto_AlternateTextBox_Background_Brush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Virto_AlternateTextBox_Border_Brush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource Virto_AlternateLabelForeground}"/>
		<Setter Property="FontFamily" Value="Fonts/#segoeui"/>
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Height" Value="36"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>


	<!--textbox style in modal dialoges e.g. login dialog-->
	<Style x:Key="Virto_ModalTextBox_Style" TargetType="{x:Type TextBox}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Foreground" Value="{DynamicResource Virto_AlternateTextBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_Unfocused_BorderBrush}"/>
		<Setter Property="Background" Value="{DynamicResource Virto_AlternateTextBox_Background_Brush}"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="FontFamily" Value="Fonts/#OpenSans-Regular"/>
		<Setter Property="Height" Value="22"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border x:Name="rootBorder" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost"/>
						</Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="rootBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="rootBorder" Storyboard.TargetProperty="(Border.Opacity)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Focus">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="rootBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="rootBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Unfocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_TextBox_Style" TargetType="{x:Type TextBox}" BasedOn="{StaticResource Virto_AlternateInputControl_Style}">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="Bd" BorderBrush="{StaticResource Virto_Unfocused_BorderBrush}" CornerRadius="0" BorderThickness="2" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ContentHost"/>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Opacity)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Focus">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Unfocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Validation">
								<VisualState x:Name="Valid">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Transparent_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Transparent_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Search Textbox-->
	<!--M_style-->
	<Style x:Key="Virto_SearchSimpleTextBox_Style" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="Margin" Value="0,0,8,5"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<!--<Setter Property="Foreground" Value="#D1D1D1"/>-->
		<Setter Property="VerticalAlignment" Value="Bottom"/>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_SearchTextBox_Style" TargetType="{x:Type core_controls:SearchTextBox}">
		<Setter Property="Cursor" Value="IBeam"/>
		<Setter Property="Background" Value="{StaticResource Virto_SearchTextBox_Background_Brush}" />
		<Setter Property="BorderBrush" Value="{StaticResource Virto_SearchTextBox_Border_Brush}" />
		<Setter Property="Foreground" Value="{StaticResource Virto_SearchTextBox_Foreground_Brush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="LabelText" Value="Enter keywords..." />
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="LabelTextColor" Value="{StaticResource Virto_SearchTextBox_LabelText_Color}" />
		<Setter Property="Height" Value="30"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type core_controls:SearchTextBox}">
					<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Height="{TemplateBinding Height}">
						<Grid x:Name="LayoutGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid.ColumnDefinitions>
							<ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" />
							<Label x:Name="LabelText" Margin="2" Grid.Column="0" Foreground="{TemplateBinding LabelTextColor}" Content="{TemplateBinding LabelText}" Padding="2,0,0,0" FontSize="13" FontStyle="Italic" FontFamily="Fonts/#OpenSans-Regular" VerticalAlignment="Center" />

							<Border x:Name="PART_SearchIconBorder"
									Grid.Column="1"
									BorderThickness="0"
									VerticalAlignment="Stretch"
									HorizontalAlignment="Stretch"
									BorderBrush="{StaticResource Virto_SearchTextBox_SearchIconBorder_Brush}"
									Background="{StaticResource Virto_SearchTextBox_SearchIconBackground_Brush}" Margin="2">
								<Image x:Name="SearchIcon" Width="17" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
										Source="/Presentation.Core;component/Themes/images/search.png" />
							</Border>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource Virto_SearchTextBox_BorderMouseOver_Brush}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="Visibility" TargetName="LabelText" Value="Hidden" />
							<Setter Property="BorderBrush" Value="{StaticResource Virto_SearchTextBox_BorderMouseOver_Brush}" />
						</Trigger>
						<Trigger Property="HasText" Value="True">
							<Setter Property="Visibility" TargetName="LabelText" Value="Hidden" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasText" Value="True" />
								<Condition Property="SearchMode" Value="Instant" />
							</MultiTrigger.Conditions>
							<Setter Property="Source" TargetName="SearchIcon" Value="/Presentation.Core;component/Themes/images/clear.png" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" SourceName="PART_SearchIconBorder" Value="True" />
								<Condition Property="HasText" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="PART_SearchIconBorder" Value="{StaticResource Virto_SearchTextBox_SearchIconBorder_MouseOver_Brush}" />
							<Setter Property="Background" TargetName="PART_SearchIconBorder" Value="{StaticResource Virto_SearchTextBox_SearchIconBackground_MouseOver_Brush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" SourceName="PART_SearchIconBorder" Value="True" />
								<Condition Property="IsMouseLeftButtonDown" Value="True" />
								<Condition Property="HasText" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Padding" TargetName="PART_SearchIconBorder" Value="2,0,0,0" />
							<Setter Property="BorderBrush" TargetName="PART_SearchIconBorder" Value="{StaticResource Virto_SearchTextBox_SearchIconBorder_MouseOver_Brush}" />
							<Setter Property="Background" TargetName="PART_SearchIconBorder" Value="{StaticResource Virto_SearchTextBox_SearchIconBackground_MouseOver_Brush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--default x:Key="Virto_DelayedTextBox_Style"-->
	<!--M_style-->
	<Style TargetType="{x:Type core_controls:SearchTextBox}" BasedOn="{StaticResource Virto_SearchTextBox_Style}">
		<Setter Property="LabelText" Value="Enter..." />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type core_controls:SearchTextBox}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Height="22">
						<Grid x:Name="LayoutGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid.ColumnDefinitions>
							<ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" />
							<Label x:Name="LabelText" Margin="2" Grid.Column="0" Foreground="{TemplateBinding LabelTextColor}" Content="{TemplateBinding LabelText}" Padding="2,0,0,0" FontSize="13" FontFamily="Fonts/#OpenSans-Regular" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="Visibility" TargetName="LabelText" Value="Hidden" />
						</Trigger>
						<Trigger Property="HasText" Value="True">
							<Setter Property="Visibility" TargetName="LabelText" Value="Hidden" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- RowStyle-->
	<Style x:Key='Virto_DataGridRow_Style' TargetType="{x:Type DataGridRow}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsSelected_true">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
																	   Storyboard.TargetName="SelectedRectangle" 
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="IsSelected_false">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
																	   Storyboard.TargetName="SelectedRectangle" 
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border x:Name="DGR_Border"
				  Background="{TemplateBinding Background}"
				  BorderBrush="{TemplateBinding BorderBrush}"
				  BorderThickness="{TemplateBinding BorderThickness}"
				  SnapsToDevicePixels="True">
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.Resources>
								<Storyboard x:Key='DetailsVisibleTransition'>
									<DoubleAnimation Duration="00:00:00" 
											 Storyboard.TargetProperty="Height"
											 Storyboard.TargetName='DetailsPresenter'                                             
											 />
								</Storyboard>
							</SelectiveScrollingGrid.Resources>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</SelectiveScrollingGrid.ColumnDefinitions>

							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height='Auto' />
							</SelectiveScrollingGrid.RowDefinitions>
							<Rectangle x:Name="BackgroundRectangle" 
									   Opacity="0.25" 
									   Grid.ColumnSpan="2" Grid.RowSpan="2" />
							<Rectangle x:Name="SelectedRectangle" 
									   Opacity="0" 
									   Fill="{DynamicResource Virto_DataGrid_RowSelected_Brush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
							<Rectangle x:Name="HoverRectangle" 
								Opacity="0" 
								Fill="{DynamicResource Virto_DataGrid_RowHover_Brush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
							<DataGridRowHeader Grid.RowSpan="2"
														SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"                                       
														Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
							<DataGridCellsPresenter Grid.Column="1"
											ItemsPanel="{TemplateBinding ItemsPanel}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
															   x:Name='DetailsPresenter' 
															   SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"                                                                                                                         
															   Visibility="{TemplateBinding DetailsVisibility}"                                                               
															   />
						</SelectiveScrollingGrid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property='IsSelected' Value='True'>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource IsSelected_true}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource IsSelected_false}" />
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger >
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsSelected" Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.00" 
																	   Storyboard.TargetName="HoverRectangle" 
																	   Storyboard.TargetProperty="(UIElement.Opacity)"
																	   To='1'
														 />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.00" 
																	   Storyboard.TargetName="HoverRectangle" 
																	   Storyboard.TargetProperty="(UIElement.Opacity)"
																	   To='0'
														 />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style  x:Key='Virto_DataGridRowHeaderPath_Style' TargetType='{x:Type Path}'>
		<Setter Property='Margin' Value='6,0,6,0' />
		<Setter Property='Data' Value='M 0,0 L 1.25,1 L 0,2 L 0,0' />
		<Setter Property='Fill' Value='Transparent' />
		<Setter Property='Stretch' Value='Uniform' />
		<Setter Property='RenderTransformOrigin' Value='0,1' />
		<Setter Property='Height' Value='10' />
		<Setter Property='Width' Value='10' />
		<Setter Property='Stroke' Value='Transparent' />
	</Style>-->

	<Style x:Key='Virto_RowHeaderPath_Style' TargetType='{x:Type Path}' >
		<Setter Property='Margin' Value='6,0,6,0' />
		<Setter Property='Data' Value='M 0,0 L 1.25,1 L 0,2 L 0,0' />
		<Setter Property='Fill' Value='Transparent' />
		<Setter Property='Stretch' Value='Uniform' />
		<Setter Property='RenderTransformOrigin' Value='0,1' />
		<Setter Property='Height' Value='10' />
		<Setter Property='Width' Value='10' />
		<Setter Property='Stroke' Value='Transparent' />
	</Style>

	<DataTemplate x:Key='Virto_RowHeaderContentTemplate'>
		<Path Style='{StaticResource Virto_RowHeaderPath_Style}' />
	</DataTemplate>

	<DataTemplate x:Key='Virto_RowHeaderOnDetailsContentTemplate'>
		<Path Style='{StaticResource Virto_RowHeaderPath_Style}'
			  Fill='Transparent'
			  Stroke='Transparent'>
			<Path.RenderTransform>
				<RotateTransform Angle='45' />
			</Path.RenderTransform>
		</Path>
	</DataTemplate>

	<!--DataGridRowHeader-->
	<Style x:Key="Virto_DataGridRowHeader_Style" TargetType='{x:Type DataGridRowHeader}'>
		<Setter Property='Background' Value='Transparent' />
		<Setter Property='BorderThickness' Value="0,0,1,0" />
		<Setter Property='BorderBrush' Value='#FFFFFF' />
		<Setter Property='VerticalAlignment' Value='Top' />
		<Setter Property='Padding' Value='0' />

		<Style.Triggers>
			<DataTrigger Binding='{Binding DetailsVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}}' Value='Visible'>
				<Setter Property='ContentTemplate' Value='{StaticResource Virto_RowHeaderOnDetailsContentTemplate}' />
			</DataTrigger>
			<DataTrigger Binding='{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}}' Value='False'>
				<Setter Property='Background' Value='#B8B8B8' />
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<!--CellStyle-->
	<Style x:Key='Virto_DataGridCell_Style' TargetType="{x:Type DataGridCell}">
		<Setter Property='VerticalContentAlignment' Value='Center' />
		<Setter Property='Padding' Value='2,0,0,0' />
		<Setter Property="Cursor" Value="Arrow" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FontFamily" Value="Trebuchet MS" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Foreground" Value="{DynamicResource Virto_HeaderTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="FocusVisual" 
								   HorizontalAlignment="Stretch"                                    
								   VerticalAlignment="Stretch" IsHitTestVisible="false" 
								   Opacity="0" Fill="Transparent" 
								   Stroke="Transparent" StrokeThickness="1" />
						<ContentPresenter Cursor="{TemplateBinding Cursor}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  Margin="{TemplateBinding Padding}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}" />
						<Rectangle x:Name="RightGridLine" VerticalAlignment="Stretch" Width="1" Grid.Column="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<!--Column Header-->
	<Style x:Key="Virto_DataGridColumnHeaderGripper_Style" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="8"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Cursor" Value="SizeWE"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
					Background="{TemplateBinding Background}"/>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Home GridView style-->

	<!--M_style-->
	<Style x:Key='Virto_ColumnHeader_Base_Style' TargetType='{x:Type ContentControl}'>
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource Virto_HomeGridView_ColumnHeader_Foreground_Brush}" />
		<Setter Property="Background" Value="{DynamicResource Virto_HomeGridView_ColumnHeader_Background_Brush}"/>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="FontFamily" Value="Fonts/#OpenSans-Regular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Padding" Value="3" />
	</Style>

	<Style x:Key='Virto_DataGridColumnHeaderStyle' TargetType='{x:Type DataGridColumnHeader}' BasedOn="{StaticResource Virto_ColumnHeader_Base_Style}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<Microsoft_Windows_Themes:DataGridHeaderBorder x:Name='HeaderBorder' 
												  SortDirection="{TemplateBinding SortDirection}"
												  IsHovered="{TemplateBinding IsMouseOver}"
												  IsPressed="{TemplateBinding IsPressed}"
												  IsClickable="{TemplateBinding CanUserSort}"
												  BorderBrush="#2CD8D7D7"
												  BorderThickness="0 1"

												  SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
												  SeparatorBrush="Transparent" Background="{TemplateBinding Background}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width='Auto' />
									<ColumnDefinition Width='*' />
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Grid.RowSpan="2" 
								   Stretch="Fill" StrokeThickness="1" />
								<Rectangle x:Name="HoverRectangle" 
								   Grid.ColumnSpan="2" Grid.RowSpan="2" Stretch="Fill" 
								   Opacity="0" />
								<ContentPresenter Grid.Column='0' 
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  Margin='{TemplateBinding Padding}' VerticalAlignment="Bottom" HorizontalAlignment="Right"
												  />
								<Rectangle x:Name="ShineRectangle"
								   Stretch="Fill" 
								   StrokeThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="2" />
								<Path HorizontalAlignment="Right" x:Name="SortArrow" Fill="DarkGray" Margin="6,0"
									  VerticalAlignment="Center" Width="8" Opacity="0"
									  RenderTransformOrigin=".5,.5" Grid.Column="1" Grid.RowSpan="2"  
									  Stretch="Uniform" 
									  Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
									<Path.RenderTransform>
										<TransformGroup>
											<ScaleTransform ScaleX=".9" ScaleY=".9" x:Name="SortIconTransform" />
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
							</Grid>
						</Microsoft_Windows_Themes:DataGridHeaderBorder>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Virto_DataGridColumnHeaderGripper_Style}"/>
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Virto_DataGridColumnHeaderGripper_Style}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Opacity" Value="1" />
							<Setter TargetName="SortArrow" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property='IsMouseOver' Value='True'>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" 
														 Duration="00:00:00.20000"
														 Storyboard.TargetName="HoverRectangle" 
														 Storyboard.TargetProperty="(UIElement.Opacity)" 
														 To='1'                                                         
														 />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" 
														 Duration="00:00:00.20000"
														 Storyboard.TargetName="HoverRectangle" 
														 Storyboard.TargetProperty="(UIElement.Opacity)" 
														 To='0'                                                         
														 />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key='DataGrid_AlternateColumnHeaderStyle' TargetType='{x:Type DataGridColumnHeader}' BasedOn="{StaticResource Virto_DataGridColumnHeaderStyle}">
		<Setter Property="Foreground" Value="{StaticResource Virto_HeaderTextBrush}"/>
		<Setter Property="Background" Value="{StaticResource Virto_DataGridHeaderAlternate_Background_Brush}"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>-->

	

	<!--ListView -begin -->
	<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right" Value="-9"/>
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding" Value="0,3,0,4"/>
		<Setter Property="Background" Value="#FF000000"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_GridView_ColumnHeaderContainerStyle" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource Virto_ColumnHeader_Base_Style}">
		<Style.Resources>
			<DataTemplate DataType="{x:Type system:String}">
				<TextBlock Text="{Binding Converter={StaticResource textCaseConverter}}" FontWeight="Bold" FontSize="11" />
			</DataTemplate>
		</Style.Resources>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<!--<Setter Property="Foreground" Value="{StaticResource Virto_HomeGridView_ColumnHeader_Foreground_Brush}"/>-->
		<Setter Property="Foreground" Value="{StaticResource Virto_DefaultBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<Grid SnapsToDevicePixels="true">
						<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="ContentContainer"
												  BorderStyle="HorizontalLine"
												  Background="{TemplateBinding Background}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Microsoft_Windows_Themes:ClassicBorderDecorator>
						<Canvas>
							<Thumb x:Name="PART_HeaderGripper"
							   Style="{StaticResource GridViewColumnHeaderGripper}"
							   Background="Transparent"/>
						</Canvas>
						<Rectangle Height="1" Stroke="#999" VerticalAlignment="Bottom" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Height" Value="Auto">
							<Setter Property="MinHeight" Value="28"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Microsoft_Windows_Themes:ClassicBorderDecorator BorderStyle="Raised"
													  Background="{TemplateBinding Background}"
													  BorderThickness="{TemplateBinding BorderThickness}"
													  BorderBrush="{TemplateBinding BorderBrush}" />
							<ControlTemplate.Triggers>
								<Trigger Property="Height" Value="Auto">
									<Setter Property="MinHeight" Value="28"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.5056"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Canvas x:Name="PART_FloatingHeaderCanvas">
								<Rectangle Opacity="0.3034"
									   Fill="#FF000000"
									   Width="{TemplateBinding ActualWidth}"
									   Height="{TemplateBinding ActualHeight}" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--alternative - white style-->
	<Style x:Key="Virto_GridView_Alternate_ColumnHeaderContainerStyle" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource Virto_GridView_ColumnHeaderContainerStyle}">
		<Style.Resources>
			<DataTemplate DataType="{x:Type system:String}">
				<TextBlock Text="{Binding}" FontSize="14" />
			</DataTemplate>
		</Style.Resources>


		<Setter Property="FontFamily" Value="Trebuchet MS"/>
		<Setter Property="FontSize" Value="14"/>

		<Setter Property="BorderThickness" Value="0,0,0,0.8"/>
		<Setter Property="BorderBrush" Value="{StaticResource Virto_DetailsForm_Button_BorderBrush}"/>

		<Setter Property="Height" Value="30" />
	</Style>

	<!--ListView -end -->

	<Style x:Key="Virto_TreeViewItemFocusVisual_Style">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="Virto_ExpandCollapseToggle_Style" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Width" Value="19"/>
		<Setter Property="Height" Value="13"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent" Height="13" Width="19">
						<Path x:Name="ExpandPath"  StrokeLineJoin="Miter" StrokeThickness="1" Data="M 0,0 L 0,9 L 5,4.5 Z" Fill="Black" Margin="1,1,1,1"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Data" TargetName="ExpandPath" Value="M 6,0 L 6,6 L 0,6 Z"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_TreeNodeTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="FontSize" Value="13"/>
	</Style>

	<Style x:Key="Virto_RootTreeNodeTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_DefaultTextStyle}">
		<Setter Property="FontSize" Value="14"/>
	</Style>



	<!--Tab control-->

	<Style x:Key="Virto_TabItemFocusVisual_Style">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="4,4,4,2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="Virto_TabControlHeaderTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="12"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<TextBlock Text="{Binding}" Grid.Column="1" FontSize="13"  />
		</Grid>
	</DataTemplate>

	<ControlTemplate x:Key="TabItemControlTemplate1" TargetType="{x:Type TabItem}">
		<Border x:Name="Bd" HorizontalAlignment="Stretch" Margin="1,6,1,6" BorderThickness="0" CornerRadius="3" BorderBrush="Yellow" Background="Blue">
			<ContentPresenter ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" TargetName="Bd" Value="White"/>
			</Trigger>
			<Trigger Property="IsSelected" Value="true">
				<Setter Property="Panel.ZIndex" Value="1"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="false"/>
					<Condition Property="IsMouseOver" Value="false"/>
				</MultiTrigger.Conditions>

			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true"/>
					<Condition Property="TabStripPlacement" Value="Top"/>
				</MultiTrigger.Conditions>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true"/>
					<Condition Property="TabStripPlacement" Value="Bottom"/>
				</MultiTrigger.Conditions>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true"/>
					<Condition Property="TabStripPlacement" Value="Left"/>
				</MultiTrigger.Conditions>
				
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true"/>
					<Condition Property="TabStripPlacement" Value="Right"/>
				</MultiTrigger.Conditions>
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	

	<Style x:Key="Virto_TabControl_Style" TargetType="{x:Type TabControl}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="ItemContainerStyle" Value="{DynamicResource Virto_TabItem_Style}"/>
		<Setter Property="Tag" Value="Order Details"/>
		<Setter Property="TabStripPlacement" Value="Left"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<StackPanel x:Name="HeaderPanel" Orientation="Horizontal" Margin="10,15">
							<StackPanel>
								<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Tag}" Margin="14,14,14,0" HorizontalAlignment="Left" FontSize="24" Foreground="{StaticResource Virto_AlternateTextBrush}" Style="{StaticResource Virto_AlternateHeaderTextStyle}"/>
								<TabPanel IsItemsHost="true" Margin="0,20,0,0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							</StackPanel>
							<Separator Style="{DynamicResource Virto_VerticalSeparator_Style}" Margin="0" Background="White" Foreground="{StaticResource Virto_DetailsForm_Button_BorderBrush}" />
						</StackPanel>

						<Grid x:Name="ContentPanel" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Margin="0,-2,0,0">
							<Microsoft_Windows_Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Raised" Background="{TemplateBinding Background}">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="2,0,0,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Microsoft_Windows_Themes:ClassicBorderDecorator>
						</Grid>
						<Rectangle x:Name="shadow" HorizontalAlignment="Left" Width="13">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" Opacity="0.1">
									<GradientStop Color="Black" Offset="0"/>
									<GradientStop Color="White" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="shadow" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="ItemContainerStyle" Value="{DynamicResource Virto_TabItem_Style_Left}"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_VerticalTabControl_Style" TargetType="{x:Type TabControl}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="ItemContainerStyle" Value="{DynamicResource Virto_TabItem_Style_Vertical}"/>
		<Setter Property="TabStripPlacement" Value="Left"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<ContentPresenter Content="{Binding ViewModel}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<StackPanel x:Name="HeaderPanel" Orientation="Horizontal" Margin="10,15"  >
							<StackPanel>
								<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Tag}" Margin="14,14,14,0" HorizontalAlignment="Left" FontSize="24" Foreground="{StaticResource Virto_AlternateTextBrush}" Style="{StaticResource Virto_AlternateHeaderTextStyle}"/>
								<TabPanel IsItemsHost="true" Margin="0,20,0,0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							</StackPanel>
							<!--<Separator Style="{DynamicResource Virto_VerticalSeparator_Style}" Margin="0" Background="White" Foreground="{StaticResource Virto_DetailsForm_Button_BorderBrush}" />-->
						</StackPanel>

						<Grid x:Name="ContentPanel" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Margin="0,-2,0,0">
							<Microsoft_Windows_Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Raised" Background="{TemplateBinding Background}">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="2,0,0,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Microsoft_Windows_Themes:ClassicBorderDecorator>
						</Grid>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="ItemContainerStyle" Value="{DynamicResource Virto_TabItem_Style_Vertical}"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--alternative tab TOP-->
	<Style x:Key="Virto_AlternateTabItemFocusVisual_Style">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key="Virto_AlternateTabItemStyle" TargetType="{x:Type TabItem}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource Virto_AlternateTabItemFocusVisual_Style}"/>
		<Setter Property="Foreground" Value="{StaticResource Virto_DetailsForm_Button_Foreground}"/>
		<Setter Property="Padding" Value="10,0"/>
		<Setter Property="BorderBrush" Value="{StaticResource Virto_DetailsForm_Button_BorderBrush}"/>
		<Setter Property="Background" Value="{StaticResource Virto_DetailsForm_Button_Background}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
	</Style>-->

	<Style x:Key="Virto_AlternateTabControl_Style" TargetType="{x:Type TabControl}">
		<Setter Property="BorderBrush" Value="{StaticResource Virto_DetailsForm_Button_BorderBrush}"/>
		<Setter Property="BorderThickness" Value="0,1,0,0" />
	</Style>

	<!--ComboBox style-->
	<!--M_style-->
	<Style x:Key="Virto_ComboBoxFocusVisual_Style">
		<Setter Property="FrameworkElement.Margin" Value="2,2,16,2" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="{TemplateBinding Margin}" SnapsToDevicePixels="true" Stroke="{DynamicResource Virto_HoverMouseFocused_BorderBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_SearchComboBoxFocusVisual_Style" BasedOn="{StaticResource Virto_ComboBoxFocusVisual_Style}">
		<Setter Property="FrameworkElement.Margin" Value="1,1,9,1" />
	</Style>

	<Geometry x:Key="Virto_DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

	<!--M_style-->
	<Style x:Key="Virto_ComboBoxTransparentButton_Style" TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<DockPanel Background="{TemplateBinding Background}" LastChildFill="false" SnapsToDevicePixels="true">
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path Margin="0" x:Name="arrow" Data="{StaticResource Virto_DownArrowGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Path.RenderTransform>
									<RotateTransform x:Name="rotateTransform"/>
								</Path.RenderTransform>
							</Path>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Check">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="rotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="180"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Margin)">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="8,5,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="rotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_ComboBoxAlternateButton_Style" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource Virto_ComboBoxTransparentButton_Style}">
		<Setter Property="Template">
			<Setter.Value>

				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<DockPanel Background="{TemplateBinding Background}" LastChildFill="false" SnapsToDevicePixels="true">
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" DockPanel.Dock="Right" Width="30">
							<Path x:Name="arrow" Data="{StaticResource Virto_DownArrowGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Path.RenderTransform>
									<RotateTransform x:Name="rotateTransform"/>
								</Path.RenderTransform>
							</Path>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Check">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="rotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="180"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Margin)">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="14,5,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="rotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)">
											<DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_ComboBoxEditableTextBox_Style" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--M_style-->
	<ControlTemplate x:Key="Virto_ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
			<Grid>
				<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="2" BorderStyle="Sunken" Background="{TemplateBinding Background}">
					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">

						<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Popup>
				</Microsoft_Windows_Themes:ClassicBorderDecorator>
				<ToggleButton ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource Virto_ComboBoxAlternateButton_Style}" Width="Auto"/>
				<DockPanel Margin="2">
					<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
					<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource Virto_ComboBoxEditableTextBox_Style}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
				</DockPanel>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
			</Trigger>

			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	

	<!--M_style-->
	<Style x:Key="Virto_SearchComboBoxItem_Style" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource Virto_ComboBoxItem_Style}">
		<Setter Property="Padding" Value="3,0,3,0"/>
		<Setter Property="Height" Value="Auto" />
	</Style>


	<!--default style for all comboboxes: style on bright (Alternate) background-->
	<!--M_style-->
	<Style TargetType="{x:Type ComboBox}" x:Key="Virto_ComboBoxMetro_Style" BasedOn="{StaticResource Virto_AlternateInputControl_Style}">
		<!--<Setter Property="inf_behavior:WatermarkComboBoxBehavior.EnableWatermark" Value="True"/>-->
		<Setter Property="inf_behavior:WatermarkComboBoxBehavior.Label" Value="Select a value"/>
		<Setter Property="inf_behavior:WatermarkComboBoxBehavior.LabelStyle" Value="{StaticResource Virto_WatermarkTextBlockStyle}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource Virto_ComboBoxFocusVisual_Style}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource Virto_ComboBoxItem_Style}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_Unfocused_BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Border x:Name="mainBorder" Height="{TemplateBinding Height}" VerticalAlignment="Center" Padding="0" Margin="0" Width="{TemplateBinding Width}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" 
							Background="{TemplateBinding Background}">
						<Grid VerticalAlignment="Center" Height="Auto" Margin="0">
							<!--main visible content - single item and popup list -->
							<Border x:Name="Border" Margin="-1,25,0,0" VerticalAlignment="Center" Height="Auto" >
								<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Relative" OpacityMask="{x:Null}" VerticalAlignment="Center">
									<Border Padding="1,1,1,0" x:Name="DropDownBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}" Background="{TemplateBinding Background}">
										<ScrollViewer x:Name="DropDownScrollViewer" Margin="-1,0,-1,0">
											<Grid RenderOptions.ClearTypeHint="Enabled">
												<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
													<Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
												</Canvas>
												<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
											</Grid>
										</ScrollViewer>
									</Border>
								</Popup>
							</Border>
							<DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0">
								<FrameworkElement DockPanel.Dock="Right" Margin="0" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" VerticalAlignment="Center"/>
								<Border x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
									<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
													  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" 
													  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
													  HorizontalAlignment="Stretch" Margin="0,0,1,0"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<ContentPresenter.Resources>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="HorizontalAlignment" Value="Stretch"/>
												<Setter Property="VerticalAlignment" Value="Center"/>
												<Setter Property="Margin" Value="4,0"/>
												<Setter Property="Padding" Value="0"/>
												<Setter Property="FontSize" Value="14" />
											</Style>
										</ContentPresenter.Resources>
									</ContentPresenter>
								</Border>
							</DockPanel>
							<ToggleButton ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource Virto_ComboBoxAlternateButton_Style}" Width="Auto" Foreground="{TemplateBinding Foreground}"/>
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Focus">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Virto_Unfocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Validation">
								<VisualState x:Name="Valid">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Unfocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Transparent_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<!--<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Transparent_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>-->
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDropDownOpen" Value="true">
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template" Value="{StaticResource Virto_ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--default-->
	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource Virto_ComboBoxMetro_Style}" />

	<!--M_style-->
	<Style x:Key="Virto_SearchComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource Virto_AlternateInputControl_Style}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource Virto_SearchComboBoxFocusVisual_Style}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Height" Value="22"/>
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Padding" Value="2,1"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource Virto_SearchComboBoxItem_Style}"/>
		<Setter Property="Background" Value="{StaticResource Virto_SearchTextBox_Background_Brush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Virto_SearchTextBox_Border_Brush}"/>
		<Setter Property="BorderThickness" Value="1"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" BorderThickness="1" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
						<Grid>
							<!--main visible content - single item only-->
							<Border x:Name="Border">
								<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" OpacityMask="{x:Null}">
									<Border x:Name="DropDownBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}" Background="{TemplateBinding Background}">
										<ScrollViewer x:Name="DropDownScrollViewer" Margin="-1,0,-1,2">
											<Grid RenderOptions.ClearTypeHint="Enabled">
												<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
													<Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
												</Canvas>
												<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
											</Grid>
										</ScrollViewer>
									</Border>
								</Popup>
							</Border>
							<DockPanel>
								<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
								<Border x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}" Background="{x:Null}">
									<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Border>
							</DockPanel>
							<ToggleButton ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Style="{StaticResource Virto_ComboBoxTransparentButton_Style}" Width="Auto" Foreground="{TemplateBinding Foreground}"/>
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Focus">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Virto_HoverMouseFocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Virto_Unfocused_BorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDropDownOpen" Value="true">
							<Setter Property="Background" Value="{StaticResource Virto_ComboBox_Popup_Background_Brush}"/>
							<Setter Property="Foreground" Value="{StaticResource Virto_ComboBox_Popup_Foreground_Brush}"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
							<Setter Property="CornerRadius" TargetName="mainBorder" Value="3,3,0,0"/>
						</Trigger>
						<Trigger Property="IsDropDownOpen" Value="false">
							<Setter Property="CornerRadius" TargetName="mainBorder" Value="3"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- NullItemSelectorAdapter -->
	<!--can't be BasedOn="{StaticResource {x:Type ComboBox}}"-->
	<Style TargetType="{x:Type core_controls:NullItemSelectorAdapter}" BasedOn="{StaticResource Virto_AlternateInputControl_Style}">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="IsAddingNullItemsFirst" Value="True" />
	</Style>

	<!--<Style x:Key="Virto_SearchNullItemSelectorAdapterStyle" TargetType="{x:Type core_controls:NullItemSelectorAdapter}">
		<Style.Resources>
			<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource Virto_ComboBoxMetro_Style}" />
		</Style.Resources>

		<Setter Property="Height" Value="22" />
	</Style>-->

	<!--DialogWindows-->
	<Style x:Key="Virto_ContentDialogWindow" TargetType="{x:Type Window}">
		<Setter Property="WindowStyle" Value="None"/>
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="{DynamicResource Virto_Dialog_Background}"/>
		<Setter Property="ShowInTaskbar" Value="False"/>
		<!--<Setter Property="MaxWidth" Value="450"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Grid Margin="5">
						<!--semi-transparent layer in the background-->
						<Rectangle Fill="#33000000" />
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" VerticalAlignment="Center">
							<Grid MinWidth="350" MaxWidth="900">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>

								<i:Interaction.Triggers>
									<!--can't skip validations-->
									<!--<ei:KeyTrigger Key="Enter">
										<ei:ChangePropertyAction PropertyName="Confirmed" TargetObject="{Binding}" Value="True"/>
										<ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type core_dialogs:InteractionDialogBase}}}" MethodName="Close"/>
									</ei:KeyTrigger>-->
									<ei:KeyTrigger Key="Escape">
										<ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type core_dialogs:InteractionDialogBase}}}" MethodName="Close"/>
									</ei:KeyTrigger>
								</i:Interaction.Triggers>

								<!--Title-->
								<!--<TextBlock Text="{Binding Title}" Margin="5,0" Style="{StaticResource Virto_BlockCaptionTextStyle}" HorizontalAlignment="Center" />-->

								<Grid Grid.Row="1" MinHeight="150" MaxHeight="400">
									<!--content from styled control-->
									<ContentControl Grid.Row="1" Content="{TemplateBinding Content}" />

								</Grid>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--style for holding buttons inside confirmation dialogs-->
	<Style x:Key="Virto_LinedButtonsStackPanel_Style" TargetType="{x:Type StackPanel}">
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Margin" Value="0,5,5,5" />
	</Style>
	<!--DialogWindows-->

	<!-- Scroll -->
	<!--M_style-->
	<Style x:Key="Virto_ScrollBarLineButton_Style" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="{DynamicResource Virto_Scroll_RepeatButton_Backround_Brush}"/>
		<Setter Property="Foreground" Value="{DynamicResource Virto_Scroll_RepeatButton_Foreground_Brush}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
						<Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
							<Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<Path x:Name="hoverPath" Opacity="0" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="hoverPath" Value="1"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true"/>
						<Trigger Property="IsEnabled" Value="false"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!--M_style-->
	<Style x:Key="Virto_VerticalScrollBarPageButton_Style" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource Virto_Scroll_Backround_Brush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_HorizontalScrollBarThumb_Style"  TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid x:Name="ThumbVisual" Grid.RowSpan="2">
						<Rectangle x:Name="Background" StrokeThickness="1"  Fill="{StaticResource Virto_Scroll_Tumb_Backround_Brush}"  Stroke="{x:Null}" Margin="2"/>
						<Rectangle x:Name="BackgroundOver" StrokeThickness="1" Stroke="{x:Null}" Opacity="0" Fill="White"/>
						<Rectangle x:Name="BackgroundPressed" StrokeThickness="1" Stroke="{x:Null}" Opacity="0"/>
						<!--
										<Path Margin="-6,0,0,0" Width="1" Height="11" Stretch="Fill" Stroke="#FF808082" StrokeThickness="1" Data="M6.8333325,4.916666 L6.8333325,11.504745" HorizontalAlignment="Center" VerticalAlignment="Center">
											<Path.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFF0F0F0" Offset="0.446"/>
													<GradientStop Color="#FFC8C9CC" Offset="0.473"/>
												</LinearGradientBrush>
											</Path.Fill>
										</Path>
										<Path Margin="-2,0,0,0" Width="1" Height="11" Stretch="Fill" Stroke="#FF808082" StrokeThickness="1" Data="M6.8333325,4.916666 L6.8333325,11.504745" HorizontalAlignment="Center" VerticalAlignment="Center">
											<Path.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFF0F0F0" Offset="0.446"/>
													<GradientStop Color="#FFC8C9CC" Offset="0.473"/>
												</LinearGradientBrush>
											</Path.Fill>
										</Path>
										<Path Margin="0,0,-2,0" Width="1" Height="11" Stretch="Fill" Stroke="#FF808082" StrokeThickness="1" Data="M6.8333325,4.916666 L6.8333325,11.504745" HorizontalAlignment="Center" VerticalAlignment="Center">
											<Path.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFF0F0F0" Offset="0.446"/>
													<GradientStop Color="#FFC8C9CC" Offset="0.473"/>
												</LinearGradientBrush>
											</Path.Fill>
										</Path>
										<Path Margin="0,0,-6,0" Width="1" Height="11" Stretch="Fill" Stroke="#FF808082" StrokeThickness="1" Data="M6.8333325,4.916666 L6.8333325,11.504745" HorizontalAlignment="Center" VerticalAlignment="Center">
											<Path.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFF0F0F0" Offset="0.446"/>
													<GradientStop Color="#FFC8C9CC" Offset="0.473"/>
												</LinearGradientBrush>
											</Path.Fill>
										</Path>-->
						<Rectangle x:Name="Highlight" Stroke="Transparent" StrokeThickness="1" Margin="1" Opacity="0.6" IsHitTestVisible="false" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="BackgroundOver" Property="Opacity" Value="1"/>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="BackgroundOver" Property="Opacity" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_VerticalScrollBarThumb_Style"  TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid x:Name="ThumbVisual" >
						<Rectangle x:Name="Height" Height="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollBar}}}"/>
						<Rectangle x:Name="Background" StrokeThickness="0" Stroke="{x:Null}" Fill="{StaticResource Virto_Scroll_Tumb_Backround_Brush}" />
						<Rectangle x:Name="BackgroundMouseOver" StrokeThickness="1" Stroke="{x:Null}" Fill="White" Opacity="0"/>
						<Rectangle x:Name="BackgroundPressed"  StrokeThickness="1" Stroke="{x:Null}" Fill="White" Opacity="0"/>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" Value="0.2" TargetName="BackgroundMouseOver"/>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Setter Property="Opacity" Value="0.2" TargetName="BackgroundPressed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!--M_style-->
	<Style x:Key="Virto_HorizontalScrollBarPageButton_Style" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource Virto_Scroll_Backround_Brush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--M_style-->
	<Style x:Key="Virto_ScrollBar_Style" TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="Margin" Value="0,0,0,3" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="0.00001*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Viewbox Stretch="Fill">
							<RepeatButton x:Name="repeatButtonUp" Content="M 0 8 L 8 8 L 4 0 Z" Command="{x:Static ScrollBar.LineUpCommand}" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Style="{StaticResource Virto_ScrollBarLineButton_Style}"/>
						</Viewbox>

						<Rectangle x:Name="Bd" Fill="{DynamicResource Virto_Scroll_Backround_Brush}" Grid.Row="1" />
						<Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource Virto_VerticalScrollBarPageButton_Style}"/>
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource Virto_VerticalScrollBarPageButton_Style}"/>
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb x:Name="thumb" Style="{StaticResource Virto_VerticalScrollBarThumb_Style}"/>
							</Track.Thumb>
						</Track>
						<Viewbox Grid.Row="2" Stretch="Fill">
							<RepeatButton x:Name="repeatButtonDown" Content="M 0 0 L 4 8 L 8 0 Z" Command="{x:Static ScrollBar.LineDownCommand}" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Style="{StaticResource Virto_ScrollBarLineButton_Style}"/>
						</Viewbox>

						<i:Interaction.Triggers>
							<ei:DataTrigger Binding="{Binding IsDragging, ElementName=thumb, Mode=OneWay}" Value="true">
								<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Dragging_Backround_Brush}"/>
							</ei:DataTrigger>
							<ei:DataTrigger Binding="{Binding IsDragging, ElementName=thumb, Mode=OneWay}" Value="false">
								<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Backround_Brush}"/>
							</ei:DataTrigger>
							<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonUp, Mode=OneWay}" Value="true">
								<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Dragging_Backround_Brush}"/>
							</ei:DataTrigger>
							<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonUp, Mode=OneWay}" Value="false">
								<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Backround_Brush}"/>
							</ei:DataTrigger>
							<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonDown, Mode=OneWay}" Value="true">
								<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Dragging_Backround_Brush}"/>
							</ei:DataTrigger>
							<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonDown, Mode=OneWay}" Value="false">
								<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Backround_Brush}"/>
							</ei:DataTrigger>
						</i:Interaction.Triggers>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="Margin" Value="0,0,0,6" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									<ColumnDefinition Width="0.00001*"/>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Grid.ColumnDefinitions>

								<Viewbox Stretch="Fill">
									<RepeatButton x:Name="repeatButtonLeft" Content="M8.0000002,0 L8.0000002,1.9229198 2.9999998,5.1277871 8.0000002,8.1729202 8.0000002,10 0,5.1277871 z" Command="{x:Static ScrollBar.LineLeftCommand}" MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" Style="{StaticResource Virto_ScrollBarLineButton_Style}" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Viewbox>
								<Rectangle x:Name="Bd" Grid.Column="1" Fill="{StaticResource Virto_Scroll_Backround_Brush}" RadiusX="6" RadiusY="6"/>
								<Track x:Name="PART_Track" Grid.Column="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource Virto_HorizontalScrollBarPageButton_Style}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource Virto_HorizontalScrollBarPageButton_Style}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb x:Name="thumb" Style="{StaticResource Virto_HorizontalScrollBarThumb_Style}"/>
									</Track.Thumb>
								</Track>
								<Viewbox Grid.Column="2" Stretch="Fill">
									<RepeatButton x:Name="repeatButtonRight" Content="M0,0 L8,4.8722129 0,9.9999998 0,8.07708 5.0000005,4.8722129 0,1.8270798 z" Command="{x:Static ScrollBar.LineRightCommand}" MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" Style="{StaticResource Virto_ScrollBarLineButton_Style}" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Viewbox>

								<i:Interaction.Triggers>
									<ei:DataTrigger Binding="{Binding IsDragging, ElementName=thumb, Mode=OneWay}" Value="true">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Dragging_Backround_Brush}"/>
									</ei:DataTrigger>
									<ei:DataTrigger Binding="{Binding IsDragging, ElementName=thumb, Mode=OneWay}" Value="false">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Backround_Brush}"/>
									</ei:DataTrigger>
									<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonLeft, Mode=OneWay}" Value="true">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Dragging_Backround_Brush}"/>
									</ei:DataTrigger>
									<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonLeft, Mode=OneWay}" Value="false">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Backround_Brush}"/>
									</ei:DataTrigger>
									<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonRight, Mode=OneWay}" Value="true">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Dragging_Backround_Brush}"/>
									</ei:DataTrigger>
									<ei:DataTrigger Binding="{Binding IsPressed, ElementName=repeatButtonRight, Mode=OneWay}" Value="false">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=Bd}" PropertyName="Fill" Value="{StaticResource Virto_Scroll_Backround_Brush}"/>
									</ei:DataTrigger>
								</i:Interaction.Triggers>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Virto_ScrollBar_Style}" />

	<!--M_style-->
	<Style TargetType="{x:Type ScrollViewer}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid x:Name="Grid" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1" Fill="Transparent" />
						<ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
						<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar" Width="Auto" MinWidth="14" />
						<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar" MinHeight="14" Height="Auto" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- End Scroll -->

	<Style TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}">
					<Border BorderThickness="0" Background="Transparent">
						<core_virtualization:LoadingAnimation />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="HasError" Value="True">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type core_virtualization:VirtualListLoadingIndicator}">
							<Border Background="White">
								<ScrollViewer VerticalScrollBarVisibility="Auto">
									<StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
										<TextBlock TextWrapping="Wrap"><Run Text="We're sorry, an error occured while loading data from server."/><LineBreak /><Run Text="Please"/><Run Text=" "/><Hyperlink CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}" Command="{x:Static core_virtualization:VirtualListLoadingIndicator.RetryCommand}"><Run Text="retry"/></Hyperlink><Run Text=" "/><Run Text="or contact the support staff."/></TextBlock>
										<Expander>
											<Expander.Header>
												<TextBlock><Run Text="Detailed Error Message"/></TextBlock>
											</Expander.Header>
											<TextBox TextWrapping="Wrap" IsReadOnly="True" Text="{TemplateBinding ErrorMessage}" />
										</Expander>
									</StackPanel>
								</ScrollViewer>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--gridview resources-->
	<!--<Style x:Key="GridView_Alternate_ItemContainerStyle" TargetType="{x:Type ListViewItem}">
		<Style.Resources>

			<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Virto_GridView_Alternate_ContentTextStyle}" />
		</Style.Resources>
		<Setter Property="core_virtualization:VirtualListItemBase.AutoLoad" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="MinHeight" Value="37"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Bd" BorderThickness="1" SnapsToDevicePixels="true" BorderBrush="{x:Null}" Padding="12,0">
						<GridViewRowPresenter
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter	Property="Background" TargetName="Bd" Value="#E2E2E2"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="#E2E2E2"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="#B9B9B9"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

	<Style x:Key="Virto_VirtualFolderItemList_AlternateStyle" TargetType="{x:Type core_controls:VirtualFolderItemList}">
		<Style.Resources>
			<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Virto_ScrollBar_Style}">
				<Setter Property="Margin" Value="0,27,0,3" />
			</Style>
		</Style.Resources>
		<Setter Property="common:GridViewSort.AutoSort" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<!--x:Key="{x:Type core_controls:CombinedImage}"-->
	<Style TargetType="{x:Type core_controls:CombinedImage}">
		<Style.Resources>
			<Style TargetType="{x:Type Path}">
				<Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type core_controls:CombinedImage}}}" />
			</Style>
		</Style.Resources>
		<Setter Property="Foreground" Value="{StaticResource Virto_AlternateCommandButton_Border_Brush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type core_controls:CombinedImage}">
					<Viewbox>
						<Grid Height="60" Width="60">
							<ContentControl Content="{TemplateBinding ImageSource1}" />
							<ContentControl Content="{TemplateBinding ImageSource2}" RenderTransformOrigin="1.2,1.2">
								<ContentControl.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
									</TransformGroup>
								</ContentControl.RenderTransform>
							</ContentControl>
						</Grid>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Virto_CombinedImage_Tool" TargetType="{x:Type core_controls:CombinedImage}" BasedOn="{StaticResource {x:Type core_controls:CombinedImage}}">
		<Setter Property="Margin" Value="6"/>
		<Setter Property="Width" Value="20"/>
		<Setter Property="Height" Value="20"/>
	</Style>

	<Style x:Key="Virto_ToolsDockPanel_Style" TargetType="{x:Type DockPanel}">
		<Style.Resources>
			
			<Style TargetType="{x:Type core_controls:CombinedImage}" BasedOn="{StaticResource Virto_CombinedImage_Tool}" />
			<Style TargetType="{x:Type Image}">
				<Setter Property="Margin" Value="3"/>
				<Setter Property="Width" Value="20"/>
				<Setter Property="Height" Value="20"/>
			</Style>
		</Style.Resources>
		<Setter Property="DockPanel.Dock" Value="Top"/>
		<Setter Property="Background" Value="{StaticResource Virto_ToolBox_Background_Brush}"/>
		<Setter Property="Height" Value="45"/>
	</Style>


	<!--ContextMenu-->

	<Style TargetType="ContextMenu">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContextMenu">
					<Border Background="{StaticResource Virto_ContextMenu_Background_Brush}" BorderThickness="1" BorderBrush="{StaticResource Virto_ContextMenu_Border_Background_Brush}" >
						<StackPanel IsItemsHost="True"
					  KeyboardNavigation.DirectionalNavigation="Cycle"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="LayoutRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
			<Grid x:Name="ContentHost"
				  TextBlock.Foreground="{TemplateBinding Foreground}"
				  TextBlock.FontFamily="{TemplateBinding FontFamily}"
				  TextBlock.FontSize="{TemplateBinding FontSize}"
				  TextBlock.FontStretch="{TemplateBinding FontStretch}"
				  TextBlock.FontStyle="{TemplateBinding FontStyle}"
				  TextBlock.FontWeight="{TemplateBinding FontWeight}"
				  TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
				  TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
				  RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
				<ContentPresenter x:Name="HeaderHost"
								  ContentSource="Header"
								  RecognizesAccessKey="True"
								  Margin="{TemplateBinding Padding}"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
				<Popup x:Name="PART_Popup"
					   Grid.IsSharedSizeScope="True"
					   AllowsTransparency="True"
					   Focusable="False"
					   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSubmenuOpen, Mode=TwoWay}"
					   Placement="Bottom"
					   PlacementTarget="{Binding ElementName=LayoutRoot}"
					   >
					<Border x:Name="PopupRoot"
							Tag="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"
							UseLayoutRounding="False"
							SnapsToDevicePixels="True">
						<Grid>
							<Border Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=Foreground}"
									TextBlock.FontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=FontFamily}"
									TextBlock.FontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=FontSize}"
									TextBlock.FontStretch="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=FontStretch}"
									TextBlock.FontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=FontStyle}"
									TextBlock.FontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=FontWeight}"
									TextOptions.TextFormattingMode="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(TextOptions.TextFormattingMode)}"
									TextOptions.TextRenderingMode="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(TextOptions.TextRenderingMode)}"
									RenderOptions.ClearTypeHint="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(RenderOptions.ClearTypeHint)}"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch">
								<StackPanel IsItemsHost="True"
											KeyboardNavigation.DirectionalNavigation="Cycle"/>
							</Border>
							<Rectangle x:Name="PopupMask"
									   Fill="{TemplateBinding Background}"
									   Margin="{TemplateBinding Margin}"
									   HorizontalAlignment="Left"
									   VerticalAlignment="Top"
									   Width="{Binding ElementName=ContentHost, Path=ActualWidth}"/>
						</Grid>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSubmenuOpen" Value="True">
				<Setter TargetName="PART_Popup" Property="IsOpen" Value="True"/>
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
				<!--<Setter TargetName="LayoutRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:MenuBase.SubmenuBackground)}"/>
				<Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:MenuBase.SubmenuBorderBrush)}"/>-->
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition SourceName="PART_Popup" Property="IsOpen" Value="True"/>
					<!--<Condition SourceName="PART_Popup" Property="params:DropDown.IsDefaultHorizontalPosition" Value="True"/>
					<Condition SourceName="PART_Popup" Property="params:DropDown.IsDefaultVerticalPosition" Value="True"/>-->
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<!--<Setter TargetName="LayoutRoot" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:MenuBase.SubmenuBorderThickness), Converter={StaticResource ThicknessConverter}, ConverterParameter='Left, Top, Right'}"/>
					<Setter TargetName="PopupMask" Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:MenuBase.SubmenuBorderThickness), Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter='Top'}"/>-->
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition SourceName="PART_Popup" Property="IsOpen" Value="True"/>
					<!--<Condition SourceName="PART_Popup" Property="params:DropDown.IsDefaultHorizontalPosition" Value="True"/>
					<Condition SourceName="PART_Popup" Property="params:DropDown.IsDefaultVerticalPosition" Value="False"/>-->
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<!--<Setter TargetName="LayoutRoot" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:MenuBase.SubmenuBorderThickness), Converter={StaticResource ThicknessConverter}, ConverterParameter='Left, Right, Bottom'}"/>
					<Setter TargetName="PopupMask" Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:MenuBase.SubmenuBorderThickness), Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter='Bottom'}"/>-->
					<Setter TargetName="PopupMask" Property="VerticalAlignment" Value="Bottom"/>
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding ElementName=PopupRoot, Path=Tag}" Value="True"/>
					<!--<Condition Binding="{Binding ElementName=PART_Popup, Path=(params:DropDown.IsDefaultVerticalPosition)}" Value="True"/>-->
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<!--<Setter TargetName="PopupRoot" Property="Effect">
						<Setter.Value>
							<DropShadowEffect Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:General.ShadowBrush).(SolidColorBrush.Color)}"
														  BlurRadius="4" ShadowDepth="2"
														  Direction="315"
														  Opacity="0.3"/>
						</Setter.Value>
					</Setter>-->
					<!--<Setter TargetName="PopupRoot" Property="Background" Value="Trasparent"/>-->
					<Setter TargetName="PopupRoot" Property="Padding" Value="0,0,6,6"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding ElementName=PopupRoot, Path=Tag}" Value="True"/>
					<!--<Condition Binding="{Binding ElementName=PART_Popup, Path=(params:DropDown.IsDefaultVerticalPosition)}" Value="False"/>-->
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<!--<Setter TargetName="PopupRoot" Property="Effect">
						<Setter.Value>
							<DropShadowEffect Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}, Path=(params:General.ShadowBrush).(SolidColorBrush.Color)}"
														  BlurRadius="4" ShadowDepth="0"
														  Direction="45"
														  Opacity="0.3"/>
						</Setter.Value>
					</Setter>-->
					<!--<Setter TargetName="PopupRoot" Property="Background" Value="{StaticResource TransparentBrush}"/>-->
					<Setter TargetName="PopupRoot" Property="Padding" Value="0,0,4,0"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="LayoutRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				TextBlock.Foreground="{TemplateBinding Foreground}"
				TextBlock.FontFamily="{TemplateBinding FontFamily}"
				TextBlock.FontSize="{TemplateBinding FontSize}"
				TextBlock.FontStretch="{TemplateBinding FontStretch}"
				TextBlock.FontStyle="{TemplateBinding FontStyle}"
				TextBlock.FontWeight="{TemplateBinding FontWeight}"
				TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
				TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
				RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
			<ContentPresenter x:Name="HeaderHost"
								ContentSource="Header"
								RecognizesAccessKey="True"
								Margin="{TemplateBinding Padding}"/>
		</Border>
	</ControlTemplate>

	<!-- SubmenuHeader -->
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
					 TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Border x:Name="Bg"
					   Background="{TemplateBinding Background}"
					   BorderBrush="{TemplateBinding BorderBrush}"
					   BorderThickness="0"
					   />
			<!--<Rectangle x:Name="InnerBorder" Margin="1" Stroke="Transparent" StrokeThickness="1" />-->
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24"
									  Width="Auto"
									  SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="4"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="37"/>
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="17"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  Margin="1"
								  VerticalAlignment="Center"
								  ContentSource="Icon"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Border x:Name="GlyphPanel"
							Background="#E6EFF4"
							BorderBrush="#CDD3E6"
							BorderThickness="0"
							CornerRadius="0"
							Margin="1"
							Visibility="Hidden"
							Width="22" 
							Height="22">
					<!--<Path Name="Glyph"
						  Width="9"
						  Height="11"
						  Fill="#0C12A1"
						  FlowDirection="LeftToRight"
						  Data="{StaticResource Checkmark}"/>-->
				</Border>
				<ContentPresenter Grid.Column="2"
								  ContentSource="Header"
								  Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<TextBlock Grid.Column="4"
						   Text="{TemplateBinding InputGestureText}"
						   Margin="{TemplateBinding Padding}"
						   Visibility="Collapsed"/>
				<Path Grid.Column="5"
						  VerticalAlignment="Center"
						  Margin="4,0,0,0"
						  Fill="{TemplateBinding Foreground}"
						  Data="M 0 0 L 0 7 L 4 3.5 Z"/>
			</Grid>
			<Popup x:Name="PART_Popup" 
					   AllowsTransparency="true"
					   Placement="Right"
					   VerticalOffset="-3"
					   HorizontalOffset="-2"
					   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					   Focusable="false"
					   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
				<Border x:Name="Shdw" BorderThickness="1" Margin="0" Background="{StaticResource Virto_ContextMenu_Background_Brush}" Padding="0" BorderBrush="{StaticResource Virto_ContextMenu_Border_Background_Brush}">
					<!--<theme:SystemDropShadowChrome Name="Shdw"
											  Color="Transparent">-->
					<ContentControl x:Name="SubMenuBorder" Padding="0" Margin="0" IsTabStop="false" >
						<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Padding="0" Margin="0"
									  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<StackPanel RenderOptions.ClearTypeHint="Enabled" Background="{StaticResource Virto_ContextMenu_Background_Brush}">
								<ItemsPresenter x:Name="ItemsPresenter" Margin="0"
											KeyboardNavigation.TabNavigation="Cycle"
											KeyboardNavigation.DirectionalNavigation="Cycle"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											Grid.IsSharedSizeScope="true"/>
							</StackPanel>
						</ScrollViewer>
					</ContentControl>
					<!--</theme:SystemDropShadowChrome>-->
				</Border>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<!--<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>-->
			<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
				<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
				<Setter TargetName="Shdw" Property="Background" Value="#71000000"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Bg" Property="Background" Value="{StaticResource Virto_ContextMenu_MouseOver_Background_Brush}"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->

	<!-- x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}" -->
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Border x:Name="Bg"
					   Background="{TemplateBinding Background}"
					   BorderBrush="{TemplateBinding BorderBrush}"
					   BorderThickness="0">

				<!--<Rectangle x:Name="InnerBorder" />-->
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
						<ColumnDefinition Width="4"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="37"/>
						<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
						<ColumnDefinition Width="17"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon"
								  Margin="1"
								  VerticalAlignment="Center"
								  ContentSource="Icon"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<ContentPresenter Grid.Column="2"
								  ContentSource="Header"
								  Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<TextBlock Grid.Column="4"
						   Text="{TemplateBinding InputGestureText}"
						   Margin="{TemplateBinding Padding}"/>
				</Grid>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Bg" Property="Background" Value="{StaticResource Virto_ListBoxItem_Selected_Brush}"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<!--<Setter TargetName="Bg" Property="Fill" Value="#A0A9A9A9"/>-->
				<!--<Setter TargetName="Bg" Property="Stroke" Value="#8071CBF1"/>
						<Setter TargetName="InnerBorder" Property="Stroke" Value="#40FFFFFF"/>-->
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Style -->
	<!-- x:Key="{x:Type MenuItem}" -->
	<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
		<Setter Property="Foreground" Value="{StaticResource Virto_AlternateLabelForeground}"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Padding" Value="2,3"/>
		<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
		<Style.Triggers>

			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--extended Toolkit styles: IntegerUpDown -->
	<ControlTemplate x:Key="ButtonSpinner_ControlTemplate" TargetType="{x:Type extToolkit:ButtonSpinner}">
		<Grid>
			<Border x:Name="ElementContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0">
				<DockPanel Focusable="False">
					<Grid DockPanel.Dock="Right" Visibility="{Binding ShowButtonSpinner, RelativeSource={RelativeSource
TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<RepeatButton x:Name="IncreaseButton" ClickMode="Press" IsTabStop="{Binding IsTabStop, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" SnapsToDevicePixels="True">
							<RepeatButton.Template>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
								</ControlTemplate>
							</RepeatButton.Template>
							<Grid>
								<!--<Microsoft_Windows_Controls_Chromes:ButtonChrome CornerRadius="0" RenderMouseOver="{Binding IsMouseOver, ElementName=IncreaseButton}" RenderPressed="{Binding IsPressed, ElementName=IncreaseButton}" RenderEnabled="{TemplateBinding IsEnabled}"/>-->
								<ContentControl Focusable="False" Margin="5,1">
									<ContentControl.ContentTemplate>
										<DataTemplate>
											<Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" Fill="Black" Height="4" Width="7"/>
										</DataTemplate>
									</ContentControl.ContentTemplate>
								</ContentControl>
							</Grid>
						</RepeatButton>
						<RepeatButton x:Name="DecreaseButton" ClickMode="Press" IsTabStop="{Binding IsTabStop, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="2" SnapsToDevicePixels="True">
							<RepeatButton.Template>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
								</ControlTemplate>
							</RepeatButton.Template>
							<Grid>
								<!--<Microsoft_Windows_Controls_Chromes:ButtonChrome CornerRadius="0" RenderMouseOver="{Binding IsMouseOver, ElementName=DecreaseButton}" RenderPressed="{Binding IsPressed, ElementName=DecreaseButton}" RenderEnabled="{TemplateBinding IsEnabled}" BorderThickness="1,0,1,1"/>-->
								<ContentControl Focusable="False" Margin="5,1">
									<ContentControl.ContentTemplate>
										<DataTemplate>
											<Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="Black" Height="4" Width="7"/>
										</DataTemplate>
									</ContentControl.ContentTemplate>
								</ContentControl>
							</Grid>
						</RepeatButton>
					</Grid>
					<ContentControl x:Name="presentationSite" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
				</DockPanel>
			</Border>
		</Grid>
	</ControlTemplate>

	<Style TargetType="{x:Type extToolkit:IntegerUpDown}" BasedOn="{StaticResource Virto_AlternateInputControl_Style}">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="70" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Minimum" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<extToolkit:ButtonSpinner x:Name="Spinner" AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsTabStop="False" ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ButtonSpinner_ControlTemplate}" BorderBrush="{TemplateBinding BorderBrush}" >
						<extToolkit:WatermarkTextBox x:Name="TextBox" AcceptsReturn="False" BorderThickness="0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20" TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="NoWrap" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}" WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" Padding="0,0,8,0">
							<extToolkit:WatermarkTextBox.IsReadOnly>
								<Binding Path="IsEditable" RelativeSource="{RelativeSource TemplatedParent}">
									<!--<Binding.Converter>
										<Microsoft_Windows_Controls_Core_Converters:InverseBoolConverter/>
									</Binding.Converter>-->
								</Binding>
							</extToolkit:WatermarkTextBox.IsReadOnly>
						</extToolkit:WatermarkTextBox>
					</extToolkit:ButtonSpinner>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--M-->
	<!--<Style x:Key="SortableGridViewHeaderStyle" TargetType="{x:Type ContentControl}">
		<Style.Setters>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContentControl}">
						<StackPanel Orientation="Horizontal">
							<Image VerticalAlignment="Center">
							</Image>
							<TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center"/>
						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>-->

	<!--Buttons style-->
	<!--button with lightblue background and light foreground. E.g. important command -->
	<!--M_style-->
	<Style x:Key="Virto_CommandButton_Style" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="True"></Setter>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Opacity" Value="1"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="Background" Value="{DynamicResource Virto_MertoCommandButton_Brush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_MertoCommandButton_Brush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Bd" BorderThickness="1" CornerRadius="0" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" ClipToBounds="True" Padding="6,4">
						<Border x:Name="innerShadow" BorderThickness="0,0,0,0" Margin="-2">
							<ContentPresenter x:Name="content" TextBlock.Foreground="{StaticResource Virto_AlternateCommandButton_Foreground_Brush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0">
							</ContentPresenter>
							<Border.RenderTransform>
								<TranslateTransform x:Name="translateTransform"/>
							</Border.RenderTransform>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Common">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Pressed_Background_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Hover_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Disabled_Background_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="(TextBlock.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Disabled_Foreground_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Virto_Button_Disabled_Border_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	
	
	
	<!-- DatePicker -->
	<!--M_style-->
	<Style x:Key="Virto_DatePicker_Style"  TargetType="{x:Type DatePicker}" BasedOn="{StaticResource Virto_AlternateInputControl_Style}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource Virto_SearchComboBoxFocusVisual_Style}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource Virto_SearchTextBox_Border_Brush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}" >
					<Border BorderThickness="1" Padding="{TemplateBinding Control.Padding}" CornerRadius="0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
						<Grid Name="PART_Root" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.Resources>
								<SolidColorBrush x:Key="DisabledBrush">#A5FFFFFF</SolidColorBrush>
							</Grid.Resources>
							<Button Foreground="{TemplateBinding TextElement.Foreground}" Name="PART_Button" Width="24" Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Focusable="False" Grid.Column="1">
								<Button.Template>
									<ControlTemplate TargetType="Button">
										<StackPanel>
											<Path Data="M48.569,46.010001L56.333317,46.010001 56.333317,52.009501 48.569,52.009501z M33.634998,46.010001L45.902,46.010001 45.902,52.009501 33.634998,52.009501z M19.771,46.010001L30.969,46.010001 30.969,52.009501 19.771,52.009501z M7.3336616,46.010001L17.104,46.010001 17.104,52.009501 7.3336616,52.009501z M48.569,33.565999L56.333317,33.565999 56.333317,43.343001 48.569,43.343001z M33.634998,33.565999L45.902,33.565999 45.902,43.343001 33.634998,43.343001z M7.3336616,33.565999L17.104,33.565999 17.104,43.343001 7.3336616,43.343001z M48.569,24.3429L56.333317,24.3429 56.333317,30.898999 48.569,30.898999z M33.634998,24.3429L45.902,24.3429 45.902,30.898999 33.634998,30.898999z M19.771,24.3429L30.969,24.3429 30.969,30.898999 19.771,30.898999z M7.3336616,24.3429L17.104,24.3429 17.104,30.898999 7.3336616,30.898999z M4.6669998,21.676L4.6669998,54.676002 59,54.676002 59,21.676z M0,8.2830003L12.437,8.2830003 12.437,12.797082C12.437,16.108637 15.1272,18.801001 18.4345,18.801001 21.7444,18.801001 24.436998,16.108637 24.436998,12.797082L24.436998,8.2830003 41.233997,8.2830003 41.233997,12.797082C41.233997,16.108637 43.926712,18.801001 47.236748,18.801001 50.545586,18.801001 53.237,16.108637 53.237,12.797082L53.237,8.2830003 64.333,8.2830003 64.333,58.783 0,58.783z M47.237251,0C48.71328,0,49.903999,1.1923261,49.903999,2.6639395L49.903999,12.797221C49.903999,14.275254 48.71328,15.467999 47.237251,15.467999 45.764023,15.467999 44.568001,14.275254 44.568001,12.797221L44.568001,2.6639395C44.568001,1.1923261,45.764023,0,47.237251,0z M18.43495,0C19.909369,0,21.104,1.1923261,21.104,2.6639395L21.104,12.797221C21.104,14.275254 19.909369,15.467999 18.43495,15.467999 16.965633,15.467999 15.771,14.275254 15.771,12.797221L15.771,2.6639395C15.771,1.1923261,16.965633,0,18.43495,0z" Stretch="Uniform" Fill="#FF000000" Width="23" Height="23" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
										</StackPanel>
									</ControlTemplate>
								</Button.Template>
							</Button>
							<DatePickerTextBox Foreground="{TemplateBinding TextElement.Foreground}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Name="PART_TextBox" Grid.Column="0" Grid.Row="0" xml:space="preserve"></DatePickerTextBox>
							<Grid Name="PART_DisabledVisual" Opacity="0" IsHitTestVisible="False" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Rectangle RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Grid.Column="0" Grid.Row="0" />
								<Rectangle RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Width="19" Height="18" Margin="3,0,3,0" Grid.Column="1" Grid.Row="0" />
								<Popup Placement="Bottom" StaysOpen="False" AllowsTransparency="True" Name="PART_Popup" />
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="SelectedDate" Value="{x:Null}">
							<Setter Property="FontStyle"  Value="Italic" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	

	<!--merge from prototype-->
	<!--General-->
	<SolidColorBrush x:Key="BackgroundHighlighted" Color="#54545C"/>
	<SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
	<SolidColorBrush x:Key="BackgroundNormal" Color="#3F3F46"/>

	<Style TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="8,4"/>
		<Setter Property="MinHeight" Value="2"/>
		<Setter Property="MinWidth" Value="2"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Foreground" Value="{StaticResource Virto_SeparatorLeftLine_Brush}"/>
		<Setter Property="Background" Value="{StaticResource Virto_SeparatorRightLine_Brush}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid x:Name="separator" Margin="{TemplateBinding Padding}">
						<Rectangle Width="1" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
						<Rectangle Width="1" Fill="{TemplateBinding Background}" HorizontalAlignment="Right"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>