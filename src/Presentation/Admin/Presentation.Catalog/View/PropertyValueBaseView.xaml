<base:ViewBase xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     x:Class="VirtoCommerce.ManagementClient.Catalog.View.PropertyValueBaseView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:behaviors="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="http://www.codeplex.com/prism"
     xmlns:inf="clr-namespace:VirtoCommerce.ManagementClient.Catalog.Infrastructure"
     xmlns:extToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
     mc:Ignorable="d" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Catalog"
               xmlns:model="clr-namespace:VirtoCommerce.ManagementClient.Catalog.Model"
               LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <base:ViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views/GridView.xaml" />
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DialogViewTheme/VirtoCommerceDialogTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </base:ViewBase.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:DisableableLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <!--<ScrollViewer VerticalScrollBarVisibility="Auto">-->
    <Grid d:DataContext="{d:DesignInstance model:PropertyAndPropertyValueBase}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <inf:PropertyValueConverter x:Key="propertyValueConverter" />
        </Grid.Resources>
        <TextBlock Grid.Row="0" Margin="0,12,0,20" Text="{Loc 'Enter property value'}" Visibility="{Binding InnerPropertyIsNotEnum, Converter={StaticResource booleanToVisibilityConverter}}" />
        <TextBlock Grid.Row="1" Text="{Loc 'Select property value(s)'}" Visibility="{Binding InnerItem.IsEnum, Converter={StaticResource booleanToVisibilityConverter}}" />
        <TextBox Grid.Row="2" Visibility="{Binding IsShortStringValue, Converter={StaticResource booleanToVisibilityConverter}}"
             Text="{Binding InnerItem.Value.ShortTextValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="350"/>
        <core_controls:WatermarkedTextBox Grid.Row="3" Visibility="{Binding IsLongStringValue, Converter={StaticResource booleanToVisibilityConverter}}"
             Text="{Binding InnerItem.Value.LongTextValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
             Width="750" Height="140" Style="{StaticResource Virto_Multiline_WatermarkedTextBox_Style}"
             Margin="0,0,0,12" />
        <extToolkit:DecimalUpDown Grid.Row="4" Visibility="{Binding IsDecimalValue, Converter={StaticResource booleanToVisibilityConverter}}"
             Value="{Binding InnerItem.Value.DecimalValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
             Width="120" />
        <extToolkit:IntegerUpDown Grid.Row="5" Visibility="{Binding IsIntegerValue, Converter={StaticResource booleanToVisibilityConverter}}"
             Value="{Binding InnerItem.Value.IntegerValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
             Width="120" />
        <CheckBox Grid.Row="6" Visibility="{Binding IsBooleanValue, Converter={StaticResource booleanToVisibilityConverter}}"
             IsChecked="{Binding InnerItem.Value.BooleanValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=Default}" />
        <DatePicker Grid.Row="7" Visibility="{Binding IsDateTimeValue, Converter={StaticResource booleanToVisibilityConverter}}"
             SelectedDate="{Binding InnerItem.Value.DateTimeValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=Default}" />
        <!-- same image picking xalm is almost duplicated in WizardCreateItemOverviewStepView-->
        <Grid Grid.Row="8" Visibility="{Binding IsAssetValue, Converter={StaticResource booleanToVisibilityConverter}}" Width="350">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <core_controls:WatermarkedTextBox Grid.Column="0" Text="{Binding InnerItem.Value.ShortTextValue, Mode=OneWay}"
                     WatermarkText="{Loc 'image not selected'}" IsReadOnly="True" />
                <Button Grid.Column="1" Content="{Loc 'Select image...'}" Margin="5,0,0,0" Width="100"
                     Style="{StaticResource Virto_ToolButton_Style}" VerticalAlignment="Center" Command="{Binding AssetPickCommand}" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.Resources>
                    <inf:NullImageConverter x:Key="NullImageConverter" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" BorderThickness="1" Margin="0,7,0,10" BorderBrush="#CDCDCD"
                     HorizontalAlignment="Left">
                    <Image Height="100" Width="100" Source="{Binding InnerItem.Value.LongTextValue, Mode=OneWay, Converter={StaticResource NullImageConverter}}" />
                </Border>
                <Button Grid.Column="1" Content="{Loc ^REMOVE}" Margin="5,0,0,0" Width="66" Command="{Binding AssetRemoveCommand}" />
            </Grid>
        </Grid>
        <core_controls:MultiSelectControl Grid.Row="9" Visibility="{Binding InnerItem.IsMultiValue, Converter={StaticResource booleanToVisibilityConverter}}"
             AvailableTitle="{Loc 'Available values'}" AvailableItems="{Binding InnerItem.Property.PropertyValues}"
             CurrentTitle="{Loc 'Selected values'}" CurrentItems="{Binding InnerItem.Values, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
            <core_controls:MultiSelectControl.ObjectsTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource propertyValueConverter} }" Style="{StaticResource {x:Type TextBlock}}"
                         Margin="1" />
                </DataTemplate>
            </core_controls:MultiSelectControl.ObjectsTemplate>
        </core_controls:MultiSelectControl>
        <ComboBox Grid.Row="10" Visibility="{Binding InnerPropertyIsEnum, Converter={StaticResource booleanToVisibilityConverter}}"
             ItemsSource="{Binding InnerItem.Property.PropertyValues}" SelectedValue="{Binding InnerItem.Value.KeyValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
             SelectedValuePath="PropertyValueId" behaviors:WatermarkComboBoxBehavior.EnableWatermark="True"
             behaviors:WatermarkComboBoxBehavior.Label="Select Value">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource propertyValueConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
    </Grid>
    <!--</ScrollViewer>-->
</base:ViewBase>