<UserControl x:Class="VirtoCommerce.ManagementClient.Catalog.View.ItemView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:Presentation_Core_Infrastructure_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:inf_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns:catalogInfrastructure="clr-namespace:VirtoCommerce.ManagementClient.Catalog.Infrastructure"
     xmlns:securityModule="clr-namespace:VirtoCommerce.Foundation.Security.Model;assembly=VirtoCommerce.Foundation"
     xmlns:localVM="clr-namespace:VirtoCommerce.ManagementClient.Catalog.ViewModel.Catalog.Implementations"
     Style="{DynamicResource Virto_Window_Style}" d:DesignHeight="800" d:DesignWidth="1000"
     d:DataContext="{d:DesignInstance localVM:ItemViewModel}" xmlns:model="clr-namespace:VirtoCommerce.Foundation.Catalogs.Model;assembly=VirtoCommerce.Foundation"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Catalog">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Catalog;component/View/Views/GridView.xaml" />
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DetailViewTheme/VirtoCommerceDetailTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <catalogInfrastructure:ReviewStateConverter x:Key="reviewStateConverter" />
            <catalogInfrastructure:ItemPresentationValueConverter x:Key="itemPresentationValueConverter" />
            <Presentation_Core_Infrastructure_Converters:InvertedBoolConverter x:Key="invertedBoolConverter"
                 FalseValue="True" TrueValue="False" />
            <Style x:Key="AssociationGroup_TabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="Padding" Value="10,0,4,0" />
                <Setter Property="BorderThickness" Value="1,1,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Height="34"
                                 CornerRadius="2">
                                <StackPanel x:Name="Stack" SnapsToDevicePixels="true" Orientation="Horizontal" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                     HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                                    <TextBlock x:Name="Content" Text="{Binding InnerItem.Name}" Foreground="{TemplateBinding Foreground}"
                                         FontWeight="Bold" Margin="0,0,6,0">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" Direction="270" ShadowDepth="1" Opacity="0.75" Color="#FFF" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                    <Button x:Name="DeleteCommand" Command="{Binding DataContext.AssociationGroupDeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabPanel}}}"
                                         CommandParameter="{Binding }" Style="{StaticResource Virto_Button_Transparent_Style}">
                                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/icon_delete.png"
                                             Stretch="None" />
                                    </Button>
                                    <Button x:Name="CollapsedItem" Command="{Binding DataContext.AssociationGroupAddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabPanel}}}"
                                         Foreground="#006987" Style="{StaticResource Virto_Button_Transparent_Style}" FontSize="12"
                                         Visibility="Collapsed" Padding="10,0">
                                        <TextBlock Text="{Loc 'add new'}" Margin="0" VerticalAlignment="Center" TextDecorations="Underline" />
                                    </Button>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Panel.ZIndex" Value="1" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Effect" TargetName="Content" Value="{x:Null}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="TabStripPlacement" Value="Top" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1" />
                                    <Setter Property="Height" TargetName="Bd" Value="35" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="#F4F4F4" />
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFC9C7BA" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding InnerItem, FallbackValue={x:Null}}" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="CollapsedItem" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="Content" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="DeleteCommand" Value="Collapsed" />
                                    <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="VerticalAlignment" TargetName="Stack" Value="Stretch" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <i:Interaction.Triggers>
                                    <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
                                        <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
                                    </prism:InteractionRequestTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Grid.Row="0" Text="{Binding InnerItem.Description}" />
                                <ItemsControl Grid.Row="1" Style="{StaticResource Virto_ToolbarItemsControl_Style}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <core_controls:MetroButton Margin="10,0,20,0" Command="{Binding DataContext.AssociationGroupEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                             CommandParameter="{Binding InnerItem}" Header="{Loc 'MODIFY GROUP'}" ToolTip="{Loc 'Modify Group'}">
                                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                                                 Width="14" />
                                        </core_controls:MetroButton>
                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                            <core_controls:MetroButton Command="{Binding ItemAddCommand}" Header="{Loc ^ADD}"
                                                 ToolTip="{Loc 'Add Association Group'}">
                                                <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                                                     Width="14" />
                                            </core_controls:MetroButton>
                                            <core_controls:MetroButton Command="{Binding ItemEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemsList}"
                                                 Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Association Group'}">
                                                <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                                                     Width="14" />
                                            </core_controls:MetroButton>
                                            <core_controls:MetroButton Command="{Binding ItemRemoveCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemsList}"
                                                 Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove Assiciation Group'}">
                                                <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                                                     Width="14" />
                                            </core_controls:MetroButton>
                                        </StackPanel>
                                    </Grid>
                                </ItemsControl>
                                <DataGrid Grid.Row="2" x:Name="ItemsList" ItemsSource="{Binding InnerItem.Associations}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="{Loc 'Name'}" Width="*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource valueBindingUpdateValueConverter}" ConverterParameter="CatalogItem.Name">
                                                    <Binding />
                                                    <Binding Path="ItemId" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="{Loc 'Type'}" Width="160" Binding="{Binding AssociationType, Converter={x:Static LocalizingConverter.Current}}"
                                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                        <DataGridTextColumn Header="{Loc 'Priority'}" Width="104.6" Binding="{Binding Priority}"
                                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    </DataGrid.Columns>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.ItemEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <ei:CallMethodAction TargetObject="{Binding }" MethodName="RaiseCanExecuteChanged" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </DataGrid>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.InnerItem, FallbackValue={x:Null}, RelativeSource={x:Static RelativeSource.Self}}"
                         Value="{x:Null}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Loc 'You can\'t see this!'}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Presentation_Core_Infrastructure_Converters:CultureConverter x:Key="cultureConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <TabControl x:Name="tabControl" Style="{StaticResource Virto_TabControlHorizontal_Style}"
         SelectedIndex="{Binding SelectedTabIndex}">
        <!--OVERVIEW-->
        <TabItem x:Name="tabItemSummary" Header="{Loc 'Overview'}">
            <FrameworkElement.Resources>
                <catalogInfrastructure:WeightMeasureConverter x:Key="weightMeasureConverter" />
                <catalogInfrastructure:AvailabilityRuleConverter x:Key="availabilityRuleConverter" />
            </FrameworkElement.Resources>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Width="600">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <TextBlock Text="{Loc 'Item id:'}" />
                        <TextBox Margin="10,12,0,8" Text="{Binding InnerItem.ItemId}" Style="{StaticResource Virto_TextBox_ReadOnly_StyleThemed}" />
                    </StackPanel>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Loc '* Item name:'}" />
                            <core_controls:WatermarkedTextBox Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{Loc '* Item code:'}" />
                            <core_controls:WatermarkedTextBox Grid.Row="3" Grid.ColumnSpan="2" Text="{Binding InnerItem.Code, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="{Loc '* Item type:'}" />
                            <ComboBox Grid.Row="5" Grid.ColumnSpan="2" SelectedValue="{Binding InnerItem.PropertySetId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 SelectedItem="{Binding InnerItem.PropertySet}" ItemsSource="{Binding AllAvailableItemTypes}"
                                 DisplayMemberPath="Name" SelectedValuePath="PropertySetId" />
                        </Grid>
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Loc '* Enable date/time:'}" />
                            <DatePicker Grid.Row="1" SelectedDate="{Binding InnerItem.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                            <TextBlock Grid.Row="2" Text="{Loc 'Disable date/time:'}" />
                            <DatePicker Grid.Row="3" SelectedDate="{Binding InnerItem.EndDate, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="2" Margin="0,12,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <CheckBox Grid.Column="0" Content="{Loc 'Can be purchased'}" IsChecked="{Binding InnerItem.IsBuyable, Mode=TwoWay}" />
                        <CheckBox Grid.Column="2" Content="{Loc 'Store visible'}" IsChecked="{Binding InnerItem.IsActive, Mode=TwoWay}" />
                        <Grid Grid.Row="1" Grid.ColumnSpan="3" IsEnabled="{Binding InnerItem.IsBuyable}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Loc 'Min. Quantity:'}" />
                            <extToolkit:IntegerUpDown Grid.Row="1" Grid.Column="0" Value="{Binding InnerItem.MinQuantity}"
                                 Maximum="{Binding InnerItem.MaxQuantity}" />
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Loc 'Max. Quantity:'}" />
                            <extToolkit:IntegerUpDown Grid.Row="1" Grid.Column="2" Value="{Binding InnerItem.MaxQuantity}"
                                 Minimum="{Binding InnerItem.MinQuantity}" />
                        </Grid>
                        <Grid Grid.Row="2" Grid.Column="0" IsEnabled="{Binding InnerItem.IsBuyable}" Visibility="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=TaxCategoryField}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Loc 'Tax Category:'}" />
                            <ComboBox Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding AllAvailableTaxCategories}"
                                 SelectedValue="{Binding InnerItem.TaxCategory}" SelectedValuePath="TaxCategoryId"
                                 DisplayMemberPath="Name" />
                        </Grid>
                        <Grid Grid.Row="2" Grid.Column="2" IsEnabled="{Binding InnerItem.IsBuyable}" Visibility="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=WeightMeasureField}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0">
                                <TextBlock.Text>
                                    <!-- Text={Binding InnerItem.Catalog.WeightMeasure, Converter={StaticResource weightMeasureConverter}, StringFormat='Weight (\{0\}):'} -->
                                    <LocBinding ResourceKey="Weight ({0}):">
                                        <Binding Path="InnerItem.Catalog.WeightMeasure" Converter="{StaticResource weightMeasureConverter}" />
                                    </LocBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <core_controls:WatermarkedTextBox Grid.Row="1" Text="{Binding InnerItem.Weight, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </Grid>
                        <Grid Grid.Row="3" Grid.Column="0" IsEnabled="{Binding InnerItem.IsBuyable}" Visibility="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=PackagingField}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Loc 'Packaging:'}" />
                            <ComboBox Grid.Row="1" ItemsSource="{Binding AvailablePackageTypes}" SelectedValue="{Binding InnerItem.PackageType}"
                                 SelectedValuePath="PackageId">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding Name, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}"
                                             ContentTemplate="{StaticResource Virto_SearchData_ComboBox_DataTemplate}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!--inf_behavior:WatermarkComboBoxBehavior.EnableWatermark="True" inf_behavior:WatermarkComboBoxBehavior.Label="Pick packaging" -->
                        </Grid>
                        <CheckBox Grid.Row="4" Grid.Column="0" Content="{Loc 'Track Inventory'}" IsChecked="{Binding InnerItem.TrackInventory, Mode=TwoWay}"
                             Margin="0,20,0,7" IsEnabled="{Binding InnerItem.IsBuyable}" Visibility="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=TrackInventoryField}" />
                        <Grid Grid.Row="3" Grid.Column="2" IsEnabled="{Binding InnerItem.IsBuyable}" Visibility="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=AvailabilityField}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Loc 'Availability:'}" />
                            <ComboBox Grid.Row="1" SelectedValue="{Binding InnerItem.AvailabilityRule, Converter={StaticResource availabilityRuleConverter}}"
                                 ItemsSource="{Binding AvailableAvailabilityRules}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter ContentTemplate="{StaticResource Virto_SearchConstant_ComboBox_DataTemplate}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </TabItem>
        <!--PROPERTIES-->
        <TabItem x:Name="tabProperties" Header="{Loc 'Properties'}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ItemsControl Grid.Row="0" Style="{StaticResource Virto_ToolbarItemsControl_Style}"
                     HorizontalContentAlignment="Stretch">
                    <core_controls:MetroButton x:Name="filterButton" Header="{Binding FilterLanguage, Converter={StaticResource cultureConverter}}">
                        <core_controls:MetroButton.ContextMenu>
                            <ContextMenu ItemsSource="{Binding InnerItemCatalogLanguages}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="Header" Value="{Binding Converter={StaticResource cultureConverter}}" />
                                        <Setter Property="Command" Value="{Binding PlacementTarget.DataContext.PropertiesLocalesFilterCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                        <Setter Property="CommandParameter" Value="{Binding }" />
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </core_controls:MetroButton.ContextMenu>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=filterButton}"
                                     PropertyName="PlacementTarget" Value="{Binding ElementName=filterButton, Mode=OneWay}" />
                                <ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=filterButton}"
                                     PropertyName="IsOpen" Value="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <core_controls:VectorImage ImageResource="{StaticResource Icon_Button_Filter}" Width="13"
                             Height="12" Margin="1,2,0,0" />
                    </core_controls:MetroButton>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                        <core_controls:MetroButton Command="{Binding PropertyValueEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=PropertiesList}"
                             Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Property Value'}">
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                                 Width="14" />
                        </core_controls:MetroButton>
                        <core_controls:MetroButton Command="{Binding PropertyValueDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=PropertiesList}"
                             Header="{Loc ^Clear}" ToolTip="{Loc 'Clear Property Value'}">
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                                 Width="14" />
                        </core_controls:MetroButton>
                    </StackPanel>
                </ItemsControl>
                <DataGrid Grid.Row="1" x:Name="PropertiesList" ItemsSource="{Binding PropertiesAndValues}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding PropertyName}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Type'}" Binding="{Binding PropertyValueType, Converter={StaticResource propertyValueConverter}, ConverterParameter=PropertyValueType}"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Required'}" Binding="{Binding Property.IsRequired, Converter={StaticResource boolToYesNoConverter}}"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Multi–Language'}" Binding="{Binding Property.IsLocaleDependant, Converter={StaticResource boolToYesNoConverter}}"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Value'}" Width="*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource propertyValueConverter}">
                                    <Binding />
                                    <Binding Path="Value" />
                                    <Binding Path="Values" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.PropertyValueEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsValid}" Value="false">
                                    <Setter Property="BorderBrush" Value="{StaticResource Virto_TextBox_ErrorTemplate_Border_BorderBrush}" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="ToolTip" Value="Value is required" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <ei:CallMethodAction TargetObject="{Binding }" MethodName="RaiseCanExecuteChanged" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </Grid>
        </TabItem>
        <!--PRICING-->
        <TabItem x:Name="tabPricing" Header="{Loc 'Pricing'}" Visibility="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=PricingTab}"
             Tag="{Binding IsInitializingPricing}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <DockPanel LastChildFill="False">
                    <TextBlock Text="{Loc 'Price List:'}" />
                    <ComboBox x:Name="cboPriceLists" ItemsSource="{Binding PriceLists}" SelectedItem="{Binding PriceListSelected}"
                         Margin="10,7,0,0" Width="250">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} ({1})">
                                            <Binding Path="Name" />
                                            <Binding Path="Currency" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DockPanel>
                <ItemsControl Grid.Row="1" Style="{StaticResource Virto_ToolbarItemsControl_Style}"
                     Margin="0,10,0,0">
                    <core_controls:MetroButton Command="{Binding PriceAddCommand}" Header="{Loc ^ADD}"
                         ToolTip="{Loc 'Add Price List'}">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                             Width="14" />
                    </core_controls:MetroButton>
                    <core_controls:MetroButton Command="{Binding PriceEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=PricesList}"
                         Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Price List'}">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                             Width="14" />
                    </core_controls:MetroButton>
                    <core_controls:MetroButton Command="{Binding PriceDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=PricesList}"
                         Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove Price List'}">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                             Width="14" />
                    </core_controls:MetroButton>
                </ItemsControl>
                <DataGrid x:Name="PricesList" ItemsSource="{Binding SelectedItem.Prices, ElementName=cboPriceLists}"
                     Grid.Row="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{Loc 'Id'}" Binding="{Binding PriceId}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding CatalogItem.Name}" Width="4*"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'List'}" Binding="{Binding List}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Sale'}" Binding="{Binding Sale}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Min. Qty.'}" Binding="{Binding MinQuantity, StringFormat={}{0:0.##}}"
                             Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.PriceEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <ei:CallMethodAction TargetObject="{Binding }" MethodName="PriceRaiseCanExecuteChanged" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </Grid>
        </TabItem>
        <!-- SEO tab -->
        <TabItem x:Name="tabSeoData" Header="{Loc 'SEO'}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                 Margin="0,10,0,0">
                <ContentPresenter Content="{Binding SeoStepViewModel}" Margin="0,0,20,0" />
            </ScrollViewer>
        </TabItem>
        <!--RELATIONS-->
        <TabItem x:Name="tabRelations" Header="{Binding InnerItem, Converter={StaticResource itemPresentationValueConverter}, ConverterParameter=RelationsTabHeader, FallbackValue=Relations}"
             Tag="{Binding IsInitializingItemRelations}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="{Loc 'Use this tab to define complex items, for example product with multiple variations by adding variation here or create a user customizable computer using various processors (create &quot;processor&quot; group and add various processors that can be picked).'}"
                     TextWrapping="Wrap" />
                <ItemsControl Grid.Row="1" Style="{StaticResource Virto_ToolbarItemsControl_Style}"
                     Margin="0,10,0,0">
                    <core_controls:MetroButton Command="{Binding ItemRelationAddCommand}" Header="{Loc ^ADD}"
                         ToolTip="{Loc 'Add Item Relation'}">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                             Width="14" />
                    </core_controls:MetroButton>
                    <core_controls:MetroButton Command="{Binding ItemRelationEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemRelationsList}"
                         Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Item Relation'}">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                             Width="14" />
                    </core_controls:MetroButton>
                    <core_controls:MetroButton Command="{Binding ItemRelationDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemRelationsList}"
                         Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove Item Relation'}">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                             Width="14" />
                    </core_controls:MetroButton>
                </ItemsControl>
                <DataGrid x:Name="ItemRelationsList" ItemsSource="{Binding ItemRelations.InnerItems}"
                     Grid.Row="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{Loc 'Id'}" Binding="{Binding ItemRelationId}" Width="1*"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Name'}" Width="4*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource valueBindingUpdateValueConverter}" ConverterParameter="ChildItem.Name">
                                    <Binding />
                                    <Binding Path="ChildItemId" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{Loc 'Group'}" Binding="{Binding GroupName}" Width="1*"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Qty.'}" Binding="{Binding Quantity, StringFormat={}{0:0.##}}"
                             Width="40" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.ItemRelationEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <ei:CallMethodAction TargetObject="{Binding }" MethodName="ItemRelationRaiseCanExecuteChanged" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </Grid>
        </TabItem>
        <!--ASSOCIATIONS-->
        <TabItem x:Name="tabAssociations" Header="{Loc 'Associations'}" inf_behavior:PermissionBehavior.PermissionId="{x:Static securityModule:PredefinedPermissions.PricingPrice_List_AssignmentsManage}"
             inf_behavior:PermissionBehavior.DenyVisibility="Collapsed">
            <DockPanel>
                <TextBlock Margin="0" DockPanel.Dock="Top" Text="{Loc 'Associations are used for merchandising. Typical associations are &quot;Accessories&quot;, &quot;Related Products&quot;. You can define additional associations if needed here by clicking &quot;Add new&quot;.'}"
                     TextWrapping="Wrap" />
                <TabControl ItemsSource="{Binding AssociationGroupViewModels}" SelectedItem="{Binding AssociationGroupViewModelSelected}"
                     Margin="0,10,0,0" Style="{StaticResource Virto_TabControlHorizontal_Style}">
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource AssociationGroup_TabItemStyle}" />
                    </TabControl.ItemContainerStyle>
                </TabControl>
            </DockPanel>
        </TabItem>
        <!--EDITORIAL REVIEWS-->
        <TabItem x:Name="tabEditorialReviews" Header="{Loc 'Editorial Reviews'}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ItemsControl Grid.Row="0" Style="{StaticResource Virto_ToolbarItemsControl_Style}">
                    <core_controls:MetroButton Command="{Binding Path=EditorialReviewAddCommand}" Header="{Loc ^ADD}"
                         ToolTip="{Loc 'Add Review'}" inf_behavior:PermissionBehavior.PermissionId="{x:Static securityModule:PredefinedPermissions.CatalogEditorialReviewsCreateEdit}"
                         inf_behavior:PermissionBehavior.DenyVisibility="Collapsed">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                             Width="14" />
                    </core_controls:MetroButton>
                    <core_controls:MetroButton Command="{Binding Path=EditorialReviewEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=EditorialReviewsList}"
                         Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Review'}" inf_behavior:PermissionBehavior.PermissionId="{x:Static securityModule:PredefinedPermissions.CatalogEditorialReviewsCreateEdit}"
                         inf_behavior:PermissionBehavior.DenyVisibility="Collapsed">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                             Width="14" />
                    </core_controls:MetroButton>
                    <core_controls:MetroButton Command="{Binding EditorialReviewDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=EditorialReviewsList}"
                         Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove Review'}" inf_behavior:PermissionBehavior.PermissionId="{x:Static securityModule:PredefinedPermissions.CatalogEditorialReviewsRemove}"
                         inf_behavior:PermissionBehavior.DenyVisibility="Collapsed">
                        <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                             Width="14" />
                    </core_controls:MetroButton>
                </ItemsControl>
                <DataGrid Grid.Row="1" x:Name="EditorialReviewsList" ItemsSource="{Binding InnerItem.EditorialReviews}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{Loc 'Source'}" Binding="{Binding Source}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'State'}" Binding="{Binding ReviewState, Converter={StaticResource reviewStateConverter}}"
                             LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Priority'}" Binding="{Binding Priority}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Language'}" Binding="{Binding Locale, Converter={StaticResource cultureConverter}}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Last Modified'}" Binding="{Binding LastModified}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                        <DataGridTextColumn Header="{Loc 'Content'}" Binding="{Binding Content}" Width="*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.EditorialReviewEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                            <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <ei:CallMethodAction TargetObject="{Binding }" MethodName="EditorialReviewRaiseCanExecuteChanged" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </Grid>
        </TabItem>
        <!--CATEGORIES-->
        <TabItem x:Name="tabCategories" Header="{Loc 'Categories'}" Tag="{Binding IsInitializingItemCategories}">
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" Text="{Loc 'Item can be associated with single Category and multiple Virtual Categories.'}" />
                <TabControl Margin="0,10,0,0" ItemsSource="{Binding ItemCategoryInfos}" SelectedIndex="{Binding ItemCategoryViewsSelectedIndex}"
                     Style="{StaticResource Virto_TabControlHorizontal_Style}">
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <LocBinding ResourceKey="{}{0} catalog">
                                                    <Binding Path="DataContext.CatalogId" RelativeSource="{RelativeSource AncestorType=TabItem}" />
                                                </LocBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid Margin="0,-2" DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=TabControl}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <ItemsControl Grid.Row="0" Style="{StaticResource Virto_ToolbarItemsControl_Style}"
                                                 Margin="0,10,0,0">
                                                <core_controls:MetroButton Command="{Binding CategoryItemRelationAddCommand}" CommandParameter="{Binding DataContext.CatalogId, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}"
                                                     Header="{Loc ^ADD}" ToolTip="{Loc 'Add Item Relation'}">
                                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                                                         Width="14" />
                                                </core_controls:MetroButton>
                                                <core_controls:MetroButton Command="{Binding CategoryItemRelationEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemCategoriesList}"
                                                     Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Item Relation'}">
                                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                                                         Width="14" />
                                                </core_controls:MetroButton>
                                                <core_controls:MetroButton Command="{Binding CategoryItemRelationDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemCategoriesList}"
                                                     Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove Item Relation'}">
                                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                                                         Width="14" />
                                                </core_controls:MetroButton>
                                            </ItemsControl>
                                            <DataGrid Grid.Row="1" x:Name="ItemCategoriesList" ItemsSource="{Binding DataContext.View, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="{Loc 'ID'}" Binding="{Binding Category.CategoryId}" Width="1*"
                                                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                                    <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding Category.Name}" Width="1.5*"
                                                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                                    <DataGridTextColumn Header="{Loc 'Priority'}" Binding="{Binding Priority}" Width="80"
                                                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                                    <DataGridTextColumn Header="{Loc 'Last Modified'}" Binding="{Binding LastModified}"
                                                         Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                                </DataGrid.Columns>
                                                <DataGrid.RowStyle>
                                                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.CategoryItemRelationEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                                    </Style>
                                                </DataGrid.RowStyle>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <ei:CallMethodAction TargetObject="{Binding CategoryItemRelationEditCommand}" MethodName="RaiseCanExecuteChanged" />
                                                        <ei:CallMethodAction TargetObject="{Binding CategoryItemRelationDeleteCommand}" MethodName="RaiseCanExecuteChanged" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </DataGrid>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.ItemContainerStyle>
                </TabControl>
            </DockPanel>
        </TabItem>
        <!--ASSETS-->
        <TabItem x:Name="tabAssets" Header="{Loc 'Assets'}">
            <DockPanel>
                <TextBlock Margin="0" DockPanel.Dock="Top" Text="{Loc 'Assets are various images, files or digital downloads that can be associated with an item.'}" />
                <TabControl Margin="0,10,0,0" Style="{StaticResource Virto_TabControlHorizontal_Style}">
                    <TabItem Header="{Loc 'Images'}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Margin="0" Text="{Loc 'You can group various assets using group field. For instance &quot;customer&quot; or &quot;primary&quot;.'}" />
                            <ItemsControl Grid.Row="1" Style="{StaticResource Virto_ToolbarItemsControl_Style}"
                                 Margin="0,10,0,0">
                                <core_controls:MetroButton Command="{Binding ItemAssetAddCommand}" CommandParameter="image"
                                     Header="{Loc ^ADD}" ToolTip="{Loc 'Add Image'}">
                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                                         Width="14" />
                                </core_controls:MetroButton>
                                <core_controls:MetroButton Command="{Binding ItemAssetEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemImageList}"
                                     Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Image'}">
                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                                         Width="14" />
                                </core_controls:MetroButton>
                                <core_controls:MetroButton Command="{Binding ItemAssetDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemImageList}"
                                     Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove Image'}">
                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                                         Width="14" />
                                </core_controls:MetroButton>
                            </ItemsControl>
                            <DataGrid Grid.Row="2" x:Name="ItemImageList" ItemsSource="{Binding ItemAssetsImagesView}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding AssetId}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    <DataGridTextColumn Header="{Loc 'Size'}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    <DataGridTextColumn Header="{Loc 'Group'}" Binding="{Binding GroupName}" Width="1*"
                                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    <DataGridTextColumn Header="{Loc 'Last Modified'}" Binding="{Binding LastModified}"
                                         Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.ItemAssetEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                    </Style>
                                </DataGrid.RowStyle>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <ei:CallMethodAction TargetObject="{Binding ItemAssetEditCommand}" MethodName="RaiseCanExecuteChanged" />
                                        <ei:CallMethodAction TargetObject="{Binding ItemAssetDeleteCommand}" MethodName="RaiseCanExecuteChanged" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="{Loc 'Files'}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Margin="0" Text="{Loc 'You can group various assets using group field. For instance &quot;customer&quot; or &quot;primary&quot;.'}" />
                            <ItemsControl Grid.Row="1" Style="{StaticResource Virto_ToolbarItemsControl_Style}"
                                 Margin="0,10,0,0">
                                <core_controls:MetroButton Command="{Binding ItemAssetAddCommand}" CommandParameter="file"
                                     Header="{Loc ^ADD}" ToolTip="{Loc 'Add File'}">
                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                                         Width="14" />
                                </core_controls:MetroButton>
                                <core_controls:MetroButton Command="{Binding ItemAssetEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemFileList}"
                                     Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit File'}">
                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                                         Width="14" />
                                </core_controls:MetroButton>
                                <core_controls:MetroButton Command="{Binding ItemAssetDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemFileList}"
                                     Header="{Loc ^REMOVE}" ToolTip="{Loc 'Remove File'}">
                                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                                         Width="14" />
                                </core_controls:MetroButton>
                            </ItemsControl>
                            <DataGrid Grid.Row="2" x:Name="ItemFileList" ItemsSource="{Binding ItemAssetsFilesView}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding AssetId}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    <DataGridTextColumn Header="{Loc 'Size'}" Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    <DataGridTextColumn Header="{Loc 'Group'}" Binding="{Binding GroupName}" Width="1*"
                                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                    <DataGridTextColumn Header="{Loc 'Last Modified'}" Binding="{Binding LastModified}"
                                         Width="1*" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.ItemAssetEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                    </Style>
                                </DataGrid.RowStyle>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <ei:CallMethodAction TargetObject="{Binding ItemAssetEditCommand}" MethodName="RaiseCanExecuteChanged" />
                                        <ei:CallMethodAction TargetObject="{Binding ItemAssetDeleteCommand}" MethodName="RaiseCanExecuteChanged" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                </TabControl>
            </DockPanel>
        </TabItem>
    </TabControl>
</UserControl>