<UserControl x:Class="VirtoCommerce.ManagementClient.Catalog.View.Wizard.ItemOverviewStepView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:behaviors="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:dialogs="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:localInfrastructure="clr-namespace:VirtoCommerce.ManagementClient.Catalog.Infrastructure"
     mc:Ignorable="d" Width="600" VerticalAlignment="Top" HorizontalAlignment="Left" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Catalog"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/WizardViewTheme/VirtoCommerceWizardTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <localInfrastructure:WeightMeasureConverter x:Key="WeightMeasureConverter" />
            <localInfrastructure:ItemPresentationValueConverter x:Key="ItemPresentationValueConverter" />
            <localInfrastructure:AvailabilityRuleConverter x:Key="AvailabilityRuleConverter" />
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <dialogs:InteractionDialogAction DialogType="{x:Type dialogs:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <!-- Item name -->
            <StackPanel>
                <TextBlock Text="{Loc '* Item Name:'}" />
                <controls:WatermarkedTextBox Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            </StackPanel>
            <!-- Item type -->
            <StackPanel Grid.Row="1">
                <TextBlock Text="{Loc '* Item Type:'}" />
                <ComboBox ItemsSource="{Binding AllAvailableItemTypes}" SelectedValue="{Binding InnerItem.PropertySetId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                     SelectedValuePath="PropertySetId" SelectedItem="{Binding InnerItem.PropertySet, Mode=OneWayToSource}"
                     DisplayMemberPath="Name" behaviors:WatermarkComboBoxBehavior.EnableWatermark="True"
                     behaviors:WatermarkComboBoxBehavior.Label="Select Type">
                </ComboBox>
            </StackPanel>
            <!-- Date/time -->
            <StackPanel Grid.Column="2">
                <TextBlock Text="{Loc '* Enable date/time:'}" />
                <DatePicker SelectedDate="{Binding InnerItem.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     HorizontalAlignment="Left" MinWidth="150" Foreground="#606060" />
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="2">
                <TextBlock Text="{Loc 'Disable date/time:'}" />
                <DatePicker SelectedDate="{Binding InnerItem.EndDate, Mode=TwoWay, ValidatesOnDataErrors=True}"
                     HorizontalAlignment="Left" MinWidth="150" Foreground="#606060" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <CheckBox Content="{Loc 'Can be purchased'}" IsChecked="{Binding InnerItem.IsBuyable, Mode=TwoWay}"
                 Margin="0,12,0,8" />
            <CheckBox Grid.Row="1" Content="{Loc 'Store visible'}" IsChecked="{Binding InnerItem.IsActive, Mode=TwoWay}"
                 Margin="0,12,0,8" />
            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!-- Quantity -->
                <StackPanel Grid.Row="0" Grid.Column="0" IsEnabled="{Binding InnerItem.IsBuyable}">
                    <TextBlock Text="{Loc 'Min. Quantity:'}" />
                    <extToolkit:IntegerUpDown Value="{Binding InnerItem.MinQuantity}" Maximum="{Binding InnerItem.MaxQuantity}" />
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="0" IsEnabled="{Binding InnerItem.IsBuyable}">
                    <TextBlock Text="{Loc 'Max. Quantity:'}" />
                    <extToolkit:IntegerUpDown Value="{Binding InnerItem.MaxQuantity}" Minimum="{Binding InnerItem.MinQuantity}" />
                </StackPanel>
                <!-- Tax category -->
                <StackPanel Grid.Row="0" Grid.Column="1" IsEnabled="{Binding InnerItem.IsBuyable}"
                     Visibility="{Binding InnerItem, Converter={StaticResource ItemPresentationValueConverter}, ConverterParameter=TaxCategoryField}"
                     Margin="10,0">
                    <TextBlock Text="{Loc 'Tax Category:'}" />
                    <ComboBox ItemsSource="{Binding AllAvailableTaxCategories}" SelectedValue="{Binding InnerItem.TaxCategory}"
                         SelectedValuePath="TaxCategoryId" DisplayMemberPath="Name" />
                </StackPanel>
                <!-- Track Invertory -->
                <CheckBox Grid.Row="0" Grid.Column="3" Content="{Loc 'Track Inventory'}" IsChecked="{Binding InnerItem.TrackInventory, Mode=TwoWay}"
                     IsEnabled="{Binding InnerItem.IsBuyable}" Visibility="{Binding InnerItem, Converter={StaticResource ItemPresentationValueConverter}, ConverterParameter=TrackInventoryField}"
                     VerticalAlignment="Bottom" Margin="10,12,10,8" />
                <!-- Packaging -->
                <StackPanel Grid.Row="1" Grid.Column="1" IsEnabled="{Binding InnerItem.IsBuyable}"
                     Visibility="{Binding InnerItem, Converter={StaticResource ItemPresentationValueConverter}, ConverterParameter=PackagingField}"
                     Margin="10,0">
                    <TextBlock Text="{Loc 'Packaging:'}" />
                    <ComboBox SelectedValue="{Binding InnerItem.PackageType}" SelectedValuePath="PackageId"
                         ItemsSource="{Binding AvailablePackageTypes}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<ContentPresenter Content="{Binding Name, Converter={x:Static LocalizingConverter.Current}, ConverterParameter={x:Static res:NavigationNames.ModuleName}}" ContentTemplate="{StaticResource Virto_SearchData_ComboBox_DataTemplate}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
                </StackPanel>
                <!-- Weight measure -->
                <StackPanel Grid.Row="1" Grid.Column="2" IsEnabled="{Binding InnerItem.IsBuyable}"
                     Visibility="{Binding InnerItem, Converter={StaticResource ItemPresentationValueConverter}, ConverterParameter=WeightMeasureField}"
                     Margin="10,0">
                    <TextBlock>
                        <TextBlock.Text>
                            <!-- Text={Binding InnerItem.Catalog.WeightMeasure, Converter={StaticResource WeightMeasureConverter}, StringFormat='Weight (\{0\}):'} -->
                            <LocBinding ResourceKey="Weight ({0}):">
                                <Binding Path="InnerItem.Catalog.WeightMeasure" Converter="{StaticResource WeightMeasureConverter}" />
                            </LocBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <controls:WatermarkedTextBox Text="{Binding InnerItem.Weight, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <!-- Availability -->
                <StackPanel Grid.Row="0" Grid.Column="2" IsEnabled="{Binding InnerItem.IsBuyable}"
                     Visibility="{Binding InnerItem, Converter={StaticResource ItemPresentationValueConverter}, ConverterParameter=AvailabilityField}"
                     Margin="10,0">
                    <TextBlock Text="{Loc 'Availability:'}" />
                    <ComboBox SelectedValue="{Binding InnerItem.AvailabilityRule, Converter={StaticResource AvailabilityRuleConverter}}"
                         ItemsSource="{Binding AvailableAvailabilityRules}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
								<ContentPresenter ContentTemplate="{StaticResource Virto_SearchConstant_ComboBox_DataTemplate}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>