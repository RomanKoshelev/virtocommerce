<inf:ViewBase x:Class="VirtoCommerce.ManagementClient.Marketing.View.Wizard.CatalogPromotionOverviewStepView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib"
     xmlns:inf="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:marketingModel="clr-namespace:VirtoCommerce.Foundation.Marketing.Model;assembly=VirtoCommerce.Foundation"
     xmlns:localInfrastructure="clr-namespace:VirtoCommerce.ManagementClient.Marketing.Infrastructure"
     xmlns:implementations="clr-namespace:VirtoCommerce.ManagementClient.Marketing.ViewModel.Implementations"
     mc:Ignorable="d" Width="600" Height="400" VerticalAlignment="Top" HorizontalAlignment="Left"
     xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Marketing" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/WizardViewTheme/VirtoCommerceWizardTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <localInfrastructure:PromotionStatusConverter x:Key="promotionStatusConverter" />
            <localInfrastructure:ExclusivityTypeConverter x:Key="exclusivityTypeConverter" />
            <ObjectDataProvider x:Key="AvailableExclusivityTypes" ObjectType="{x:Type sys:Enum}"
                 MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:TypeExtension TypeName="marketingModel:ExclusivityType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid d:DataContext="{d:DesignInstance implementations:CatalogPromotionViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- Catalog -->
                <TextBlock Grid.Row="0" Text="{Loc '* Catalog:'}" />
                <ComboBox Grid.Row="1" ItemsSource="{Binding AvailableCatalogs}" SelectedValuePath="CatalogId"
                     SelectedValue="{Binding InnerItem.CatalogId, Mode=TwoWay}" IsEnabled="{Binding IsWizard}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="textBlock" Text="{Binding Name}" />
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedIndex, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                             Value="0" />
                                        <Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                             Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="textBlock" Property="FontStyle" Value="Italic" />
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <ei:ChangePropertyAction TargetObject="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                 PropertyName="InnerCatalog" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <!-- Promotion name -->
                <TextBlock Grid.Row="2" Text="{Loc '* Promotion name:'}" />
                <controls:WatermarkedTextBox Grid.Row="3" Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            </Grid>
            <!-- Description -->
            <DockPanel Grid.Column="2">
                <TextBlock Text="{Loc 'Description:'}" HorizontalAlignment="Stretch" DockPanel.Dock="Top" />
                <controls:WatermarkedTextBox Text="{Binding InnerItem.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     WatermarkText="{Loc 'Enter promotion description here'}" Style="{StaticResource Virto_Multiline_WatermarkedTextBox_Style}"
                     Width="Auto" Height="98" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- Date/time -->
                <TextBlock Grid.Row="0" Text="{Loc '* Enable date/time:'}" />
                <DatePicker Grid.Row="1" SelectedDate="{Binding InnerItem.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <TextBlock Grid.Row="2" Text="{Loc 'Expiration date/time:'}" />
                <DatePicker Grid.Row="3" SelectedDate="{Binding InnerItem.EndDate, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                <CheckBox Content="{Loc 'Is active'}" IsChecked="{Binding InnerItem.Status, Mode=TwoWay, Converter={StaticResource promotionStatusConverter}}"
                     Grid.Row="4" HorizontalAlignment="Left" Margin="0,12,0,8" />
            </Grid>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- Allowed limit -->
                    <TextBlock Grid.Row="0" Text="{Loc 'Allowed limit:'}" />
                    <extToolkit:IntegerUpDown Grid.Row="1" Value="{Binding InnerItem.TotalLimit}" Minimum="0" />
                    <!-- Priority -->
                    <TextBlock Text="{Loc 'Priority:'}" Grid.Row="2" />
                    <extToolkit:IntegerUpDown Grid.Row="3" Value="{Binding InnerItem.Priority}" />
                </Grid>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- Limit per cutomer -->
                    <TextBlock Grid.Row="0" Text="{Loc 'Limit per customer:'}" />
                    <extToolkit:IntegerUpDown Grid.Row="1" Value="{Binding InnerItem.PerCustomerLimit}"
                         Minimum="0" />
                    <!-- Exclusivity -->
                    <TextBlock Grid.Row="2" Text="{Loc 'Exclusivity:'}" />
                    <ComboBox Grid.Row="3" SelectedValue="{Binding InnerItem.ExclusionTypeId, Converter={StaticResource exclusivityTypeConverter}}"
                         ItemsSource="{Binding Source={StaticResource AvailableExclusivityTypes}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding }" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</inf:ViewBase>