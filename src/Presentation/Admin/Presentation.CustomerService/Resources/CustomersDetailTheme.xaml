<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
	xmlns:converters="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Converters">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DetailViewTheme/VirtoCommerceDetailTheme.xaml"/>
	</ResourceDictionary.MergedDictionaries>


	<converters:ThicknessMaxConverter x:Key="ThicknessMaxConverter"/>

	<!--textBlocks-->
	<Style x:Key="Virto_Customers_TextBlock_Title_Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="Foreground" Value="#828282"/>
		<Setter Property="Margin" Value="4,12,4,8"/>
	</Style>
	
	
	<!--Textblocks-->
	<Style TargetType="ComboBoxItem" x:Key="Virto_Base_ComboBoxItem_Style" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
		<Setter Property="FontSize" Value="13"/>
	</Style>
    
    
    
    <!--Buttons-->
    
    <Style TargetType="Button" x:Key="Virto_Customers_ButtonWithTextBlock_Style">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="0" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="Transparent" Padding="5,3">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Buttons-->
	
	
	<!--Dashed Border-->
	<VisualBrush x:Key="Virto_Border_Dashed_VisualBrush">
		<VisualBrush.Visual>
			<Rectangle StrokeDashArray="2.0 2.0" Stroke="Black" StrokeThickness="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=BorderThickness, Converter={StaticResource ThicknessMaxConverter}}"
					   RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=CornerRadius.TopRight}"
					   RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=CornerRadius.BottomLeft}"
					   Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualWidth}"
					   Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight}"
					   />
		</VisualBrush.Visual>
	</VisualBrush>
	<!--Dashed Border-->

	
	<Style x:Key="Virto_Base_TabItem_Style" TargetType="{x:Type TabItem}">
		<Setter Property="Padding" Value="4,6,20,1"/>
		<Setter Property="Margin" Value="2,0,2,0"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Opacity" Value="0.7"/>
		<Setter Property="Cursor" Value="Arrow"/>
		<Setter Property="TextElement.FontSize" Value="14"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid Margin="0,9,0,9">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="auto"/>
						</Grid.RowDefinitions>
						<Border x:Name="brdBody" Grid.Row="0" Background="{TemplateBinding Background}" Margin="3,5,3,0" HorizontalAlignment="Left" VerticalAlignment="Center">
							<ContentPresenter ContentSource="Header" Opacity="{TemplateBinding Opacity}" Cursor="{TemplateBinding Cursor}" 
									  TextElement.FontSize="{TemplateBinding TextElement.FontSize}" x:Name="content"
									  HorizontalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}"
									  Margin="5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
									  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						</Border>
						 <Path Grid.Row="1" HorizontalAlignment="Left" Margin="20,0,0,0" Width="14" Height="10" x:Name="pthArrow" Fill="{TemplateBinding Background}">
							<Path.Data>
								<PathGeometry>
									<PathFigure StartPoint="0,0">
										<LineSegment Point="7,10"/>
										<LineSegment Point="14,0"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
						 </Path>
					   
					</Grid>
				   
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Opacity" TargetName="content" Value="1"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter TargetName="brdBody" Property="Background" Value="Transparent"/>
							<Setter TargetName="pthArrow" Property="Fill" Value="Transparent"/>
							<Setter TargetName="content" Property="TextBlock.Foreground" Value="Black"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Opacity" TargetName="content" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid Margin="0,-2,0,0">
						<ContentPresenter Content="{TemplateBinding Content}" />
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style> 

	

	<Style TargetType="{x:Type HeaderedContentControl}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Margin" Value="0,5" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Virto_HeaderedContentControl_ContentBlock_Border_Brush}"/>
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock FontSize="14" Foreground="{DynamicResource Virto_HeaderedContentControl_Hearer_Foreground_Brush}" HorizontalAlignment="Left" Text="{Binding}" 
							   Margin="1,0,0,1" FontWeight="DemiBold" Style="{DynamicResource {x:Type TextBlock}}"/>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type HeaderedContentControl}">
					<DockPanel>
						<ContentPresenter DockPanel.Dock="Top" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" />
						<Border Padding="5" BorderThickness="{TemplateBinding BorderThickness}" 
								BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
							<ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}"/>
						</Border>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	

	<Style TargetType="TextBlock" BasedOn="{StaticResource Virto_Customers_TextBlock_Title_Style}">
		<Setter Property="Focusable" Value="True"/>
	</Style>
	
	<ControlTemplate x:Key="Virto_Customers_RadioButtonWithoutEllpse_Template"  TargetType="{x:Type RadioButton}">
		<Grid x:Name="root" Background="LightGray" HorizontalAlignment="Stretch" MinWidth="75" MaxWidth="400" VerticalAlignment="Stretch" Margin="1,0,0,0"
              Cursor="Hand">
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							  Margin="0"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="root" Property="Background" Value="White"></Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>