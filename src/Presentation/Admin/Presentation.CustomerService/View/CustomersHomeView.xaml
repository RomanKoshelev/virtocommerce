<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.View.CustomersHomeView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_virtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity"
     xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:Dialogs="clr-namespace:VirtoCommerce.ManagementClient.Customers.Dialogs.View"
     xmlns:Customers_Behaviors="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Behaviors"
     xmlns:behaviors="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:sequrityModel="clr-namespace:VirtoCommerce.Foundation.Security.Model;assembly=VirtoCommerce.Foundation"
     mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="1500" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Customers;component/View/Views/GridView.xaml" />
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/HomeViewTheme/VirtoCommerceHomeTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="CollapsableColumn" TargetType="{x:Type ColumnDefinition}">
                <Setter Property="ColumnDefinition.Width" Value="200" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=expandedTab, Path=IsExpanded}" Value="False">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Name="BeginStoryboard1">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static GridLength.Auto}" />
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="BeginStoryboard1" />
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="200" />
            <ColumnDefinition Width="21" />
            <ColumnDefinition Style="{DynamicResource CollapsableColumn}" MinWidth="22" ElementState.UId="CatalogHomeView_LayoutRoot_Column3"
                 ElementState.Mode="Persist" Width="{PropertyState Default=200}" />
        </Grid.ColumnDefinitions>
        <!--content-->
        <Border x:Name="content" Grid.Column="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--Toolbar-->
                <ItemsControl Style="{StaticResource Virto_ToolbarItemsControl_Style}" HorizontalContentAlignment="Stretch">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                        <i:Interaction.Triggers>
                            <prism:InteractionRequestTrigger SourceObject="{Binding ShowCustomerChoiceDialogRequest, Mode=OneWay}">
                                <interaction_dialog:InteractionDialogAction DialogType="{x:Type Dialogs:CustomerChoiceDialog}" />
                            </prism:InteractionRequestTrigger>
                            <prism:InteractionRequestTrigger SourceObject="{Binding CreateCustomerDialogRequest, Mode=OneWay}">
                                <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:DisableableLocalModalInteractionDialog}" />
                            </prism:InteractionRequestTrigger>
                        </i:Interaction.Triggers>
                        <core_controls:MetroButton x:Name="btnRefresh" Command="{Binding RefreshCommand}"
                             Header="{Loc ^REFRESH}" ToolTip="{Loc '^Refresh items list'}" Margin="3,0,28,0">
                            <core_controls:VectorImage ImageResource="{StaticResource Icon_Button_RefreshList}"
                                 Width="14" Height="14" Margin="1,0,0,0" />
                        </core_controls:MetroButton>
                        <core_controls:MetroButton x:Name="newButton" Header="{Loc 'NEW'}" ToolTip="{Loc 'Create...'}"
                             ContextMenuOpening="DisableRightClickContextMenuOpening">
                            <core_controls:MetroButton.ContextMenu>
                                <ContextMenu Placement="Bottom">
                                    <MenuItem Header="{Loc 'New Case'}" ToolTip="{Loc 'Create new case'}" Command="{Binding Path=ShowCustomerChoiseDialogEmailCaseCommand}"
                                         behaviors:PermissionBehavior.PermissionId="{x:Static sequrityModel:PredefinedPermissions.CustomersCreateNewCase}"
                                         behaviors:PermissionBehavior.DenyVisibility="Collapsed">
                                    </MenuItem>
                                    <MenuItem Header="{Loc 'New Customer'}" ToolTip="{Loc 'Create new customer'}" Command="{Binding Path=CreateCustomerCommand}"
                                         behaviors:PermissionBehavior.PermissionId="{x:Static sequrityModel:PredefinedPermissions.CustomersCreateCustomer}"
                                         behaviors:PermissionBehavior.DenyVisibility="Collapsed">
                                    </MenuItem>
                                </ContextMenu>
                            </core_controls:MetroButton.ContextMenu>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=newButton}"
                                         PropertyName="PlacementTarget" Value="{Binding ElementName=newButton, Mode=OneWay}" />
                                    <ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=newButton}"
                                         PropertyName="IsOpen" Value="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                                 Width="14" />
                        </core_controls:MetroButton>
                        <core_controls:MetroButton x:Name="btnTake" Command="{Binding Path=TakeCasesCommand}"
                             Header="{Loc 'TAKE'}" ToolTip="{Loc 'Take selected cases'}" Margin="28,0,5,0">
                            <Image Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/Images/take_case.png"
                                 Width="14" />
                        </core_controls:MetroButton>
                        <core_controls:MetroButton x:Name="btnResolve" Command="{Binding Path=ResolveCasesCommand}"
                             Header="{Loc 'RESOLVE'}" ToolTip="{Loc 'Resolve selected cases'}">
                            <Image Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/Images/resolve_case.png"
                                 Width="14" />
                        </core_controls:MetroButton>
                    </StackPanel>
                </ItemsControl>
                <!--Toolbar-->
                <!--Items list-->
                <core_controls:VirtualFolderItemList x:Name="CaseItemList" Grid.Row="1" SelectionMode="Extended"
                     IsSynchronizedWithCurrentItem="True" View="{StaticResource gridViewView}" ItemsSource="{Binding ListItemsSource}"
                     Margin="0,4,0,0" core_common:GridViewColumnResize.Enabled="False" Customers_Behaviors:SelectedItemsBehavior.SelectedItemsChangedHandler="{Binding Path=ListViewSelectedItemsChangedCommand}">
                    <core_controls:VirtualFolderItemList.Style>
                        <Style TargetType="{x:Type core_controls:VirtualFolderItemList}" BasedOn="{StaticResource Virto_VirtualFolderItemList_Style}">
                            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu Height="auto" Padding="0">
                                        <MenuItem Header="{Loc 'Resolve'}" Visibility="{Binding Path=PlacementTarget.Tag.DataContext.IsResolveContextVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, UpdateSourceTrigger=PropertyChanged, Converter={x:Static core_converters:ToVisibilityConverter.Current}}"
                                             Command="{Binding Path=PlacementTarget.Tag.DataContext.ResolveCasesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                             Stylus.IsPressAndHoldEnabled="False" />
                                        <MenuItem Header="{Loc 'Take'}" Visibility="{Binding Path=PlacementTarget.Tag.DataContext.IsTakeContextVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, UpdateSourceTrigger=PropertyChanged, Converter={x:Static core_converters:ToVisibilityConverter.Current}}"
                                             Command="{Binding Path=PlacementTarget.Tag.DataContext.TakeCasesCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" />
                                        <MenuItem Header="{Loc 'Reopen'}" Visibility="{Binding Path=PlacementTarget.Tag.DataContext.IsReopenContextVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, UpdateSourceTrigger=PropertyChanged, Converter={x:Static core_converters:ToVisibilityConverter.Current}}"
                                             Command="{Binding Path=PlacementTarget.Tag.DataContext.ContextReopenCasesCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </core_controls:VirtualFolderItemList.Style>
                    <core_controls:VirtualFolderItemList.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource Virto_VirtualListView_Default_ItemContainerStyle}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </core_controls:VirtualFolderItemList.ItemContainerStyle>
                </core_controls:VirtualFolderItemList>
                <!--Items list-->
                <!--ItemsCount-->
                <!--<TextBlock Text="{Binding Path=OverallCount, UpdateSourceTrigger=PropertyChanged, StringFormat='Items: {0}'}" Grid.Row="2" Style="{DynamicResource Virto_DefaultTextStyle}" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Bottom" Padding="0,1,0,0" />-->
                <!--ItemsCount-->
                <core_virtualization:LoadingMetroAnimation d:IsHidden="True" Grid.Row="1" AnimationScale="Large"
                     BackgroundColor="#33111111" Visibility="{Binding ShowLoadingAnimation, Converter={StaticResource booleanToVisibilityConverter}}" />
            </Grid>
        </Border>
        <!--content-->
        <!--right panel-->
        <core_controls:ExpandedTabControl Grid.Column="2" x:Name="expandedTab" Padding="10"
             Focusable="False" VerticalAlignment="Stretch">
            <TabItem>
                <TabItem.Header>
                    <core_controls:VectorImage ImageResource="{StaticResource Icon_Button_Filter}" Height="18"
                         Width="18" />
                </TabItem.Header>
                <DockPanel LastChildFill="False">
                    <TextBlock DockPanel.Dock="Top" Text="{Loc 'CASE FILTERS'}" Margin="0,5" Style="{DynamicResource Virto_TextBlock_TabTitle_Style}" />
                    <ListBox Background="Transparent" ItemsSource="{Binding Path=CaseFilterTypes}" BorderThickness="0"
                         HorizontalContentAlignment="Stretch" DockPanel.Dock="Top">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Background" Value="{StaticResource Virto_ExpanderTabControl_Background_Brush}" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Virto_ExpanderTabControl_Background_Brush}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Virto_ExpanderTabControl_Background_Brush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, UpdateSourceTrigger=PropertyChanged}">
                                    <Grid>
                                        <CheckBox IsChecked="{Binding Path=IsActive}">
                                            <TextBlock Text="{Binding Path=ShortDescription}" Margin="1" />
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.FilterListBoxSelectedItemsChangedCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </CheckBox>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
        </core_controls:ExpandedTabControl>
        <!--right panel-->
        <GridSplitter Grid.Column="1" BorderThickness="1" Width="1" Height="Auto" VerticalAlignment="Stretch"
             HorizontalAlignment="Center" BorderBrush="{StaticResource Virto_Splitter_BorderBrush_Brush}"
             ResizeDirection="Columns" Background="{x:Null}" Visibility="{Binding ElementName=expandedTab, Path=IsExpanded, Converter={x:Static core_converters:ToVisibilityConverter.Current}}" />
    </Grid>
</UserControl>