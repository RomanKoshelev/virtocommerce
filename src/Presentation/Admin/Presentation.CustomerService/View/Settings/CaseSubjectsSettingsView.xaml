<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.View.Settings.CaseSubjectsSettingsView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:inf_behavior="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:Presentation_Core_Infrastructure_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_DataVirtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="http://www.codeplex.com/prism" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/SettingsViewTheme/VirtoCommerceSettingsTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Presentation_Core_Infrastructure_Converters:BoolToStringConverter x:Key="boolToYesNoConverter"
                 FalseValue="No" TrueValue="Yes" />
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonWizardDialogRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:WizardDialog}" />
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
        <i:EventTrigger EventName="Loaded">
            <ei:CallMethodAction TargetObject="{Binding }" MethodName="RaiseCanExecuteChanged" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid x:Name="LayoutRoot">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ItemsControl Style="{StaticResource Virto_ToolbarItemsControl_Style}">
                <core_controls:MetroButton Command="{Binding RefreshItemListCommand}" Header="{Loc ^REFRESH}"
                     ToolTip="{Loc '^Refresh items list'}" Margin="3,0,28,0">
                    <core_controls:VectorImage ImageResource="{StaticResource Icon_Button_RefreshList}"
                         Width="14" Height="14" />
                </core_controls:MetroButton>
                <core_controls:MetroButton Command="{Binding ItemAddCommand}" Header="{Loc ^ADD}"
                     ToolTip="{Loc 'Add item'}">
                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/add.png"
                         Width="14" />
                </core_controls:MetroButton>
                <core_controls:MetroButton Command="{Binding ItemEditCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemsDataGrid}"
                     Header="{Loc ^EDIT}" ToolTip="{Loc 'Edit Item'}">
                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/check.png"
                         Width="14" />
                </core_controls:MetroButton>
                <core_controls:MetroButton Command="{Binding ItemDeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=ItemsDataGrid}"
                     Header="{Loc ^REMOVE}" ToolTip="{Loc 'Delete Item'}">
                    <Image Source="/VirtoCommerce.ManagementClient.Core;component/Themes/images/cancel.png"
                         Width="14" />
                </core_controls:MetroButton>
            </ItemsControl>
            <DataGrid x:Name="ItemsDataGrid" Grid.Row="1" ItemsSource="{Binding Items}" IsSynchronizedWithCurrentItem="True"
                 Margin="0,0,0,4">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{Loc 'Name'}" Binding="{Binding Name}" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                    <DataGridTextColumn Header="{Loc 'Description'}" Binding="{Binding Description}" Width="*"
                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                    <DataGridTextColumn Header="{Loc 'Is Active'}" Binding="{Binding IsActive, Converter={StaticResource boolToYesNoConverter}}"
                         LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}" />
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.DoubleClickCommand" Value="{Binding DataContext.ItemEditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                        <Setter Property="inf_behavior:MouseDoubleClickBehavior.CommandArgument" Value="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                    </Style>
                </DataGrid.RowStyle>
                <i:Interaction.Behaviors>
                    <inf_behavior:DataGridScrollIntoViewBehavior />
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="RaiseCanExecuteChanged" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
        </Grid>
        <core_DataVirtualization:LoadingAnimation Visibility="{Binding ShowLoadingAnimation, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={x:Static Presentation_Core_Infrastructure_Converters:ToVisibilityConverter.Current}}" />
    </Grid>
</UserControl>