<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.View.CustomerView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:System="clr-namespace:System;assembly=mscorlib"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity"
     xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:commercefoundation_models="clr-namespace:VirtoCommerce.Foundation.Customers.Model;assembly=VirtoCommerce.Foundation"
     xmlns:Converters="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Converters"
     xmlns:CustomersDialogsView="clr-namespace:VirtoCommerce.ManagementClient.Customers.Dialogs.View"
     xmlns:CustomersControls="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Controls"
     mc:Ignorable="d" d:DesignHeight="600" Width="600" VerticalAlignment="Top" HorizontalAlignment="Left"
     xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/CustomersResourceDictionary.xaml" />
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DetailViewTheme/VirtoCommerceDetailTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="EmailTypeValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="commercefoundation_models:EmailType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="PhoneNumberValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="commercefoundation_models:PhoneType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style x:Key="ListViewItem_Style" TargetType="ListViewItem">
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="21" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                         Value="True">
                        <Setter Property="IsSelected" Value="True" />
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
         CanContentScroll="False">
        <Grid Margin="0,0,8,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
                    <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
                </prism:InteractionRequestTrigger>
                <prism:InteractionRequestTrigger SourceObject="{Binding DisableableCommandConfirmRequest, Mode=OneWay}">
                    <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:DisableableLocalModalInteractionDialog}" />
                </prism:InteractionRequestTrigger>
            </i:Interaction.Triggers>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Loc 'First Name'}" Margin="2,0,4,2" />
                <core_controls:WatermarkedTextBox Margin="0" Grid.Column="0" Grid.Row="1" Text="{Binding Path=InnerItem.FirstName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=true}"
                     WatermarkText="{Loc 'first name...'}" />
                <TextBlock Grid.Column="0" Grid.Row="2" Text="{Loc 'Last Name'}" />
                <core_controls:WatermarkedTextBox Margin="0" Grid.Column="0" Grid.Row="3" Text="{Binding Path=InnerItem.LastName, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay, ValidatesOnDataErrors=true}"
                     WatermarkText="{Loc 'last name...'}" />
                <TextBlock Grid.Column="0" Grid.Row="4" Text="{Loc 'Birth Date'}" />
                <DatePicker Margin="0" Grid.Column="0" Grid.Row="5" SelectedDate="{Binding Path=InnerItem.BirthDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                <!--место для фотографии-->
                <!--<Image Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Source="{Binding InnerItem.PhotoUrl, UpdateSourceTrigger=PropertyChanged}"/>-->
            </Grid>
            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Virto_Button_Secondary_Style}">
                        <Setter Property="Width" Value="auto" />
                        <Setter Property="Height" Value="25" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="3" />
                    </Style>
                    <Style TargetType="ListView" x:Key="ListViewWithNullItemsSourceStyle">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Background" Value="{x:Null}" />
                        <Setter Property="Margin" Value="0,12,4,0" />
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItem_Style}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}}"
                                 Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <!--email-->
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Loc 'Email'}" VerticalAlignment="Top" />
                        <Grid Grid.Row="0" Grid.Column="2">
                            <ListView x:Name="lstEmails" Margin="0,10,0,0" SelectedItem="{Binding Path=DataContext.SelectedEmail, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                 HorizontalContentAlignment="Stretch" ItemsSource="{Binding Path=DataContext.InnerItem.Emails, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                 Style="{StaticResource ListViewWithNullItemsSourceStyle}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataTemplate.Resources>
                                        <Grid Margin="1" VerticalAlignment="Center" Background="{Binding Path=Background,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Margin="0,0,3,0">
                                                <Run Text="{Binding Path=Type, UpdateSourceTrigger=PropertyChanged}" />
                                            </TextBlock>
                                            <TextBlock Grid.Column="1" Text="{Binding Path=Content, UpdateSourceTrigger=PropertyChanged}"
                                                 FontWeight="Bold" />
                                            <Button Grid.Column="2" Style="{x:Null}" HorizontalAlignment="Left" Margin="4,0,0,0"
                                                 Template="{StaticResource DeleteButtonControlTemplate}" Command="{Binding Path=DataContext.DeleteEmailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                 Visibility="{Binding Path=IsSelected,Converter={x:Static core_Converters:ToVisibilityConverter.Current}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <TextBlock Text="{Loc 'No Items'}" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ItemsSource.Count, ElementName=lstEmails}" Value="0">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="1" DataContext="{Binding Path=NewEmail}" Visibility="{Binding Path=DataContext.IsEmailInEditMode, UpdateSourceTrigger=PropertyChanged, Converter={x:Static core_Converters:ToVisibilityConverter.Current}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="400" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="2" Grid.Row="0" Width="auto" ItemsSource="{Binding Source={StaticResource EmailTypeValues}}"
                             SelectedItem="{Binding Path=DataContext.Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <core_controls:WatermarkedTextBox Grid.Row="0" Grid.Column="0" Text="{Binding Path=DataContext.Content, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid},ValidatesOnDataErrors=True}">
                            <core_controls:WatermarkedTextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.SaveNewEmailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                <KeyBinding Key="Escape" Command="{Binding Path=DataContext.CancelSaveEmailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                            </core_controls:WatermarkedTextBox.InputBindings>
                        </core_controls:WatermarkedTextBox>
                    </Grid>
                    <Button Grid.Row="2" Content="{Loc ^ADD}" HorizontalAlignment="Right" Margin="0,5,5,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ShowAddEmailCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
                <!--email-->
                <!--phone-->
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Loc 'Phone'}" VerticalAlignment="Top" />
                        <Grid Grid.Column="2">
                            <ListView x:Name="lstPhones" Margin="0,10,0,0" SelectedItem="{Binding Path=DataContext.SelectedPhone, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                 HorizontalContentAlignment="Stretch" ItemsSource="{Binding Path=DataContext.InnerItem.Phones, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}"
                                 Style="{StaticResource ListViewWithNullItemsSourceStyle}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataTemplate.Resources>
                                        <Grid Margin="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" FontSize="14" Margin="0,0,3,0">
                                                <Run Text="{Binding Path=Type, UpdateSourceTrigger=PropertyChanged}" />
                                            </TextBlock>
                                            <TextBlock Grid.Column="1" Text="{Binding Path=Number, UpdateSourceTrigger=PropertyChanged}"
                                                 FontSize="14" FontWeight="Bold" />
                                            <Button Grid.Column="2" HorizontalAlignment="Left" Margin="4,0,0,0" Template="{StaticResource DeleteButtonControlTemplate}"
                                                 Command="{Binding Path=DataContext.DeletePhoneCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                 Visibility="{Binding Path=IsSelected,Converter={x:Static core_Converters:ToVisibilityConverter.Current}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <TextBlock Text="{Loc 'No Items'}" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ItemsSource.Count, ElementName=lstPhones}" Value="0">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="1" DataContext="{Binding Path=NewPhone}" Visibility="{Binding Path=DataContext.IsPhoneInEditMode, UpdateSourceTrigger=PropertyChanged, Converter={x:Static core_Converters:ToVisibilityConverter.Current}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="400" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="2" Grid.Row="0" SelectedItem="{Binding Path=DataContext.Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}"
                             ItemsSource="{Binding Source={StaticResource PhoneNumberValues}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <core_controls:WatermarkedTextBox Grid.Row="0" Grid.Column="0" Text="{Binding Path=DataContext.Number, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid},ValidatesOnDataErrors=True}">
                            <core_controls:WatermarkedTextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.SaveNewPhoneCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}" />
                                <KeyBinding Key="Escape" Command="{Binding Path=DataContext.CancelSavePhoneCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                            </core_controls:WatermarkedTextBox.InputBindings>
                        </core_controls:WatermarkedTextBox>
                    </Grid>
                    <Button Grid.Row="2" Content="{Loc ^ADD}" HorizontalAlignment="Right" Margin="0,5,5,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ShowAddPhoneCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
                <!--phone-->
                <!--address-->
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Loc 'Address'}" />
                        <Grid Grid.Column="2">
                            <ListView x:Name="lstAddresses" SelectedItem="{Binding Path=DataContext.SelectedAddress, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                 HorizontalContentAlignment="Stretch" ItemsSource="{Binding Path=DataContext.InnerItem.Addresses, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                 Style="{StaticResource ListViewWithNullItemsSourceStyle}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataTemplate.Resources>
                                        <Grid Margin="1" Background="Transparent">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseDown">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.EditAddressCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                         CommandParameter="{Binding }" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0">
                                                <Run Text="{Binding Path=Type}" />
                                                <Run Text=" " />
                                            </TextBlock>
                                            <TextBlock Grid.Column="1" Text="{Binding City}" FontWeight="Bold" />
                                            <Button Grid.Column="2" Style="{x:Null}" HorizontalAlignment="Left" Margin="4,0,0,0"
                                                 Template="{StaticResource DeleteButtonControlTemplate}" Command="{Binding Path=DataContext.DeleteAddressCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                 Visibility="{Binding Path=IsSelected,Converter={x:Static core_Converters:ToVisibilityConverter.Current}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <TextBlock Text="{Loc 'No Items'}" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ItemsSource.Count, ElementName=lstAddresses}"
                                                 Value="0">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <Button Grid.Row="1" Content="{Loc ^ADD}" HorizontalAlignment="Right" Margin="0,5,5,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding AddAddressCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
                <!--address-->
            </Grid>
        </Grid>
    </ScrollViewer>
</UserControl>