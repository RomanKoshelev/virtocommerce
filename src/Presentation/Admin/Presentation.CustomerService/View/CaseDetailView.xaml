<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.View.CaseDetailView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:System="clr-namespace:System;assembly=mscorlib"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:core_DataVirtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:behaviors="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Behaviors;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:Converters="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Converters"
     xmlns:core_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:commercefoundation_models="clr-namespace:VirtoCommerce.Foundation.Customers.Model;assembly=VirtoCommerce.Foundation"
     xmlns:Communication="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Communications"
     xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity"
     xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:CustomersDialogsView="clr-namespace:VirtoCommerce.ManagementClient.Customers.Dialogs.View"
     xmlns:CustomersDialogsViewModel="clr-namespace:VirtoCommerce.ManagementClient.Customers.Dialogs.ViewModel"
     xmlns:CustomersControls="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Controls"
     xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib" xmlns:CustomersModels="clr-namespace:VirtoCommerce.Foundation.Customers.Model;assembly=VirtoCommerce.Foundation"
     xmlns:sequrityModel="clr-namespace:VirtoCommerce.Foundation.Security.Model;assembly=VirtoCommerce.Foundation"
     xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
     xmlns:common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:implementations="clr-namespace:VirtoCommerce.ManagementClient.Customers.Dialogs.ViewModel.Implementations"
     mc:Ignorable="d" VerticalAlignment="Top" HorizontalAlignment="Left" d:DesignHeight="500"
     Width="auto" HorizontalContentAlignment="Stretch" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/CustomersResourceDictionary.xaml" />
                <ResourceDictionary Source="../Resources/CustomersDetailTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
            <DataTemplate DataType="{x:Type implementations:PropertyValueEditViewModel}">
                <core_controls:CacheContentControl Type="{x:Type CustomersDialogsView:PropertyValueEditView}" />
            </DataTemplate>
            <ObjectDataProvider x:Key="casePriorityEnum" ObjectType="{x:Type System:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:TypeExtension TypeName="commercefoundation_models:CasePriority" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <core_Converters:ToVisibilityConverter x:Key="ToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
            <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Button Grid.Row="0" x:Name="btnCaseOpt" Style="{StaticResource Virto_Customers_ButtonWithTextBlock_Style}"
             Cursor="Hand" ContextMenuOpening="DisableRightClickContextMenuOpening" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl},Mode=FindAncestor}}"
             ToolTip="{Loc 'Show case options'}" Background="Transparent" Margin="6,0,0,0" HorizontalAlignment="Left">
            <DockPanel>
                <core_controls:VectorImage ImageResource="{StaticResource Icon_Button_Submit}" Margin="0,2,5,0"
                     Width="13" Height="13" />
                <TextBlock x:Name="txtContOpt" Text="{Loc 'CASE OPTIONS'}" FontSize="13" VerticalAlignment="Center"
                     FontWeight="DemiBold" Margin="0,0,0,0" Foreground="Black" />
            </DockPanel>
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding PlacementTarget.DataContext.DeleteCaseCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}}"
                         Header="{Loc 'Delete case'}" ToolTip="{Loc 'Delete current case'}" behaviors:PermissionBehavior.PermissionId="{x:Static sequrityModel:PredefinedPermissions.CustomersDeleteExistingCase}"
                         behaviors:PermissionBehavior.DenyVisibility="Collapsed" />
                </ContextMenu>
            </Button.ContextMenu>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <ei:ChangePropertyAction PropertyName="PlacementTarget" TargetObject="{Binding ContextMenu,ElementName=btnCaseOpt}"
                         Value="{Binding ElementName=btnCaseOpt,Mode=OneWay}" />
                    <ei:ChangePropertyAction PropertyName="Placement" TargetObject="{Binding ContextMenu,ElementName=btnCaseOpt}"
                         Value="Bottom" />
                    <ei:ChangePropertyAction PropertyName="IsOpen" TargetObject="{Binding ContextMenu, ElementName=btnCaseOpt}"
                         Value="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
             CanContentScroll="False" Width="318">
            <Grid behaviors:PermissionBehavior.PermissionId="{x:Static sequrityModel:PredefinedPermissions.CustomersEditCaseProperties}"
                 behaviors:PermissionBehavior.DenyVisibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <HeaderedContentControl Grid.Row="0" Background="White" BorderThickness="1" HorizontalAlignment="Left"
                     VerticalContentAlignment="Stretch" Margin="0,4,0,0" Width="300">
                    <Grid Margin="0,0,6,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="1" Visibility="{Binding Path=IsContactNameInEditMode, Converter={StaticResource ToVisibilityConverter}}">
                            <TextBlock Text="{Loc 'Customer'}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                            <!--<core_controls:WatermarkedTextBox BorderBrush="#B0BBBF" Text="{Binding Path=NewContactFullName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}"
														   />-->
                            <CustomersControls:TextBoxWithSearchListControl Text="{Binding Path=NewContactFullName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}"
                                 SearchedItems="{Binding Path=ContactSearchList, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="RefreshSearchItemsEvent">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.RefreshItemsForContactSearchCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CustomersControls:TextBoxWithSearchListControl>
                        </StackPanel>
                        <Grid Grid.Row="2" x:Name="grdResponsible" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Loc 'Responsible'}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                            <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Margin="4,12,4,8">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="VerticalAlignment" Value="Bottom" />
                                        <Setter Property="Visibility" Value="Hidden">
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=grdResponsible, Path=IsMouseOver, UpdateSourceTrigger=PropertyChanged}"
                                                 Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                <Hyperlink Command="{Binding Path=TakeItCommand}">
                                    <TextBlock Text="{Loc 'take it'}" FontSize="13" />
                                </Hyperlink>
                            </TextBlock>
                            <ComboBox Grid.Row="1" Grid.ColumnSpan="2" BorderBrush="#B0BBBF" ItemsSource="{Binding AssignedUserList}"
                                 common:RequiredFieldHelper.IsRequired="True" SelectedItem="{Binding Path=SelectedAssignedUser, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 DisplayMemberPath="UserName" behaviors:WatermarkComboBoxBehavior.EnableWatermark="True"
                                 behaviors:WatermarkComboBoxBehavior.Label="Select user..." />
                        </Grid>
                        <Grid Grid.Row="3" x:Name="grdCCs" Background="Transparent">
                            <Grid.Resources>
                                <DataTemplate x:Key="itemTemplateForItemList">
                                    <Border CornerRadius="0" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Background, UpdateSourceTrigger=PropertyChanged}">
                                        <Grid Height="25" Background="Transparent">
                                            <TextBlock Name="txtRead" Text="{Binding Path=InnerItem.UserName}" Height="25" VerticalAlignment="Center"
                                                 FontSize="14" TextWrapping="Wrap" HorizontalAlignment="Left" Margin="3,3,1,0" />
                                            <TextBox Name="txtEdit" Height="25" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=DataContext}"
                                                 Text="{Binding Path=InputTextForSearch, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type CustomersControls:TagControl}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 MinWidth="20" TextWrapping="Wrap" MaxLines="1" Background="Transparent" FocusVisualStyle="{x:Null}"
                                                 common:FocusHelper.IsFocused="True" BorderThickness="0">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Back" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=BackSpacePressedCommand}"
                                                         CommandParameter="{Binding ElementName=txtEdit, Path=Text}" />
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <i:InvokeCommandAction Command="{Binding Path=TextChangedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type CustomersControls:TagControl}}}"
                                                             CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type CustomersControls:TagControl}}, Path=InputTextForSearch,UpdateSourceTrigger=PropertyChanged}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </Grid>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsEditing}" Value="True">
                                            <Setter TargetName="txtRead" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="txtEdit" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsEditing}" Value="False">
                                            <Setter TargetName="txtRead" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="txtEdit" Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Loc 'CCs'}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                            <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                 Margin="4,12,4,8">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=grdCCs, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                <Hyperlink Command="{Binding Path=CCmeCommand}">
                                    <TextBlock Text="{Loc 'cc me'}" FontSize="13" />
                                </Hyperlink>
                            </TextBlock>
                            <CustomersControls:TagControl Grid.Row="1" Grid.ColumnSpan="2" IsSearchEnabled="True"
                                 TagViewModelCollection="{Binding Path=CollectionFromTagControl, UpdateSourceTrigger=PropertyChanged}"
                                 SearchedItemsCollection="{Binding Path=SearchedItems}" TemplateForItemList="{StaticResource itemTemplateForItemList}">
                                <CustomersControls:TagControl.ItemTemplateForPopup>
                                    <DataTemplate DataType="{x:Type sequrityModel:Account}">
                                        <Border CornerRadius="0" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Background}"
                                             BorderBrush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=BorderBrush}">
                                            <Grid Background="#F1F1F1">
                                                <TextBlock Text="{Binding Path=UserName}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                     Margin="1" />
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </CustomersControls:TagControl.ItemTemplateForPopup>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="RefreshSearchItemsEvent">
                                        <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type CustomersControls:TagControl}}, Path=InputTextForSearch}"
                                             Command="{Binding Path=DataContext.SearchItemsForTagControlCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CustomersControls:TagControl>
                        </Grid>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Grid.Row="1" Background="White" BorderThickness="1" HorizontalAlignment="Left"
                     VerticalContentAlignment="Stretch" Width="300">
                    <Grid Margin="0,0,6,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <TextBlock Text="{Loc 'Type'}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                                <ComboBox ItemsSource="{Binding Path=AllAvailableCaseTemplates}" BorderBrush="#B0BBBF"
                                     common:RequiredFieldHelper.IsRequired="True" Focusable="True" SelectedItem="{Binding SelectedCaseTemplate}"
                                     SelectedValue="{Binding InnerItem.CaseTemplateId, UpdateSourceTrigger=PropertyChanged}"
                                     SelectedValuePath="CaseTemplateId" DisplayMemberPath="Name" />
                            </StackPanel>
                            <StackPanel Grid.Column="2">
                                <TextBlock Text="{Loc 'Priority'}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                                <ComboBox BorderBrush="#B0BBBF" ItemsSource="{Binding Source={StaticResource casePriorityEnum}}"
                                     common:RequiredFieldHelper.IsRequired="True" SelectedItem="{Binding Path=SelectedCasePriority, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </StackPanel>
                        </Grid>
                        <StackPanel Grid.Row="1">
                            <ItemsControl ItemsSource="{Binding CaseTemplateValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <DockPanel LastChildFill="False" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="DockPanel.Dock" Value="Top" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding InnerItem.Name}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                                            <core_controls:WatermarkedTextBox x:Name="ctrlShortText" BorderBrush="#B0BBBF" Text="{Binding Path=InnerItem.ShortTextValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 Visibility="Collapsed" />
                                            <core_controls:WatermarkedTextBox x:Name="ctrlLongText" BorderBrush="#B0BBBF" Style="{StaticResource Virto_Multiline_WatermarkedTextBox_Style}"
                                                 Height="98" Text="{Binding Path=InnerItem.LongTextValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 Visibility="Collapsed" />
                                            <xctk:DecimalUpDown x:Name="ctrlDecimal" BorderBrush="#B0BBBF" Value="{Binding Path=InnerItem.DecimalValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 Visibility="Collapsed" />
                                            <xctk:IntegerUpDown x:Name="ctrlInteger" BorderBrush="#B0BBBF" Value="{Binding Path=InnerItem.IntegerValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 Visibility="Collapsed" />
                                            <CheckBox x:Name="ctrlBoolean" IsChecked="{Binding Path=InnerItem.BooleanValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 Visibility="Collapsed" />
                                            <DatePicker x:Name="ctrlDataTime" SelectedDate="{Binding Path=InnerItem.DateTimeValue, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                 Visibility="Collapsed" />
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=InnerItem.ValueType}" Value="0">
                                                <Setter TargetName="ctrlShortText" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=InnerItem.ValueType}" Value="1">
                                                <Setter TargetName="ctrlLongText" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=InnerItem.ValueType}" Value="2">
                                                <Setter TargetName="ctrlDecimal" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=InnerItem.ValueType}" Value="3">
                                                <Setter TargetName="ctrlInteger" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=InnerItem.ValueType}" Value="4">
                                                <Setter TargetName="ctrlBoolean" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=InnerItem.ValueType}" Value="5">
                                                <Setter TargetName="ctrlDataTime" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <StackPanel Grid.Row="2">
                            <TextBlock Text="{Loc 'Tags'}" Style="{StaticResource Virto_Customers_TextBlock_Title_Style}" />
                            <CustomersControls:TagControl TagViewModelCollection="{Binding CaseLabelListFromTagControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </Grid>
                </HeaderedContentControl>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>