<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.Infrastructure.Communications.CommunicationControlView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:Converters="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Converters"
     xmlns:CustomersDialogsView="clr-namespace:VirtoCommerce.ManagementClient.Customers.Dialogs.View"
     xmlns:CustomersModel="clr-namespace:VirtoCommerce.Foundation.Customers.Model;assembly=VirtoCommerce.Foundation"
     xmlns:Presentation_Infrastructure_Converters="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Converters;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:behaviors="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Behaviors"
     xmlns:core_DataVirtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:interaction_dialog="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:local="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Communications"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:presentation_core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:presentation_core_dialogs="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Dialogs;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity"
     Background="White" d:DesignHeight="500" d:DesignWidth="800" mc:Ignorable="d" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/CustomersResourceDictionary.xaml" />
                <ResourceDictionary Source="../../../Resources/CustomersDetailTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converters:CaseTypeToImageConverter x:Key="CaseTypeToImageConverter" />
            <Converters:ListViewItemIndexCheckConverter x:Key="ListViewItemIndexCheckConverter" />
            <Converters:TextLengthToBooleanConverter x:Key="TextLengthToBooleanConverter" />
            <Style x:Key="WithoutPossibilitySelectionListViewStyle" TargetType="ListView">
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border>
                                            <StackPanel>
                                                <ContentPresenter />
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<DataTemplate x:Key="AttacmentsTemplate">
                <DockPanel>
                    <ItemsControl VerticalAlignment="Center" ItemsSource="{Binding Path=AttacmentsCollection}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Margin="0" Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Grid x:Name="imgGrid">
                                        <Image x:Name="delImg"
                                               Width="20"
                                               Height="20"
                                               Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/images/icon_delete.png"
                                               Stretch="Uniform"
                                               Visibility="Hidden">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding ElementName=RootLayout, Path=DataContext.DelAttachmentCommand}" CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Image>
                                        <Image x:Name="attachImg"
                                               Width="20"
                                               Height="20"
                                               Source="/VirtoCommerce.ManagementClient.Customers;component/Resources/images/attach.png"
                                               Stretch="Uniform" />
                                    </Grid>
                                    <TextBlock Margin="5"
                                               FontStyle="Italic"
                                               Foreground="#3296D4"
                                               Text="{Binding Path=FileUrl}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding ElementName=RootLayout, Path=DataContext.OpenAttachmentCommand}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>
                                </DockPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=imgGrid, Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="delImg" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="attachImg" Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <TextBlock VerticalAlignment="Center" Text="+ attach new file">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding AddAttachmentCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </DockPanel>
            </DataTemplate>-->
            <Style x:Key="CommunicationItemStyle" TargetType="ListViewItem">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="rootBorder" BorderBrush="{StaticResource Virto_Border_Dashed_VisualBrush}"
                                 BorderThickness="0,2,0,0" Padding="7">
                                <Grid x:Name="Detail" Margin="0,0,0,2" Background="{TemplateBinding Background}">
                                    <FrameworkElement.Resources>
                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="2,4,4,2" />
                                        </Style>
                                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,5" />
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Width" Value="Auto" />
                                            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                        </Style>
                                    </FrameworkElement.Resources>
                                    <i:Interaction.Triggers>
                                        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmRequest}">
                                            <presentation_core_dialogs:InteractionDialogAction DialogType="{x:Type presentation_core_dialogs:ConfirmationLocalModalInteractionDialog}" />
                                        </prism:InteractionRequestTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!--  Left Side Icon  -->
                                    <Border Grid.Column="0" Margin="0,5,10,0" VerticalAlignment="Top">
                                        <Grid>
                                            <Image Width="50" Height="50" Margin="5" />
                                        </Grid>
                                    </Border>
                                    <Grid x:Name="grdBody" Grid.Column="1" Grid.ColumnSpan="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Margin="0,15,0,15">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="TitleView" Grid.Column="0" HorizontalAlignment="Left" FontWeight="Bold"
                                                 Text="{Binding AuthorName}" TextWrapping="Wrap" />
                                            <!--  <Image Grid.Column="2" HorizontalAlignment="Right" Height="18" Width="18" Source="{Binding Type, Converter={StaticResource CaseTypeToImageConverter}}" Stretch="Uniform" Margin="20,0,8,0" />  -->
                                            <TextBlock Grid.Column="3" HorizontalAlignment="Right" FontSize="12" TextWrapping="Wrap">
                                                <!--  <Run Text="{Binding Type, Converter={x:Static Converters:EnumToDescriptionConverter.Current}}"/>  -->
                                                <!--<Run x:Name="txtLastModified"
                                                     FontStyle="Italic"
                                                     Text="{Binding LastModified,
                                                                    StringFormat={} ON {0:R}}" />-->
                                                <Run x:Name="txtDateToPastTime" FontStyle="Italic" Foreground="#B4B4B2" Text="{Binding LastModified,&#xD;&#xA;                                                                    StringFormat={}{0}, UpdateSourceTrigger=PropertyChanged,&#xD;&#xA;                                                                    Converter={x:Static Converters:ModifiedDateToPastTimeConverter.Current}}" />
                                            </TextBlock>
                                        </Grid>
                                        <Border x:Name="brdBody" Grid.Row="1">
                                            <Grid>
                                                <TextBlock x:Name="BodyView" VerticalAlignment="Center" Text="{Binding Body}" TextWrapping="Wrap" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="{x:Static CustomersModel:CommunicationItemType.Note}">
                                    <Setter TargetName="brdBody" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="brdBody" Property="Background" Value="{StaticResource Virto_Customers_CommunicationControl_ListViewItem_Note_Background_Normal_Brush}" />
                                    <Setter TargetName="brdBody" Property="BorderBrush" Value="{StaticResource Virto_Customers_CommunicationControl_ListViewItem_Note_BorderBrush_Normal_Brush}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding OpenKnowledgeBaseRequest, Mode=OneWay}">
                    <interaction_dialog:InteractionDialogAction DialogType="{x:Type CustomersDialogsView:KnowledgeBaseDialogView}" />
                </prism:InteractionRequestTrigger>
                <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmRequest}">
                    <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
                </prism:InteractionRequestTrigger>
                <prism:InteractionRequestTrigger SourceObject="{Binding CommonConfirmRequest, Mode=OneWay}">
                    <interaction_dialog:InteractionDialogAction DialogType="{x:Type interaction_dialog:ConfirmationLocalModalInteractionDialog}" />
                </prism:InteractionRequestTrigger>
            </i:Interaction.Triggers>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" Margin="0,0,20,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ItemsControl Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=ToolBarCommmands}"
                             Visibility="{Binding Path=HasAnyToolBarCommands, Converter={x:Static Presentation_Infrastructure_Converters:ToVisibilityConverter.Current}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type local:CommunicationItemComands}">
                                    <RadioButton Content="{Binding Header}" GroupName="{Binding Path=CommandGroupName}"
                                         IsChecked="{Binding Path=IsActive,&#xD;&#xA;                                                                     UpdateSourceTrigger=PropertyChanged,&#xD;&#xA;                                                                     Mode=TwoWay}">
                                        <RadioButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Margin="0,9,0,9">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto" />
                                                        <RowDefinition Height="auto" />
                                                    </Grid.RowDefinitions>
                                                    <Border x:Name="brdBody" Grid.Row="0" MinWidth="100" MinHeight="30" Margin="3,5,3,0"
                                                         HorizontalAlignment="Left" VerticalAlignment="Center" Background="{TemplateBinding Background}">
                                                        <ContentPresenter x:Name="content" Margin="5" HorizontalAlignment="Center" VerticalAlignment="{Binding VerticalContentAlignment,&#xD;&#xA;                                                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                             Cursor="{TemplateBinding Cursor}" Opacity="{TemplateBinding Opacity}" RecognizesAccessKey="True"
                                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontSize="{TemplateBinding TextElement.FontSize}"
                                                             TextElement.Foreground="{TemplateBinding Foreground}" />
                                                    </Border>
                                                    <Path x:Name="pthArrow" Grid.Row="1" Width="14" Height="10" Margin="20,0,0,0" HorizontalAlignment="Left"
                                                         Fill="{TemplateBinding Background}">
                                                        <Path.Data>
                                                            <PathGeometry>
                                                                <PathFigure StartPoint="0,0">
                                                                    <LineSegment Point="7,10" />
                                                                    <LineSegment Point="14,0" />
                                                                </PathFigure>
                                                            </PathGeometry>
                                                        </Path.Data>
                                                    </Path>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=CommandParametr}" Value="{x:Static CustomersModel:CommunicationItemType.Note}">
                                                        <Setter Property="Background" Value="#FFE387" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Header}" Value="Public reply">
                                                        <Setter Property="Background" Value="#555555" />
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Setter TargetName="brdBody" Property="Background" Value="#F0F0F0" />
                                                        <Setter TargetName="pthArrow" Property="Fill" Value="Transparent" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </RadioButton.Template>
                                    </RadioButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <DockPanel HorizontalAlignment="Left" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <core_controls:WatermarkedTextBox Grid.Row="1" Grid.Column="1" Height="98" BorderBrush="#B0BBBF"
                             Margin="0,0,0,20" Style="{DynamicResource Virto_Multiline_WatermarkedTextBox_Style}"
                             Text="{Binding Path=NewBody, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Visibility="{Binding Path=IsReadOnly, Converter={x:Static Presentation_Infrastructure_Converters:ToVisibilityConverter.Current}, ConverterParameter=i}">
                            <!--<presentation_core_controls:WatermarkedTextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.AddItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                            </presentation_core_controls:WatermarkedTextBox.InputBindings>-->
                        </core_controls:WatermarkedTextBox>
                    </Grid>
                </Grid>
            </Border>
            <ListView Grid.Row="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                 Background="Transparent" BorderThickness="0" IsSynchronizedWithCurrentItem="True"
                 ItemContainerStyle="{StaticResource CommunicationItemStyle}" ItemsSource="{Binding ItemsCollection}"
                 ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" SelectedItem="{Binding SelectedCommunicationItem}"
                 Style="{StaticResource WithoutPossibilitySelectionListViewStyle}" VirtualizingPanel.IsVirtualizing="True"
                 VirtualizingPanel.VirtualizationMode="Recycling" d:IsHidden="true">
                <i:Interaction.Behaviors>
                    <behaviors:ScrollIntoViewForListView />
                </i:Interaction.Behaviors>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Loc '^No items found'}"
                 Visibility="{Binding IsShowEmpty,&#xD;&#xA;                                            Converter={x:Static Presentation_Infrastructure_Converters:ToVisibilityConverter.Current},&#xD;&#xA;                                            UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <core_DataVirtualization:LoadingMetroAnimation Grid.Row="0" AnimationColor="LightSkyBlue"
             AnimationScale="Medium" Grid.Column="0" Visibility="{Binding ShowLoadingAnimation,&#xD;&#xA;                                                                       Converter={StaticResource booleanToVisibilityConverter}}"
             d:IsHidden="True" />
    </Grid>
</UserControl>