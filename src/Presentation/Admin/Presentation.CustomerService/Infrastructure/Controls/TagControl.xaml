<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.Infrastructure.Controls.TagControl"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
     xmlns:common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:CustomersControls="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Controls"
     mc:Ignorable="d" MinWidth="150" MinHeight="30" x:Name="root" Background="Transparent"
     d:DesignHeight="300" d:DesignWidth="300" PreviewMouseUp="TagControl_OnPreviewMouseUp"
     xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers" LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <Border BorderThickness="1" BorderBrush="#B0BBBF" Background="Transparent">
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ListBox x:Name="lst" Grid.Row="1" Grid.Column="0" FocusVisualStyle="{x:Null}" Background="Transparent">
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                 Value="False">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=TagViewModelCollection}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl},Path=IsSearchEnabled}"
                                 Value="True">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=TagViewModelCollection}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ActualWidth}" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="rootBorder" CornerRadius="0" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Background, UpdateSourceTrigger=PropertyChanged}"
                             FocusVisualStyle="{x:Null}" BorderThickness="1" BorderBrush="LightGray" Margin="-1">
                            <Grid x:Name="rootGrid" Background="#F1F1F1" FocusVisualStyle="{x:Null}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="3" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentControl Content="{Binding Path=.}" Grid.Column="0" VerticalAlignment="Center"
                                     HorizontalAlignment="Left" Margin="0" FocusVisualStyle="{x:Null}">
                                    <ContentControl.Style>
                                        <Style TargetType="ContentControl">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                                     Value="False">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <Border CornerRadius="0" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Background, UpdateSourceTrigger=PropertyChanged}">
                                                                    <Grid Height="25" DataContext="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}">
                                                                        <TextBlock x:Name="txtReadonly" Text="{Binding Path=InnerItem.Name}" Height="25" VerticalAlignment="Center"
                                                                             FontSize="14" TextWrapping="Wrap" HorizontalAlignment="Left" Margin="3,3,1,0" />
                                                                        <TextBox Height="25" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=DataContext}"
                                                                             x:Name="txtEdit" MinWidth="20" FocusVisualStyle="{x:Null}" Text="{Binding Path=InnerItem.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                             BorderThickness="0" Background="Transparent" TextWrapping="Wrap" MaxLines="1" common:FocusHelper.IsFocused="True">
                                                                            <TextBox.InputBindings>
                                                                                <KeyBinding Key="Space" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=SpacePressedCommand}"
                                                                                     CommandParameter="{Binding ElementName=txtEdit, Path=Text}" />
                                                                                <KeyBinding Key="Back" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=BackSpacePressedCommand}"
                                                                                     CommandParameter="{Binding ElementName=txtEdit, Path=Text}" />
                                                                            </TextBox.InputBindings>
                                                                        </TextBox>
                                                                    </Grid>
                                                                </Border>
                                                                <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsEditing}" Value="True">
                                                                        <Setter TargetName="txtReadonly" Property="Visibility" Value="Collapsed" />
                                                                        <Setter TargetName="txtEdit" Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=IsEditing}" Value="False">
                                                                        <Setter TargetName="txtReadonly" Property="Visibility" Value="Visible" />
                                                                        <Setter TargetName="txtEdit" Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </DataTemplate.Triggers>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                                     Value="True">
                                                    <Setter Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=TemplateForItemList}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                                <Button x:Name="btnDelete" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DeleteItemCommand}"
                                     CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}"
                                     Background="Transparent" Grid.Column="2" ToolTip="{Loc 'Remove item'}" Height="14"
                                     Width="14" VerticalAlignment="Center" HorizontalAlignment="Center" Template="{DynamicResource ButtonDeleteTemplate}">
                                    <Button.Resources>
                                        <ControlTemplate x:Key="ButtonDeleteTemplate" TargetType="{x:Type Button}">
                                            <Grid Background="{TemplateBinding Background}">
                                                <Path x:Name="cross" Width="10" Height="10" Stroke="Gray" StrokeThickness="1" Data="M 1,1 L9,9 M1,9 L9,1" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Button.Resources>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseEnter">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ButtonDeleteMouseEnterCommand}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseLeave">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ButtonDeleteMouseLeaveCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=IsEditing}" Value="True">
                                <Setter TargetName="btnDelete" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="rootGrid" Property="Background" Value="White" />
                                <Setter TargetName="rootBorder" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="rootBorder" Property="BorderThickness" Value="0" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="2,2" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="IsSelected" Value="True" />
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <Popup x:Name="popupSearch" Height="auto" AllowsTransparency="True" Placement="Bottom"
                 PlacementTarget="{Binding ElementName=root, UpdateSourceTrigger=PropertyChanged}"
                 Width="{Binding ElementName=root, Path=ActualWidth}">
                <Border BorderThickness="0" Background="Transparent" Height="auto">
                    <Grid>
                        <ListBox x:Name="lstItems" BorderThickness="0" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=SearchedItemsCollection}"
                             ItemTemplate="{Binding Path=ItemTemplateForPopup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                             SelectedItem="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=SelectedObjectFromPopup, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="LightGray" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding Path=SelectItemFromPopupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                         CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=SelectedObjectFromPopup, UpdateSourceTrigger=PropertyChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                                     Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsTextForSearchEmpty}"
                                                     Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                                     Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsTextForSearchEmpty}"
                                                     Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                        </ListBox>
                        <TextBlock x:Name="txtNoItems" Text="{Loc 'No items found'}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="FontSize" Value="14" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=lstItems,Path=Items.Count}" Value="0" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsControlInitialized}"
                                                     Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsTextForSearchEmpty}"
                                             Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Border>
                <Popup.Style>
                    <Style TargetType="Popup">
                        <Setter Property="StaysOpen" Value="False" />
                        <Setter Property="IsOpen" Value="False" />
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                         Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsTextForSearchEmpty}"
                                         Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="IsOpen" Value="True" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsSearchEnabled}"
                                         Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsTextForSearchEmpty}"
                                         Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="IsOpen" Value="False" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Popup.Style>
            </Popup>
        </Grid>
    </Border>
</UserControl>