<UserControl x:Class="VirtoCommerce.ManagementClient.Customers.Dialogs.View.AddressDialogView"
     xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:base="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:core_controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:modelCountries="clr-namespace:VirtoCommerce.Foundation.Orders.Model.Countries;assembly=VirtoCommerce.Foundation"
     xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:core_DataVirtualization="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.DataVirtualization;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:commercefoundation_models="clr-namespace:VirtoCommerce.Foundation.Customers.Model;assembly=VirtoCommerce.Foundation"
     xmlns:custService_Converters="clr-namespace:VirtoCommerce.ManagementClient.Customers.Infrastructure.Converters"
     mc:Ignorable="d" x:Name="rootElement" SnapsToDevicePixels="True" HorizontalAlignment="Left"
     VerticalAlignment="Top" Width="600" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.Customers"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/DialogViewTheme/VirtoCommerceDialogTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="AddressTypeValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="commercefoundation_models:AddressType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <custService_Converters:AddressTypeToStringConverter x:Key="AddressTypeToStringConverter" />
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF" />
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF" />
            <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000" />
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD" />
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF" />
            <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000" />
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC" />
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070" />
            <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333" />
            <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333" />
            <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center"
                                             Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center"
                                             Width="19" />
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false"
                                             Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" />
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True"
                                         SnapsToDevicePixels="True" VerticalAlignment="Top" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center"
                                             Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center"
                                             Width="19" />
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false"
                                             Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" />
                                    </Grid>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True"
                                         SnapsToDevicePixels="True" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center"
                                             Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center"
                                             Width="19" />
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false"
                                             Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" />
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True"
                                         SnapsToDevicePixels="True" VerticalAlignment="Top" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1"
                                     StrokeDashArray="1 2" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center"
                                         Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center"
                                         Width="19" />
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false"
                                         Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" />
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True"
                                         SnapsToDevicePixels="True" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Virto_Expander_AddressDialogStyle" TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                         ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}"
                                         DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}"
                                         FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}"
                                         FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"
                                         FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="rootBorder" HorizontalAlignment="Stretch" Background="Transparent"
                                                     BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
                                                    <ContentPresenter HorizontalAlignment="Center" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="rootBorder" Property="BorderBrush" Value="{StaticResource Virto_TextBox_BorderMouseOver_Brush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Up">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer Height="550" VerticalScrollBarVisibility="Auto">
        <Grid Margin="0,0,5,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="15" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0">
                <TextBlock Text="{Loc 'First Name'}" />
                <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter first name...'}" Text="{Binding Path=InnerItem.FirstName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="2">
                <TextBlock Text="{Loc 'Last Name'}" />
                <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter last name...'}" Text="{Binding Path=InnerItem.LastName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="0">
                <TextBlock Text="{Loc 'Address Type'}" />
                <ComboBox Margin="0,0,0,0" SelectedItem="{Binding AddressType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource AddressTypeToStringConverter}}"
                     ItemsSource="{Binding Source={StaticResource AddressTypeValues}}" />
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="2">
                <TextBlock Text="{Loc 'Email'}" />
                <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter email...'}" Text="{Binding InnerItem.Email, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel Grid.Row="2" Grid.ColumnSpan="3">
                <TextBlock Text="{Loc '* Address Name'}" />
                <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter name for this address...'}"
                     Text="{Binding InnerItem.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel Grid.Row="3" Grid.ColumnSpan="3">
                <TextBlock Text="{Loc '* Address'}" />
                <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter address line 1...'}"
                     Text="{Binding InnerItem.Line1, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter address line 2...'}"
                     Margin="0,8,0,0" Text="{Binding InnerItem.Line2, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel Grid.Row="4" Grid.ColumnSpan="3">
                <TextBlock Text="{Loc '* Country'}" />
                <core_controls:NullItemSelectorAdapter ItemsSource="{Binding AllCountries}" IsAddingNullItemsFirst="True">
                    <core_controls:NullItemSelectorAdapter.NullItems>
                        <collections:ArrayList>
                            <modelCountries:Country DisplayName="Select country..." />
                        </collections:ArrayList>
                    </core_controls:NullItemSelectorAdapter.NullItems>
                    <ComboBox SelectedValue="{Binding InnerItem.CountryCode, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                         SelectedValuePath="CountryId" x:Name="cboCountries" DisplayMemberPath="DisplayName">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <ei:ChangePropertyAction PropertyName="CountryName" Value="{Binding SelectedItem.DisplayName,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                     TargetObject="{Binding }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </core_controls:NullItemSelectorAdapter>
            </StackPanel>
            <Grid Grid.Row="5" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="2" Grid.Row="0" Text="{Loc '* City'}" />
                <core_controls:WatermarkedTextBox Grid.Row="1" Grid.Column="2" WatermarkText="{Loc 'Enter city...'}"
                     Text="{Binding InnerItem.City, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                <TextBlock Grid.Row="0" Grid.Column="4" Text="{Loc '* Zip code'}" />
                <core_controls:WatermarkedTextBox Grid.Row="1" Grid.Column="4" WatermarkText="{Loc 'Enter zip code...'}"
                     Text="{Binding InnerItem.PostalCode, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Loc 'State, region'}" />
                <core_controls:NullItemSelectorAdapter Grid.Row="1" Grid.Column="0" IsAddingNullItemsFirst="True"
                     ItemsSource="{Binding SelectedItem.Regions, ElementName=cboCountries,UpdateSourceTrigger=PropertyChanged}">
                    <core_controls:NullItemSelectorAdapter.NullItems>
                        <collections:ArrayList>
                            <modelCountries:Region DisplayName="Select state..." />
                        </collections:ArrayList>
                    </core_controls:NullItemSelectorAdapter.NullItems>
                    <ComboBox SelectedValue="{Binding InnerItem.RegionId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         SelectedValuePath="RegionId" x:Name="cboRegion" DisplayMemberPath="DisplayName" />
                </core_controls:NullItemSelectorAdapter>
            </Grid>
            <Expander Grid.Row="6" Grid.ColumnSpan="3" Margin="0,4,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Loc 'Organization'}" Grid.Row="0" Grid.ColumnSpan="5" />
                    <core_controls:WatermarkedTextBox WatermarkText="{Loc 'Enter organization...'}" Grid.Row="1"
                         Grid.ColumnSpan="5" Text="{Binding Path=InnerItem.Organization, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{Loc 'Day phone'}" />
                    <core_controls:WatermarkedTextBox Grid.Row="3" Grid.Column="0" WatermarkText="{Loc 'Enter daytime phone number...'}"
                         Text="{Binding Path=InnerItem.DaytimePhoneNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Loc 'Evening phone'}" />
                    <core_controls:WatermarkedTextBox Grid.Row="3" Grid.Column="2" WatermarkText="{Loc 'Enter evening phone number...'}"
                         Text="{Binding Path=InnerItem.EveningPhoneNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                    <TextBlock Grid.Row="2" Grid.Column="4" Text="{Loc 'Fax'}" />
                    <core_controls:WatermarkedTextBox Grid.Row="3" Grid.Column="4" WatermarkText="{Loc 'Enter fax number...'}"
                         Text="{Binding Path=InnerItem.FaxNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" />
                </Grid>
                <Expander.Style>
                    <Style TargetType="Expander" BasedOn="{StaticResource Virto_Expander_AddressDialogStyle}">
                        <Setter Property="Header" Value=" " />
                        <Style.Triggers>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter Property="Header" Value="Press to show phones and fax details" />
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Header" Value="Press to hide phones and fax details" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
            </Expander>
        </Grid>
    </ScrollViewer>
</UserControl>