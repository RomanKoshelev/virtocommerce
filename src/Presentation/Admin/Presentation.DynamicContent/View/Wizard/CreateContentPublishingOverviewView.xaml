<inf:ViewBase x:Class="VirtoCommerce.ManagementClient.DynamicContent.View.Wizard.CreateContentPublishingOverviewView"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:inf="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:controls="clr-namespace:VirtoCommerce.ManagementClient.Core.Controls;assembly=VirtoCommerce.ManagementClient.Core"
     xmlns:dynamicContentModel="clr-namespace:VirtoCommerce.Foundation.Marketing.Model.DynamicContent;assembly=VirtoCommerce.Foundation"
     xmlns:common="clr-namespace:VirtoCommerce.ManagementClient.Core.Infrastructure.Common;assembly=VirtoCommerce.ManagementClient.Core"
     mc:Ignorable="d" Width="700" d:DesignHeight="400" xmlns:res="clr-namespace:VirtoCommerce.ManagementClient.DynamicContent"
     LocalizationScope.Category="{x:Static res:NavigationNames.ModuleName}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VirtoCommerce.ManagementClient.Core;component/Themes/WizardViewTheme/VirtoCommerceWizardTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="ItemTypes" ObjectType="{x:Type system:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:TypeExtension TypeName="dynamicContentModel:DynamicContentType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!-- Name -->
                <TextBlock Grid.Row="0" Text="{Loc '* Name:'}" />
                <controls:WatermarkedTextBox Grid.Row="1" Text="{Binding InnerItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     common:RequiredFieldHelper.IsRequired="True" />
                <!-- Description -->
                <TextBlock Grid.Row="2" Text="{Loc 'Description:'}" />
                <controls:WatermarkedTextBox Grid.Row="3" Text="{Binding InnerItem.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Style="{StaticResource Virto_Multiline_WatermarkedTextBox_Style}" HorizontalAlignment="Stretch"
                     Height="60" />
                <!-- Priority -->
                <TextBlock Grid.Row="4" Text="{Loc 'Priority:'}" />
                <controls:WatermarkedTextBox Grid.Row="5" Text="{Binding InnerItem.Priority, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Width="Auto" HorizontalAlignment="Stretch" />
                <!-- Is Active -->
                <CheckBox Grid.Row="6" Content="{Loc 'Is Active'}" Margin="4,12,0,8" IsChecked="{Binding InnerItem.IsActive, Mode=TwoWay}" />
            </Grid>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Loc 'Available from (leave blank if always available)'}" />
                <DatePicker Grid.Row="1" SelectedDate="{Binding InnerItem.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <TextBlock Grid.Row="2" Text="{Loc 'Available to (leave blank if always available)'}" />
                <DatePicker Grid.Row="3" SelectedDate="{Binding InnerItem.EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            </Grid>
        </Grid>
    </ScrollViewer>
</inf:ViewBase>