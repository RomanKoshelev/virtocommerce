@using VirtoCommerce.Web.Virto.Helpers.MVC
<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta name="keywords" content="@ViewBag.MetaKeywords" />
    <meta name="description" content="@ViewBag.MetaDescription" />
    <meta name="title" content="@ViewBag.Title" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/themes/default/css")
    @StoreStyle.Render("~/Content/themes/{0}/css")
    <!--[if lt IE 9 ]> <link type="text/css" rel="stylesheet" href="~/Content/themes/default/iefix.css" />   <![endif]-->
    <link type="text/css" rel="stylesheet" href="//fonts.googleapis.com/css?family=Open+Sans:300,400,700&subset=latin,cyrillic-ext,cyrillic" />
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/responsive")
    <base href="~/" />

</head>
<body>
    <!--Disable ajax cache-->
    <script>$(function () { $.ajaxSetup({ cache: false }); });</script>
    <div id="layout">
        <div class="demo-notice">
            <p>@("This is a demo store. Any orders placed through this store will not be honored or fulfilled.".Localize())</p>
        </div>
        <div class="header-wrap">
            <div class="head-top">
                <div class="rubber clearfix">
                    <div @*class="grid_4"*@>
                        <div class="head-switch">
                            <span>
                                @("Store".Localize()):
                                <span class="current">
                                    @{
                                        Html.RenderPartial("StoreParams");
                                    }
                                </span>
                            </span>
                            <ul>
                                @{Html.RenderPartial("Languages");}
                                @{Html.RenderAction("StorePicker", "Store", true);}
                                @{Html.RenderAction("Currencies", "Store", true);}
                            </ul>
                        </div>
                    </div>
                    <div @*class="grid_8"*@>
                        <ul class="head-links"></ul>
                        @* @{Html.RenderAction("QuickAccess", "Store", true);}*@
                    </div>
                </div>
            </div>
            <header role="banner" class="header">
                <div class="rubber clearfix">
                    <div class="grid_12">
                        <p class="">
                            <a href="@Url.RouteUrl("Store")"></a>
                        </p>
                        @RenderSection("Navigation", false)
                        @RenderSection("MiniActions", false)
                    </div>
                </div>
            </header>
        </div>
        @RenderSection("Slider", false)
        <div class="article-wrap">
            <article role="main" class="article clearfix">
                @{
                    var breadcrumb = Html.MvcSiteMap().SiteMapPath(null, new { name = "BreadCrumb" });
                    var showPageNav = !string.IsNullOrEmpty(breadcrumb.ToString().Trim()) || !string.IsNullOrEmpty(ViewBag.PageTitle as string) || IsSectionDefined("PageTitle");
                }
                @if (showPageNav)
                {
                    <div class="page-nav">
                        <div class="rubber">
                            @breadcrumb
                            @if (!string.IsNullOrEmpty(ViewBag.PageTitle as string) || IsSectionDefined("PageTitle"))
                            {
                                <div class="title clearfix">
                                    <p>@ViewBag.PageTitle</p>
                                    @RenderSection("PageTitle", false)
                                </div>
                            }
                        </div>
                    </div>
                }
                <div class="rubber">
                    @{
                        var messages = Html.SharedViewBag().Messages as MessagesModel;
                    }
                    <ul id="messages" class="messages" style="@(messages != null && messages.Any() ? "" : "display:none;")">
                        @{
                            if (messages != null && messages.Any())
                            {

                                foreach (var messageGrp in messages.GroupBy(m => m.Type))
                                {
                                    <li class="@messageGrp.Key.ToString().ToLower()">
                                        <ul>
                                            @foreach (var message in messageGrp)
                                            {
                                                <li><span>@message.Text</span></li>
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                        }
                    </ul>
                    @RenderBody()
                </div>
                @RenderSection("Bottom", false)
            </article>
        </div>
        @{
            Html.RenderAction("Footer", "Store", true);
        }
    </div>


    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymisc")
    @RenderSection("scripts", required: false)


    <!-- Facebook -->
    <div id="fb-root"></div>
    <script type="text/javascript">
        (function (d, s, id)
        {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en-US/all.js#xfbml=1&appId=593495770737439";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>

    <!-- Process sliders -->
    <script type="text/javascript">
        $(function ()
        {
            VirtoCommerce.renderDynamicContent();
            VirtoCommerce.updateQuickLinks();
            VirtoCart.updateCartOptions();
            VirtoCommerce.initSliders();
            $('.slider-products').virtoSlider();

            //Demo notice
            if (VirtoCommerce.getCookie("vcf.hideDemoNotice") != "true")
            {
                $('.demo-notice').show();
            }
            $('.demo-notice').on('click', function ()
            {
                $(this).fadeOut();
                VirtoCommerce.setCookie("vcf.hideDemoNotice", true, 7);
            });
            $(document).ajaxError(
                function myErrorHandler(event, xhr, ajaxOptions, thrownError)
                {

                    if (ajaxOptions.suppressErrors)
                    {
                        return;
                    }
                    if (xhr.status != 0)
                    {
                        $.showPopupMessage("There was an error: <br/><span style='color:red;'>" + xhr.status + " " + xhr.statusText + "!</span>");
                    }
                });
        });
    </script>
    @* No need to render follow services here, but following template can be used as an example:
        @if (SettingsHelper.GetSettings("FollowServices").Any())
        {
            <!-- AddThis Smart Layers BEGIN -->
            <!-- Go to http://www.addthis.com/get/smart-layers to customize -->
            <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-51ec4b273d0b77ad"></script>
            <script type="text/javascript">

                // this will be called once all Smart Layers have been rendered
                var callback = function (smartlayer)
                {
                    // remove all layers currently on the page
                    smartlayer.destroy();

                    var layers = {
                        'theme': 'transparent',
                        'follow': {
                            'services': [],
                            //'title': 'Follow',
                            'postFollowTitle': '@("Thanks for following!".LocalizeHtml())',
                            'postFollowRecommendedMsg': '@("Recommended for you".LocalizeHtml())',
                            'mobile': true,
                            'theme': 'transparent'
                        }
                    };

                    @foreach (var follow in SettingsHelper.GetSettings("FollowServices"))
                        {
                            var followStrSplit = follow.ToString().Split(new[] { ":" }, StringSplitOptions.RemoveEmptyEntries);

                            <text>
                    layers.follow.services.push({
                            @if (followStrSplit.Length > 0)
          {
                                @:'service': '@followStrSplit[0]'
                                                                                                                                                                                                }
                            @if (followStrSplit.Length > 1)
          {
                                @:, 'id': '@followStrSplit[1]'
                                                                                                                                                                                                }
                            @if (followStrSplit.Length > 2)
          {
                                @:, 'usertype': '@followStrSplit[2]'
                                                                                                                                                                                                }
                    });
                    </text>
                        }

                    // now render Recommended and What's Next Layers
                    window.addthis.layers(layers);
                };

                addthis.layers({
                    'theme': 'transparent',
                    'share': {}
                }, callback);

            </script>
            <!-- AddThis Smart Layers END -->
        }
    *@

    @{
        var firstOrDefault = StoreHelper.GetSettings("AnalyticsField").FirstOrDefault() ??
                             (object)SettingsHelper.GetSettings("AnalyticsField").FirstOrDefault();
        if (firstOrDefault != null)
        {
            @Html.Raw(firstOrDefault.ToString())
        }
    }
</body>
</html>
