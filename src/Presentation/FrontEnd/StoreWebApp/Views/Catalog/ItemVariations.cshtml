@using VirtoCommerce.Client
@model VariationsModel

@if (Model.Variations.Any())
{
    <script type="text/javascript">
        $(document).ready(function ()
        {
            $("div.variation select").change(function (source)
            {
                loadVariations("@Model.ParentItemId", null, source.target);
            });

            var form = $("div.variation").closest("form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
            @if (Model.CatalogItem == null)
            {
                @:$("span.in-stock").hide();
                        }
        });
    </script>
    
    @Html.HiddenFor(m => m.SelectedVariationId)
            foreach (var variation in Model.Variations)
            {
    <div class="variation">
        <p>@variation.Name.Localize()</p>

        <select name="@variation.Name" id="@variation.Name" data-val-required="The field is required." data-val="true">
            @foreach (var item in variation.Items)
            {
                var isSelected = item.Selected ? "selected=selected" : "";

                <option value="@item.Value" @isSelected>@item.Text</option>
            }
        </select>
        <span data-valmsg-replace="true" data-valmsg-for="@variation.Name" class="field-validation-valid"></span>
        
        @*Show color pallete*@
        @if (variation.Name.Equals("Color", StringComparison.OrdinalIgnoreCase))
        {
            <ul class="color-pallete">
                 @foreach (var item in variation.Items)
                 {
                     if (!string.IsNullOrEmpty(item.Value))
                     {
                         var namecode = item.Value.Split('|');
                         
                         <li style="background-color: @(namecode.Length > 1 ? namecode[1] : item.Value);" class="color-box" onclick="$('select#@variation.Name').val('@item.Value').change();"></li>
                     }
                 }
                <li class="clearfix"></li>
            </ul>
        }
    </div>
            }
    
    <div class="variation-item">
        @if (Model.CatalogItem != null)
        {
            Html.RenderPartial("Variation", Model.CatalogItem);
        }
    </div>

}
