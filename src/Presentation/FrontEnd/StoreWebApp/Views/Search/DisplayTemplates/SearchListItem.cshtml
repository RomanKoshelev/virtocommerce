@using System.Globalization
@using VirtoCommerce.Web.Virto.Helpers
@model CatalogItemWithPriceModel

@{
    var itemClass = "item";
    if (Model.IsNew)
    {
        itemClass = string.Concat(@itemClass, " ", "new");
    }
    if (Model.IsSale)
    {
        itemClass = string.Concat(@itemClass, " ", "sale");
    }
}

@*<script>
    $(function() {
        $("li[id='@Model.CatalogItem.ItemId #rateit']").rateit({ resetable: false, readonly: true, value: "@Model.ItemReviewTotals.AverageRating.ToString(CultureInfo.InvariantCulture)", starwidth: 11, starheight: 11 });
    });
</script>*@

<li class="@itemClass" data-class="@itemClass" id="@Model.CatalogItem.ItemId">
    <div class="inner">
        <a href="@Url.ItemUrl(Model.CatalogItem.Item, Model.CatalogItem.ParentItemId)" title="@Model.DisplayName" class="product-image">
            <figure>
                <img src="@Url.Image(Model.CatalogItem.Item, "primaryimage")" alt="@Model.DisplayName" onerror="this.onerror=null;this.src='@Href("~/Content/themes/default/images/blank.png")';" />
            </figure>
        </a>
        <div class="product-info">
            <a class="product-name" href="@Url.ItemUrl(Model.CatalogItem.Item, Model.CatalogItem.ParentItemId)">@Model.DisplayName</a>
            <div class="price-container">
                @if (ViewData.ContainsKey("hidePrices"))
                {
                    <div class="price">
                    </div>
                }
                else if (Model.Price != null)
                {
                    @Html.DisplayFor(model => model.Price)
                }
                <div class="ratings">
                    <div id="rateit"></div>
                </div>
                <div class="ratings-links">
                    <ul>
                        <li><a href="@Url.ItemUrl(Model.CatalogItem.Item, Model.CatalogItem.ParentItemId)#product_tabs_reviews">
                            <span id="totalreviews">@Model.ItemReviewTotals.TotalReviews</span>&nbsp;@("Review(s)".Localize())
                        </a>
                        </li>
                        <li><a href="@Url.Action("AddReview", "Catalog", new { id = Model.CatalogItem.ItemId })" rel="popup">@("Add Your Review".Localize())</a></li>
                    </ul>
                </div>
            </div>
            <div class="description">
                @if (Model.CatalogItem.EditorialReviews != null && Model.CatalogItem.EditorialReviews.Length > 0)
                {
                    foreach (var review in Model.CatalogItem.EditorialReviews)
                    {
                        if (review.Source == "QuickReview")
                        {
                    @Html.Raw(review.Content)
                        }
                    }
                }
            </div>
            <div class="button-container">
                <ul>
                    <li class="cart">
                        @{Html.RenderPartial("AddToCart", Model, new ViewDataDictionary { { "View", "ListLink" } });}
                    </li>
                    @{Html.RenderPartial("AddToLinks", Model);}
                </ul>
            </div>
        </div>
    </div>
</li>
