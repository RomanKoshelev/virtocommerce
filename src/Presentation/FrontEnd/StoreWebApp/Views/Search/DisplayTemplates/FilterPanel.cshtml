@using VirtoCommerce.Foundation.AppConfig.Model
@using VirtoCommerce.Web.Client.Extensions.Routing
@model CatalogItemSearchModel
    
@{
    var tempValues = new RouteValueDictionary();
    foreach (var key in Request.QueryString.Keys.Cast<string>().Where(key => !tempValues.ContainsKey(key)))
    {
        tempValues.Add(key, Request.QueryString[key]);
    }
}

<aside class="block">
    <span class="title">@("Shop By".Localize())</span>
    <dl>
        @foreach (var group in Model.FilterGroups)
        {
            <dt>@group.Name.Localize()</dt>
            <dd>
                @if (group.Name.Equals("Color", StringComparison.InvariantCultureIgnoreCase))
                {
                    <ol>
                        @foreach (var facet in group.Facets)
                        {
                            <li class="color">
                                <label class="@facet.Name" for="@facet.Key">
                                    <input type="checkbox" @String.Format("{0}", Model.SelectedFilters.Any(x => x.Facet.Key == facet.Key) ? "checked" : "") onchange="this.checked ? $.open('@Url.SetFacet(group.Key, facet.Key)') : $.open('@Url.RemoveFacet(group.Key, facet.Key)')" name="@facet.Key" id="@facet.Key">
                                    <span style="background: @facet.Name;" title="@facet.Name (@facet.Count)"></span>
                                </label>
                            </li>
                        }

                    </ol>
                }
                else if (group.Name.Equals("Subcategory", StringComparison.InvariantCultureIgnoreCase))
                {
                    <ol>
                        @foreach (var facet in group.Facets)
                        {
                            tempValues[Constants.Category] = facet.Key;
                            <li>
                                <a href="@Url.RouteUrl("Category", tempValues)">@facet.Name</a>
                                <span>(@facet.Count)</span>
                            </li>
                        }
                    </ol>
                }                
                else
                {
                    <ol>
                        @foreach (var facet in group.Facets)
                        {
                            <li class="checkbox">
                                <label for="@facet.Key">
                                    
                                    <input type="checkbox" @String.Format("{0}", Model.SelectedFilters.Any(x=>x.Facet.Key == facet.Key) ? "checked" : "") onchange="this.checked ? $.open('@Url.SetFacet(group.Key, facet.Key)') : $.open('@Url.RemoveFacet(group.Key, facet.Key)')" name="@facet.Key" id="@facet.Key">
                                    <span class="switch"></span>
                                    <span class="name">@facet.Name</span>
                                    <span class="count">(@facet.Count)</span>
                                </label>
                            </li>
                        }
                    </ol>
                }
            </dd>
        }
    </dl>
</aside>
