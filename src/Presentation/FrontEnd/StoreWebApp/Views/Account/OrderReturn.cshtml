@model OrderReturns
@{
    ViewBag.Title = Html.Title("Return Order".Localize());
    ViewBag.PageTitle = "Return Order".Localize();
}

@Html.ValidationSummary(true)
@if (Model.OrderReturnItems.Count == 0)
{
    Html.SharedViewBag().Messages = new MessagesModel { new MessageModel("There are no items to return".Localize(), MessageType.Notice) };
    <div class="buttons clearfix">
        <a class="back" href="@Url.Action("Orders", "Account")">« @("Back".Localize())</a>
    </div>
}
else
{
    using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.OrderId)
    <div class="clearfix">
        <div class="col">
            <div class="control-group">
                @Html.LabelForEx(m => m.ReturnFromAddressId)
                @Html.DropDownListFor(m => m.ReturnFromAddressId, Model.Addresses)
            </div>
            <div class="control-group">
                @Html.ActionLink("Create new address".Localize(), "AddressEdit", "Account", null, new { rel = "popup" })
            </div>
            <div class="control-group">
                @Html.LabelForEx(m => m.Comment)
                @Html.TextAreaFor(m => m.Comment, 10, 30, null)
            </div>
        </div>
        <div class="col">
            <ul class="item-list">
                @for (var index = 0; index < Model.OrderReturnItems.Count; index++)
                {
                    <li>
                        @Html.EditorFor(m => m.OrderReturnItems[index])
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="buttons clearfix">
        <p class="required">* @("Required Fields".Localize())</p>
        <button name="send" title="@("Submit".Localize())" type="submit">
            <span>@("Submit".Localize())</span>
        </button>
        <a class="back" href="@Url.Action("Orders", "Account")">« @("Back".Localize())</a>
    </div>
    }
}