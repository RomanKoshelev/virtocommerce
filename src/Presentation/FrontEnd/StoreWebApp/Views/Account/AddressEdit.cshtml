@using System.Globalization
@using VirtoCommerce.Web.Virto.Helpers
@model AddressEditModel
@{
    ViewBag.Title = ViewBag.PageTitle = "Edit Address".Localize();
}
<script src="//maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>
@Scripts.Render("~/bundles/geo")
<script type="text/javascript" language="javascript">

    $(document).ready(function () {
        var id = '@ViewData.TemplateInfo.GetFullHtmlFieldId(String.Empty)';
        var c = new VirtoAddress(id);

        var option = $('#Address_StateProvinceId option[value="@Model.Address.StateProvince"]');
        if (option.length > 0) {
            option.attr("selected", "selected");
            $('#Address_StateProvinceId').trigger('change');
        }

    });
    var v_regions = @Html.JsonSerialize(Model.ScriptCountryRegions);
    var v_codes = {};

    @{
        foreach (var x in from ri in
            from ci in CultureInfo.GetCultures(CultureTypes.SpecificCultures)
            select new RegionInfo(ci.LCID)
            group ri by ri.TwoLetterISORegionName into g
            select new
            {
                Two = g.Key,
                Three = g.First().ThreeLetterISORegionName
            })
       {
            @:v_codes['@x.Two'] ='@x.Three';
       }
    }
</script>

@using (Html.BeginForm("AddressEdit", "Account", FormMethod.Post))
{
    @Html.HiddenFor(m => m.Address.AddressId)
    @Html.HiddenFor(m => m.Address.Name)
    @Html.HiddenFor(m => m.OrganizationId, new { @value = @Request["OrganizationId"] })
    <fieldset>
        <div class="block">
            <div class="title">
                <span>@("Account Information".Localize())</span>
            </div>
            <div class="info clearfix">
                <div class="col">
                    <div class="control-group">
                        @Html.LabelForEx(m => m.Address.FirstName)
                        @Html.TextBoxFor(m => m.Address.FirstName)
                        @Html.ValidationMessageFor(m => m.Address.FirstName)
                    </div>
                    <div class="control-group">
                        @Html.LabelForEx(m => m.Address.LastName)
                        @Html.TextBoxFor(m => m.Address.LastName)
                        @Html.ValidationMessageFor(m => m.Address.LastName)
                    </div>
                </div>
                <div class="col">
                    <div class="control-group">
                        @Html.LabelForEx(m => m.Address.Email)
                        @Html.TextBoxFor(m => m.Address.Email)
                        @Html.ValidationMessageFor(m => m.Address.Email)
                    </div>
                    <div class="control-group">
                        @Html.LabelForEx(m => m.Address.DaytimePhoneNumber)
                        @Html.TextBoxFor(m => m.Address.DaytimePhoneNumber)
                        @Html.ValidationMessageFor(m => m.Address.DaytimePhoneNumber)
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset>
        <div class="block">
            <div class="title">
                <span>@("Address Information".Localize())</span>
            </div>
            <div class="info" id="geo-details-@ViewData.TemplateInfo.GetFullHtmlFieldId(String.Empty)">
                <div class="control-group">
                    <input type="text" id="geocomplete-@ViewData.TemplateInfo.GetFullHtmlFieldId(String.Empty)">
                    <img src="//maps.gstatic.com/mapfiles/api-3/images/powered-by-google-on-white2.png">
                </div>
                @Html.HiddenFor(m => m.Address.CountryName, new { data_geo = "country" })
                <div class="control-group">
                    @Html.LabelForEx(m => m.Address.Line1)
                    @Html.TextBoxFor(m => m.Address.Line1, new { data_geo = "route" })
                    @Html.ValidationMessageFor(m => m.Address.Line1)
                    <div class="control-group">
                        @Html.TextBoxFor(m => m.Address.Line2)
                        @Html.ValidationMessageFor(m => m.Address.Line2)
                    </div>
                    <div class="control-group">
                        @Html.LabelForEx(m => m.Address.CountryCode)
                        @Html.DropDownListFor(m => m.Address.CountryCode, new SelectList(Model.Countries, "CountryId", "DisplayName"))
                        @Html.ValidationMessageFor(m => m.Address.CountryCode)
                    </div>
                    <div class="control-group">
                        <div class="col">
                            @Html.LabelForEx(m => m.Address.City)
                            @Html.TextBoxFor(m => m.Address.City, new { data_geo = "locality" })
                            @Html.ValidationMessageFor(m => m.Address.City)
                        </div>
                    </div>
                    <div class="control-group">
                        <div class="col">
                            @Html.LabelForEx(m => m.Address.PostalCode)
                            @Html.TextBoxFor(m => m.Address.PostalCode, new { data_geo = "postal_code" })
                            @Html.ValidationMessageFor(m => m.Address.PostalCode)
                        </div>
                        <div class="col">
                            @Html.LabelForEx(m => m.Address.StateProvince)
                            @Html.DropDownList("Address_StateProvinceId", new SelectList(new[] { "select state/province" }))
                            @Html.TextBoxFor(m => m.Address.StateProvince, new { style = "display:none", data_geo = "administrative_area_level_1_short" })<br />
                            @Html.ValidationMessageFor(m => m.Address.StateProvince)
                        </div>
                    </div>
                    <div class="control-group">
                        <div class="col">
                            @Html.LabelForEx(m => m.Address.Organization)
                            @Html.TextBoxFor(m => m.Address.Organization)
                            @Html.ValidationMessageFor(m => m.Address.Organization)
                        </div>
                        <div class="col">
                            @Html.LabelForEx(m => m.Address.FaxNumber)
                            @Html.TextBoxFor(m => m.Address.FaxNumber)
                            @Html.ValidationMessageFor(m => m.Address.FaxNumber)
                        </div>
                    </div>
                    @if (!String.IsNullOrEmpty(Model.Address.AddressId) && Model.Address.Name != null)
                    {
                        <div class="control-group">
                            <div class="control">
                                @if (!Model.Address.Name.Contains(UserHelper.DefaultBilling))
                                {<label>
                                     @Html.CheckBoxFor(m => m.IsDefaultBilling)
                                     <span>@("Save as Default Billing Address".Localize())</span>
                                 </label>
                                }


                                @if (!Model.Address.Name.Contains(UserHelper.DefaultShipping))
                                {
                                    <label>
                                        @Html.CheckBoxFor(m => m.IsDefaultShipping)
                                        <span>@("Save as Default Shipping Address".Localize())</span>
                                    </label>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>
    </fieldset>
    <div class="buttons">
        <p class="required">* @("Required Fields".Localize())</p>
        <button>
            <span>@("Save Address".Localize())</span>
        </button>
        <a href="@Url.Action("AddressBook", "Account")" class="back">« @("Back".Localize())</a>
    </div>
}