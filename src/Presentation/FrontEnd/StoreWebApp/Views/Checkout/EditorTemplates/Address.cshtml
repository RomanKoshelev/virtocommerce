@model CheckoutAddressModel

<script language="javascript">

    $(document).ready(function () {
        var id = '@ViewData.TemplateInfo.GetFullHtmlFieldId(String.Empty)';
        var c = new VirtoAddress(id);
    });
</script>
<div class="control-group">
    <input type="text" id="geocomplete-@ViewData.TemplateInfo.GetFullHtmlFieldId(String.Empty)">
    <img src="//maps.gstatic.com/mapfiles/api-3/images/powered-by-google-on-white2.png">
</div>
@Html.HiddenFor(m => m.Address.Name)
<div class="control-group">
    <div class="column">
        @Html.LabelForEx(m => m.Address.FirstName)
        @Html.TextBoxFor(m => m.Address.FirstName)
        @Html.ValidationMessageFor(m => m.Address.FirstName)
    </div>
    <div class="column">
        @Html.LabelForEx(m => m.Address.LastName)
        @Html.TextBoxFor(m => m.Address.LastName)
        @Html.ValidationMessageFor(m => m.Address.LastName)
    </div>
</div>
<div class="control-group">
    <div class="column">
        @Html.LabelForEx(m => m.Address.Email)
        @Html.TextBoxFor(m => m.Address.Email, new { @class = "validate-email" })
        @Html.ValidationMessageFor(m => m.Address.Email)
    </div>
    <div class="column">
        @Html.LabelForEx(m => m.Address.DaytimePhoneNumber)
        @Html.TextBoxFor(m => m.Address.DaytimePhoneNumber)
        @Html.ValidationMessageFor(m => m.Address.DaytimePhoneNumber)
    </div>
</div>
<div id="geo-details-@ViewData.TemplateInfo.GetFullHtmlFieldId(String.Empty)">
    <div class="control-group">
        @Html.LabelForEx(m => m.Address.Line1)
        @Html.TextBoxFor(m => m.Address.Line1, new { data_geo = "route" })
        @Html.ValidationMessageFor(m => m.Address.Line1)
        @Html.TextBoxFor(m => m.Address.Line2, new { @class = "address" })
    </div>
    <div class="control-group">
        @Html.LabelForEx(m => m.Address.CountryCode)
        @Html.DropDownListFor(m => m.Address.CountryCode, new SelectList(Model.Countries, "CountryId", "DisplayName"))
        @Html.HiddenFor(m => m.Address.CountryName, new { data_geo = "country" })
        @Html.ValidationMessageFor(m => m.Address.CountryCode)
    </div>
    <div class="control-group">
        @Html.LabelForEx(m => m.Address.City)
        @Html.TextBoxFor(m => m.Address.City, new { data_geo = "locality" })
        @Html.ValidationMessageFor(m => m.Address.City)
    </div>
    <div class="control-group">
        <div class="column">
            @Html.LabelForEx(m => m.Address.PostalCode)
            @Html.TextBoxFor(m => m.Address.PostalCode, new { @class = "validate-zip-international", data_geo = "postal_code" })<br />
            @Html.ValidationMessageFor(m => m.Address.PostalCode)
        </div>
        <div class="column">
            @Html.LabelForEx(m => m.Address.StateProvince)
            @Html.DropDownList("StateProvinceId", new SelectList(new[] { "select state/province" }))
            @Html.TextBoxFor(m => m.Address.StateProvince, new { style = "display:none", data_geo = "administrative_area_level_1_short" })<br />
            @Html.ValidationMessageFor(m => m.Address.StateProvince)
        </div>
    </div>
</div>
<div class="control-group">
    <div class="column">
        @Html.LabelForEx(m => m.Address.Organization)
        @Html.TextBoxFor(m => m.Address.Organization)
        @Html.ValidationMessageFor(m => m.Address.Organization)
    </div>
    <div class="column">
        @Html.LabelForEx(m => m.Address.FaxNumber)
        @Html.TextBoxFor(m => m.Address.FaxNumber)
        @Html.ValidationMessageFor(m => m.Address.FaxNumber)
    </div>
</div>
