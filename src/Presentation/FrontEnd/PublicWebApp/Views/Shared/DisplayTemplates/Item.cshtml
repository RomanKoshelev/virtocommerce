@using System.Globalization
@model ItemModel
           
<script>
    $(function ()
    {
        $("li#" + "@Model.CatalogItem.Id" + " #rateit").rateit({ resetable: false, readonly: true, value: @Model.CatalogItem.Rating.ToString(CultureInfo.InvariantCulture), starwidth: 11, starheight: 11 });
    })
</script>

@{
    var itemClass = "item";
    if (Model.IsNew)
    {
        itemClass = string.Concat(@itemClass, " ", "new");
    }
    if (Model.IsSale)
    {
        itemClass = string.Concat(@itemClass, " ", "sale");
    }
}

<li class="@itemClass" id="@Model.CatalogItem.Id">
    <div class="inner">
        <a href="@Url.ItemUrl(Model.CatalogItem.Id, Model.CatalogItem.Outline, Model.CatalogItem.MainProductId)" title="@Model.DisplayName" class="product-image">
            <figure>
                <img src="@Url.Image(Model.CatalogItem, "primaryimage")" alt="@Model.DisplayName" onerror="this.onerror=null;this.src='@Href("~/Content/themes/default/images/blank.png")';" />
            </figure>
        </a>
        <div class="product-info">
            <span class="title">@Model.DisplayName</span>
            <div class="ratings">
                <div id="rateit"></div>
            </div>
            @if (ViewData.ContainsKey("hidePrices"))
            {
                <div class="price">
                </div>
            }
            else if (Model.Price != null && Model.Price.Type != PriceType.None)
            {
                @Html.DisplayFor(model => model.Price)
            }
            <div class="cart">
                @{Html.RenderPartial("AddToCart", Model, new ViewDataDictionary { { "View", "List" } });}
            </div>
            <ul class="add-to-links">
                @{Html.RenderPartial("AddToLinks", Model);}
            </ul>
        </div>
    </div>
</li>
