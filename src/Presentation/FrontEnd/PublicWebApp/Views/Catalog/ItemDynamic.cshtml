@using System.Globalization
@model ItemModel
           
@*<script>
    $(function ()
    {
        $(".rating").rateit({ resetable: false, readonly: true, value: @Model.CatalogItem.Rating.ToString(CultureInfo.InvariantCulture), starwidth: 11, starheight: 11 });
    })
</script>*@

@helper RenderAddReview()
{
    <a href="@Url.Action("AddReview", "Catalog", new { id = Model.CatalogItem.Id })" rel="popup">@("Add Your Review".Localize())</a>
}

<div class="product-shop">
    <header class="product-name">
        <h1>@Model.DisplayName</h1>
    </header>
    @*@{
        var firstOrDefault = SettingsHelper.GetSettings("ShareButtonsHtml").FirstOrDefault();
        if (firstOrDefault != null)
        {
        <div class="share-links">
            @Html.Raw(firstOrDefault.ToString())
        </div>
        }
    }*@
    <div class="ratings">
        <div class="rating" style="display: none;">
        </div>
    </div>
    <div class="ratings-links">
        <ul>
            <li>
                <a href="#" id="show_reviews_link" style="display: none;">
                    <span class="pr-review-count-number"></span>&nbsp;@("Review(s)".Localize())
                </a>
            </li>
            <li>
                @RenderAddReview()
            </li>
        </ul>
    </div>
    <div id="mainPrice">@Html.DisplayFor(m => m.Price)</div>
    <div class="available">
        <span class="in-stock">@Model.Availability.AvailabilityString</span>
        <span class="sku">SKU: @Model.CatalogItem.Code</span>
    </div>
    <div class="short-description">
        <p>
            @if (Model.CatalogItem.EditorialReviews != null && Model.CatalogItem.EditorialReviews.Length > 0)
            {
                foreach (var review in Model.CatalogItem.EditorialReviews)
                {
                    if (review.ReviewType == "QuickReview")
                    {
                @Html.Raw(review.Content)
                    }
                }
            }
        </p>
    </div>
    <div class="variations clearfix">
    </div>
    <div class="qty">
        <label for="qty">@("Qty".Localize()):</label>
        <input type="text" name="qty" id="qty" maxlength="12" value="1" title="Quantity"
                                   data-val-required="The quantity field is required." 
                                   data-val-range-min="@Model.Availability.MinQuantity" 
                                   data-val-range-max="@Model.Availability.MaxQuantity" 
                                   data-val-range="@("Select quantity in range".Localize()) @string.Format("{0:#} - {1:#}", Model.Availability.MinQuantity, @Model.Availability.MaxQuantity)" 
                                   data-val-regex-pattern="^\d{@Model.Availability.MinQuantity.DigitCount(),@Model.Availability.MaxQuantity.DigitCount()}$"
                                   data-val-regex="@("Quantity must be a positive integer".Localize())" 
                                   data-val="true" />
        <br />
        <span data-valmsg-replace="true" data-valmsg-for="qty" class="field-validation-valid" style="float: left;"></span>
    </div>
    <div class="add-to-cart">
        @{Html.RenderPartial("AddToCart", Model, new ViewDataDictionary { { "View", "Details" } });}
    </div>
    <ul class="add-to-links">
        @{Html.RenderPartial("AddToLinks", Model, new ViewDataDictionary { { "View", "Details" } });}
        @*                            <li class="email-friend"><a href="">Email to a Friend</a></li>*@
    </ul>
</div>
