<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="VirtoCommerce">
      <section name="Order" type="VirtoCommerce.Foundation.Orders.OrderConfiguration,VirtoCommerce.Foundation" />
      <section name="Catalog" type="VirtoCommerce.Foundation.Catalogs.CatalogConfiguration,VirtoCommerce.Foundation" />
      <section name="Import" type="VirtoCommerce.Foundation.Importing.ImportConfiguration,VirtoCommerce.Foundation" />
      <section name="Search" type="VirtoCommerce.Foundation.Search.SearchConfiguration,VirtoCommerce.Foundation" />
      <section name="Workflow" type="VirtoCommerce.Foundation.Frameworks.Workflow.WorkflowConfiguration, VirtoCommerce.Foundation" />
      <section name="Inventory" type="VirtoCommerce.Foundation.Inventories.InventoryConfiguration,VirtoCommerce.Foundation" />
      <section name="AzureRepository" type="VirtoCommerce.Foundation.Data.Azure.AzureConfiguration, VirtoCommerce.Foundation.Data.Azure" />
      <section name="Store" type="VirtoCommerce.Foundation.Stores.StoreConfiguration,VirtoCommerce.Foundation" />
      <section name="Customer" type="VirtoCommerce.Foundation.Customers.CustomerConfiguration,VirtoCommerce.Foundation" />
      <section name="Security" type="VirtoCommerce.Foundation.Security.SecurityConfiguration,VirtoCommerce.Foundation" />
      <section name="Review" type="VirtoCommerce.Foundation.Reviews.ReviewConfiguration,VirtoCommerce.Foundation" />
      <section name="Reporting" type="VirtoCommerce.Foundation.Reporting.ReportingConfiguration,VirtoCommerce.Foundation" />
      <section name="Marketing" type="VirtoCommerce.Foundation.Marketing.MarketingConfiguration,VirtoCommerce.Foundation" />
      <section name="DynamicContent" type="VirtoCommerce.Foundation.Marketing.DynamicContent.DynamicContentConfiguration,VirtoCommerce.Foundation" />
      <section name="AppConfig" type="VirtoCommerce.Foundation.AppConfig.AppConfigConfiguration,VirtoCommerce.Foundation" />
      <section name="Asset" type="VirtoCommerce.Foundation.Assets.AssetConfiguration,VirtoCommerce.Foundation" />
    </sectionGroup>
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <connectionStrings configSource="app_data\virto\configuration\connectionStrings.local.config" />
  <!-- Virto Commerce configuration -->
  <VirtoCommerce>
    <!-- Azure Repository Configuration -->
    <AzureRepository configSource="app_data\virto\configuration\Repository.Azure.config" />
    <!-- Order Configuration -->
    <Order configSource="app_data\virto\configuration\Order.config" />
    <!-- Catalog Configuration -->
    <Catalog configSource="app_data\virto\configuration\Catalog.config" />
    <!-- Import Configuration -->
    <Import configSource="app_data\virto\configuration\Import.config" />
    <!-- Search Configuration -->
    <Search configSource="app_data\virto\configuration\Search.config" />
    <!-- Store Configuration -->
    <Store configSource="app_data\virto\configuration\Store.config" />
    <!-- Inventory Configuration -->
    <Inventory configSource="app_data\virto\configuration\Inventory.config" />
    <!-- Customer Configuration -->
    <Customer configSource="app_data\virto\configuration\Customer.config" />
    <!-- Security Configuration -->
    <Security configSource="app_data\virto\configuration\Security.config" />
    <!-- Review Configuration -->
    <Review configSource="app_data\virto\configuration\Review.config" />
    <!-- Reporting Configuration -->
    <Reporting configSource="app_data\virto\configuration\Reporting.config" />
    <!-- Workflow Configuration -->
    <Workflow configSource="app_data\virto\configuration\Workflow.config" />
    <!-- Marketing Configuration -->
    <Marketing configSource="app_data\virto\configuration\Marketing.config" />
    <!-- Marketing Configuration -->
    <DynamicContent configSource="app_data\virto\configuration\DynamicContent.config" />
    <!-- System Configuration -->
    <AppConfig configSource="app_data\virto\configuration\AppConfig.config" />
    <!-- Asset Configuration -->
    <Asset configSource="app_data\virto\configuration\Asset.config" />
  </VirtoCommerce>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="DefaultStore" value="SampleStore" />
    <add key="SchedulerHost" value="Primary" />
  </appSettings>
  <system.web>
    <globalization culture="en-US" uiCulture="en-US" />
    <httpRuntime targetFramework="4.5" maxUrlLength="1024" />
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="Microsoft.Data.Services, Version=5.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </assemblies>
    </compilation>
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    <anonymousIdentification enabled="true" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
      -->
    <sessionState mode="InProc" customProvider="DefaultSessionProvider">
      <providers>
        <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
      </providers>
    </sessionState>
    <caching>
      <!--<sqlCacheDependency enabled="true" pollTime="5000" >
        <databases>
          <add name="VirtoCommerce" connectionStringName="VirtoCommerce" pollTime="5000" />
        </databases>
      </sqlCacheDependency>-->
      <outputCache enableOutputCache="true" defaultProvider="MemoryCache">
        <providers>
          <add name="MemoryCache" type="VirtoCommerce.Web.Client.Caching.MemoryCacheProvider, VirtoCommerce.WebClient" />
        </providers>
      </outputCache>
      <outputCacheSettings>
        <outputCacheProfiles>
          <add name="CatalogCache" duration="300" location="Server" varyByParam="*" />
          <add name="HomeCache" duration="300" location="Server" varyByParam="*" varyByCustom="storeparam" />
          <add name="SearchCache" duration="300" location="Server" varyByParam="*" />
          <!--<add name="BannerCache" duration="0" varyByParam="placeName" />-->
          <add name="AssetCache" duration="300" location="ServerAndClient" varyByParam="path" />
          <add name="StoreCache" duration="300" location="Server" varyByParam="*" varyByCustom="storeparam" />
          <add name="LayoutStatic" duration="3000" location="Server" varyByParam="lang" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
  </system.web>
  <system.serviceModel>
    <services configSource="app_data\virto\configuration\services.local.config" />
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" minFreeMemoryPercentageToActivateService="0">
      <serviceActivations>
        <!-- SOAP Services -->
        <add relativeAddress="~/Virto/Services/AuthenticationService.svc" service="VirtoCommerce.Web.Client.Services.Security.AuthenticationService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/AssetService.svc" service="VirtoCommerce.Foundation.Assets.Services.AssetService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/ImportService.svc" service="VirtoCommerce.Foundation.Importing.Services.ImportService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/SecurityService.svc" service="VirtoCommerce.Web.Client.Services.Security.SecurityService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/OrderService.svc" service="VirtoCommerce.Foundation.Orders.Services.OrderService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/SequenceService.svc" service="VirtoCommerce.Web.Client.Services.Sequences.SequenceService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/ReportingService.svc" service="VirtoCommerce.Foundation.Reporting.Services.ReportingService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <!-- OData Services -->
        <add relativeAddress="~/Virto/DataServices/ImportDataService.svc" service="VirtoCommerce.Foundation.Data.Importing.DSImportService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/AppConfigDataService.svc" service="VirtoCommerce.Foundation.Data.AppConfig.DSAppConfigService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/CatalogDataService.svc" service="VirtoCommerce.Foundation.Data.Catalogs.DSCatalogService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/CustomerDataService.svc" service="VirtoCommerce.Foundation.Data.Customers.DSCustomerService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/DynamicContentDataService.svc" service="VirtoCommerce.Foundation.Data.Marketing.DSDynamicContentService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/InventoryDataService.svc" service="VirtoCommerce.Foundation.Data.Inventories.DSInventoryService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/MarketingDataService.svc" service="VirtoCommerce.Foundation.Data.Marketing.DSMarketingService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/OrderDataService.svc" service="VirtoCommerce.Foundation.Data.Orders.DSOrderService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/ReviewDataService.svc" service="VirtoCommerce.Foundation.Data.Reviews.ReviewDataService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/SearchDataService.svc" service="VirtoCommerce.Foundation.Data.Search.DSSearchService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/SecurityDataService.svc" service="VirtoCommerce.Foundation.Data.Security.DSSecurityService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/StoreDataService.svc" service="VirtoCommerce.Foundation.Data.Stores.DSStoreService" factory="System.Data.Services.DataServiceHostFactory" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings>
      <webHttpBinding>
        <binding maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="32" maxStringContentLength="819200" maxArrayLength="506384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
        </binding>
      </webHttpBinding>
      <wsHttpBinding>
        <!-- Default endpoint -->
        <binding maxReceivedMessageSize="2147483647">
        </binding>
        <binding name="NonAuthenticationServiceBinding" maxReceivedMessageSize="2147483647">
          <security mode="None">
            <message clientCredentialType="None" />
          </security>
        </binding>
        <binding name="AuthenticationServiceBinding" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="506384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <message clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="non_secure_behavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!-- comment out this line to disable tokens, good for testing services through a web browser -->
          <serviceAuthorization serviceAuthorizationManagerType="VirtoCommerce.Web.Client.Services.Security.OAuthAuthorizationManager, VirtoCommerce.WebClient" principalPermissionMode="Custom" />
        </behavior>
        <behavior name="DataServiceBehavior">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="errorHandler" type="VirtoCommerce.Web.Client.Services.ErrorHandlerElement, VirtoCommerce.WebClient" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31BF3856AD364E35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780CCD10D57B246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780CCD10D57B246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.0.0" newVersion="5.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.0.0" newVersion="5.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.0.0" newVersion="1.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="MvcSiteMapProvider" publicKeyToken="1923abe4657913cc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.6.1.0" newVersion="4.6.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  </runtime>
  <entityFramework codeConfigurationType="VirtoCommerce.Foundation.Frameworks.SqlDbConfiguration, VirtoCommerce.Foundation">
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>